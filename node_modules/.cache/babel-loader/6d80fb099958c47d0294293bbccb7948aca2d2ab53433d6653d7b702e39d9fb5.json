{"ast":null,"code":"export default {\n  props: {\n    selectedDay: Object,\n    monthNames: Array,\n    month: Number,\n    year: Number,\n    formatDate: Function,\n    formatTime: Function\n  },\n  data() {\n    return {\n      selectedRadiograph: null,\n      isSlidingDown: false,\n      isSlidingUp: false,\n      isImageVisible: false,\n      isModalOpen: false,\n      modalImageUrl: null\n    };\n  },\n  mounted() {\n    console.log(\"DayDetails Mounted\");\n    console.log(\"Props - Selected Day:\", this.selectedDay); // Mostra il giorno selezionato\n    if (this.selectedDay && this.selectedDay.operations) {\n      console.log(\"Props - Operations:\", this.selectedDay.operations); // Mostra le operazioni\n      this.selectedDay.operations.forEach((operation, index) => {\n        console.log(`Operation ${index + 1}:`, operation); // Mostra ogni operazione singolarmente\n      });\n    } else {\n      console.warn(\"No operations found for selected day!\");\n    }\n  },\n  computed: {\n    orderedOperations() {\n      return this.selectedDay.operations.slice().sort((a, b) => {\n        // Converti la data in millisecondi per confrontarle\n        const timeA = new Date(a.operationDate).getTime();\n        const timeB = new Date(b.operationDate).getTime();\n        return timeA - timeB; // Ordina in ordine crescente\n      });\n    }\n  },\n  methods: {\n    enlargeRadiograph(url) {\n      if (!url) {\n        console.error(\"URL mancante o non valido\");\n        return;\n      }\n      this.modalImageUrl = url; // Imposta l'immagine da mostrare nel modale\n      this.isModalOpen = true; // Mostra il modale\n    },\n    closeModal() {\n      this.isModalOpen = false; // Chiudi il modale\n      this.modalImageUrl = null; // Resetta l'URL\n    },\n    toggleRadiograph(radiograph) {\n      if (this.selectedRadiograph === radiograph) {\n        this.isSlidingUp = true;\n        this.isSlidingDown = false;\n        setTimeout(() => {\n          this.selectedRadiograph = null;\n          this.isImageVisible = false;\n        }, 500); // Il tempo di transizione deve corrispondere a quello del CSS\n      } else {\n        this.selectedRadiograph = radiograph;\n        this.isSlidingDown = true;\n        this.isSlidingUp = false;\n        this.isImageVisible = true;\n      }\n    },\n    beforeEnter(el) {\n      el.style.opacity = 0;\n    },\n    enter(el, done) {\n      el.offsetHeight; // Trigger reflow\n      el.style.transition = \"opacity 0.5s ease\";\n      el.style.opacity = 1;\n      done();\n    },\n    leave(el, done) {\n      el.style.transition = \"opacity 0.5s ease\";\n      el.style.opacity = 0;\n      done();\n    }\n  }\n};","map":{"version":3,"names":["props","selectedDay","Object","monthNames","Array","month","Number","year","formatDate","Function","formatTime","data","selectedRadiograph","isSlidingDown","isSlidingUp","isImageVisible","isModalOpen","modalImageUrl","mounted","console","log","operations","forEach","operation","index","warn","computed","orderedOperations","slice","sort","a","b","timeA","Date","operationDate","getTime","timeB","methods","enlargeRadiograph","url","error","closeModal","toggleRadiograph","radiograph","setTimeout","beforeEnter","el","style","opacity","enter","done","offsetHeight","transition","leave"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\DayDetails.vue"],"sourcesContent":["<template>\r\n  <transition\r\n    name=\"fade\"\r\n    @before-enter=\"beforeEnter\"\r\n    @enter=\"enter\"\r\n    @leave=\"leave\"\r\n  >\r\n    <div v-if=\"selectedDay\" class=\"day-details\">\r\n      <h2>\r\n        Dettagli del Giorno: {{ selectedDay.date }} {{ monthNames[month] }}\r\n        {{ year }}\r\n      </h2>\r\n\r\n      <!-- Mostra operazioni pianificate se presenti -->\r\n      <div v-if=\"selectedDay.operations.length > 0\">\r\n        <h3 class=\"small-b-text\">Operazioni pianificate:</h3>\r\n        <ul>\r\n          <li v-for=\"operation in orderedOperations\" :key=\"operation.id\">\r\n            <span class=\"small-text\"\r\n              >Ore: {{ formatTime(operation.operationDate) }}</span\r\n            ><br />\r\n            <span class=\"small-text\"\r\n              >Descrizione: {{ operation.description }}</span\r\n            ><br />\r\n            <span class=\"small-text\"\r\n              >Paziente: {{ operation.patientName }}\r\n              {{ operation.patientSurname }}</span\r\n            ><br />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div v-if=\"selectedDay.radiographs.length > 0\">\r\n        <h3 class=\"small-b-text\">Radiografie caricate:</h3>\r\n        <ul class=\"radiograph-list\">\r\n          <li\r\n            v-for=\"radiograph in selectedDay.radiographs\"\r\n            :key=\"radiograph.name\"\r\n            class=\"radiograph-item\"\r\n          >\r\n            <div>\r\n              {{ radiograph.date }} -\r\n              <button @click=\"toggleRadiograph(radiograph)\" class=\"view-link\">\r\n                Visualizza\r\n              </button>\r\n            </div>\r\n\r\n            <div\r\n              v-if=\"selectedRadiograph === radiograph\"\r\n              class=\"radiograph-preview\"\r\n            >\r\n              <div\r\n                class=\"content-with-animation\"\r\n                :class=\"{\r\n                  'slide-down': isSlidingDown,\r\n                  'slide-up': isSlidingUp,\r\n                }\"\r\n              >\r\n                <img\r\n                  :src=\"radiograph.url\"\r\n                  alt=\"Radiografia\"\r\n                  class=\"radiograph-image\"\r\n                  v-show=\"isImageVisible\"\r\n                />\r\n              </div>\r\n              <div class=\"radiograph-controls\">\r\n                <button\r\n                  @click=\"enlargeRadiograph(radiograph.url)\"\r\n                  class=\"control-button\"\r\n                >\r\n                  <img src=\"@/assets/zoom.svg\" alt=\"Zoom\" class=\"icon\" />\r\n                </button>\r\n                <a\r\n                  :href=\"`/api/download-radiograph?url=${encodeURIComponent(\r\n                    radiograph.url\r\n                  )}&filename=radiografia_${radiograph.date}.png`\"\r\n                  class=\"control-button\"\r\n                  download\r\n                >\r\n                  <img\r\n                    src=\"@/assets/download.svg\"\r\n                    alt=\"Download\"\r\n                    class=\"icon\"\r\n                  />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <!-- Mostra il messaggio solo se NON ci sono operazioni e radiografie -->\r\n      <div\r\n        v-if=\"\r\n          selectedDay.operations.length === 0 &&\r\n          selectedDay.radiographs.length === 0\r\n        \"\r\n      >\r\n        <p>Non ci sono attivit√† pianificate per questa data.</p>\r\n      </div>\r\n\r\n      <div v-if=\"isModalOpen\" class=\"modal\">\r\n        <div class=\"modal-content\">\r\n          <span @click=\"closeModal\" class=\"close-button\">\r\n            <img src=\"@/assets/cross.svg\" alt=\"Chiudi\" class=\"close-icon\" />\r\n          </span>\r\n          <img\r\n            :src=\"modalImageUrl\"\r\n            alt=\"Immagine ingrandita\"\r\n            class=\"modal-image\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    selectedDay: Object,\r\n    monthNames: Array,\r\n    month: Number,\r\n    year: Number,\r\n    formatDate: Function,\r\n    formatTime: Function,\r\n  },\r\n  data() {\r\n    return {\r\n      selectedRadiograph: null,\r\n      isSlidingDown: false,\r\n      isSlidingUp: false,\r\n      isImageVisible: false,\r\n      isModalOpen: false,\r\n      modalImageUrl: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    console.log(\"DayDetails Mounted\");\r\n    console.log(\"Props - Selected Day:\", this.selectedDay); // Mostra il giorno selezionato\r\n    if (this.selectedDay && this.selectedDay.operations) {\r\n      console.log(\"Props - Operations:\", this.selectedDay.operations); // Mostra le operazioni\r\n      this.selectedDay.operations.forEach((operation, index) => {\r\n        console.log(`Operation ${index + 1}:`, operation); // Mostra ogni operazione singolarmente\r\n      });\r\n    } else {\r\n      console.warn(\"No operations found for selected day!\");\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    orderedOperations() {\r\n      return this.selectedDay.operations.slice().sort((a, b) => {\r\n        // Converti la data in millisecondi per confrontarle\r\n        const timeA = new Date(a.operationDate).getTime();\r\n        const timeB = new Date(b.operationDate).getTime();\r\n        return timeA - timeB; // Ordina in ordine crescente\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    enlargeRadiograph(url) {\r\n      if (!url) {\r\n        console.error(\"URL mancante o non valido\");\r\n        return;\r\n      }\r\n      this.modalImageUrl = url; // Imposta l'immagine da mostrare nel modale\r\n      this.isModalOpen = true; // Mostra il modale\r\n    },\r\n    closeModal() {\r\n      this.isModalOpen = false; // Chiudi il modale\r\n      this.modalImageUrl = null; // Resetta l'URL\r\n    },\r\n    toggleRadiograph(radiograph) {\r\n      if (this.selectedRadiograph === radiograph) {\r\n        this.isSlidingUp = true;\r\n        this.isSlidingDown = false;\r\n        setTimeout(() => {\r\n          this.selectedRadiograph = null;\r\n          this.isImageVisible = false;\r\n        }, 500); // Il tempo di transizione deve corrispondere a quello del CSS\r\n      } else {\r\n        this.selectedRadiograph = radiograph;\r\n        this.isSlidingDown = true;\r\n        this.isSlidingUp = false;\r\n        this.isImageVisible = true;\r\n      }\r\n    },\r\n    beforeEnter(el) {\r\n      el.style.opacity = 0;\r\n    },\r\n    enter(el, done) {\r\n      el.offsetHeight; // Trigger reflow\r\n      el.style.transition = \"opacity 0.5s ease\";\r\n      el.style.opacity = 1;\r\n      done();\r\n    },\r\n    leave(el, done) {\r\n      el.style.transition = \"opacity 0.5s ease\";\r\n      el.style.opacity = 0;\r\n      done();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.day-details {\r\n  margin-top: 50px;\r\n  text-align: left;\r\n  transition: opacity 0.5s ease;\r\n}\r\n\r\n.day-details h2 {\r\n  font-size: 1em;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.day-details p {\r\n  font-size: 0.7em;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.day-details ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.day-details li {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.small-b-text {\r\n  font-size: 0.9rem; /* Puoi regolare la dimensione come preferisci */\r\n  font-weight: 600; /* Opzionale, per mantenere il testo in grassetto */\r\n}\r\n\r\n.small-text {\r\n  font-size: 0.8rem; /* Puoi regolare la dimensione come preferisci */\r\n}\r\n\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.5s ease;\r\n}\r\n\r\n.fade-enter,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.radiograph-list {\r\n  max-width: 800px;\r\n  margin: 20px auto;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli.radiograph-item {\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid #ccc;\r\n  font-size: 12px;\r\n  color: #444;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.view-link {\r\n  color: #007bff;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: color 0.5s ease;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.view-link:hover {\r\n  color: #0056b3;\r\n}\r\n\r\n.radiograph-preview {\r\n  margin-top: 15px;\r\n  width: 95%;\r\n  align-self: center;\r\n}\r\n\r\n.radiograph-image {\r\n  width: 80%;\r\n  display: block;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.content-with-animation {\r\n  overflow: hidden;\r\n  max-height: 0;\r\n  transition: max-height 0.5s ease-out, transform 0.5s ease-out;\r\n  transform: translateY(-20px);\r\n}\r\n\r\n.content-with-animation.slide-down {\r\n  max-height: 550px;\r\n  transform: translateY(0);\r\n}\r\n\r\n.content-with-animation.slide-up {\r\n  max-height: 0;\r\n  transform: translateY(-20px);\r\n}\r\n\r\n.radiograph-controls {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.control-button {\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-left: 10px;\r\n}\r\n\r\n.icon {\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.8); /* Sfondo scuro semi-trasparente */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000; /* Assicurati che sia sopra altri elementi */\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n  background: white; /* Sfondo del contenuto */\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  max-width: 90%;\r\n  max-height: 90%;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.modal-image {\r\n  max-width: 100%; /* Adatta la larghezza all'area del modale */\r\n  max-height: 100%; /* Adatta l'altezza all'area del modale */\r\n  border-radius: 4px; /* Angoli arrotondati per l'immagine */\r\n  object-fit: contain; /* Mantieni le proporzioni */\r\n}\r\n\r\n.close-button {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 16px;\r\n  cursor: pointer;\r\n  background: none;\r\n  border: none;\r\n}\r\n\r\n.close-icon {\r\n  width: 24px; /* Dimensioni dell'icona di chiusura */\r\n  height: 24px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}