{"ast":null,"code":"import { resetPassword } from \"@/services/api-service\";\nimport eyeOn from \"@/assets/eye-on.svg\";\nimport eyeOff from \"@/assets/eye-off.svg\";\nexport default {\n  name: \"ResetPassword\",\n  data() {\n    return {\n      successMessage: null,\n      errorMessage: null,\n      isLoading: false,\n      newPassword: \"\",\n      confirmPassword: \"\",\n      showPassword: false,\n      showConfirmPassword: false,\n      passwordInputTouched: false,\n      confirmPasswordTouched: false,\n      eyeOnIcon: eyeOn,\n      eyeOffIcon: eyeOff\n    };\n  },\n  computed: {\n    isPasswordValid() {\n      if (!this.newPassword) return false;\n      const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,}$/;\n      return regex.test(this.newPassword);\n    },\n    isPasswordsMatch() {\n      return this.newPassword === this.confirmPassword && this.isPasswordValid;\n    }\n  },\n  methods: {\n    toggleShowPassword() {\n      this.showPassword = !this.showPassword;\n    },\n    toggleShowConfirmPassword() {\n      this.showConfirmPassword = !this.showConfirmPassword;\n    },\n    async updatePassword() {\n      if (!this.isPasswordValid) {\n        this.errorMessage = \"La password non soddisfa i requisiti. Correggila prima di procedere.\";\n        return;\n      }\n      try {\n        this.isLoading = true;\n        await resetPassword(this.$route.params.uid, this.newPassword);\n        this.successMessage = \"La tua password è stata aggiornata con successo!\";\n        this.errorMessage = null;\n      } catch (error) {\n        this.errorMessage = error.response?.data?.error || \"Errore durante l'aggiornamento della password.\";\n        this.successMessage = null;\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    goToLogin() {\n      this.$router.push(\"/login\");\n    }\n  }\n};","map":{"version":3,"names":["resetPassword","eyeOn","eyeOff","name","data","successMessage","errorMessage","isLoading","newPassword","confirmPassword","showPassword","showConfirmPassword","passwordInputTouched","confirmPasswordTouched","eyeOnIcon","eyeOffIcon","computed","isPasswordValid","regex","test","isPasswordsMatch","methods","toggleShowPassword","toggleShowConfirmPassword","updatePassword","$route","params","uid","error","response","goToLogin","$router","push"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\ResetPassword.vue"],"sourcesContent":["<template>\n  <div class=\"reset-password\">\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4\" v-if=\"!successMessage\">Reimposta la tua password</h2>\n      <h2 class=\"mb-4\" v-if=\"successMessage\">{{ successMessage }}</h2>\n\n      <p v-if=\"errorMessage\" class=\"text-danger mt-1\">{{ errorMessage }}</p>\n\n      <div v-if=\"!successMessage\">\n        <!-- Campo per la nuova password -->\n        <label for=\"new-password\">Inserisci la nuova password:</label>\n        <div class=\"input-group mt-2\">\n          <input\n            id=\"new-password\"\n            v-model=\"newPassword\"\n            :type=\"showPassword ? 'text' : 'password'\"\n            class=\"form-control\"\n            :class=\"{\n              'is-invalid':\n                !isPasswordValid && passwordInputTouched && newPassword !== '',\n            }\"\n            required\n            @input=\"passwordInputTouched = true\"\n            placeholder=\"Nuova password\"\n            :disabled=\"confirmPassword !== ''\"\n          />\n          <button\n            type=\"button\"\n            class=\"btn eye-button\"\n            @click=\"toggleShowPassword\"\n          >\n            <img\n              :src=\"showPassword ? eyeOffIcon : eyeOnIcon\"\n              alt=\"Toggle Password Visibility\"\n              class=\"eye-icon\"\n            />\n          </button>\n        </div>\n        <div\n          v-if=\"!isPasswordValid && passwordInputTouched && newPassword !== ''\"\n          class=\"text-danger mt-1\"\n        >\n          La password deve contenere almeno 8 caratteri, una lettera maiuscola,\n          una minuscola, un numero e un carattere speciale.\n        </div>\n\n        <!-- Campo per la conferma della password -->\n        <div v-if=\"isPasswordValid\">\n          <label for=\"confirm-password\" class=\"mt-3\"\n            >Conferma la password:</label\n          >\n          <div class=\"input-group mt-2\">\n            <input\n              id=\"confirm-password\"\n              v-model=\"confirmPassword\"\n              :type=\"showConfirmPassword ? 'text' : 'password'\"\n              class=\"form-control\"\n              :class=\"{\n                'is-invalid':\n                  confirmPasswordTouched &&\n                  !isPasswordsMatch &&\n                  confirmPassword !== '',\n              }\"\n              required\n              @input=\"confirmPasswordTouched = true\"\n              placeholder=\"Conferma la password\"\n            />\n            <button\n              type=\"button\"\n              class=\"btn eye-button\"\n              @click=\"toggleShowConfirmPassword\"\n            >\n              <img\n                :src=\"showConfirmPassword ? eyeOffIcon : eyeOnIcon\"\n                alt=\"Toggle Confirm Password Visibility\"\n                class=\"eye-icon\"\n              />\n            </button>\n          </div>\n          <div\n            v-if=\"\n              confirmPasswordTouched &&\n              !isPasswordsMatch &&\n              confirmPassword !== ''\n            \"\n            class=\"text-danger mt-1\"\n          >\n            Le password non corrispondono.\n          </div>\n        </div>\n\n        <button\n          class=\"btn btn-primary mt-4\"\n          @click=\"updatePassword\"\n          :disabled=\"!isPasswordsMatch\"\n        >\n          Aggiorna Password\n        </button>\n      </div>\n\n      <div class=\"btn-group mt-4\" v-if=\"successMessage\">\n        <button class=\"btn btn-primary btn-next\" @click=\"goToLogin\">\n          Esegui il login\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { resetPassword } from \"@/services/api-service\";\nimport eyeOn from \"@/assets/eye-on.svg\";\nimport eyeOff from \"@/assets/eye-off.svg\";\n\nexport default {\n  name: \"ResetPassword\",\n  data() {\n    return {\n      successMessage: null,\n      errorMessage: null,\n      isLoading: false,\n      newPassword: \"\",\n      confirmPassword: \"\",\n      showPassword: false,\n      showConfirmPassword: false,\n      passwordInputTouched: false,\n      confirmPasswordTouched: false,\n      eyeOnIcon: eyeOn,\n      eyeOffIcon: eyeOff,\n    };\n  },\n  computed: {\n    isPasswordValid() {\n      if (!this.newPassword) return false;\n      const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,}$/;\n      return regex.test(this.newPassword);\n    },\n    isPasswordsMatch() {\n      return this.newPassword === this.confirmPassword && this.isPasswordValid;\n    },\n  },\n  methods: {\n    toggleShowPassword() {\n      this.showPassword = !this.showPassword;\n    },\n    toggleShowConfirmPassword() {\n      this.showConfirmPassword = !this.showConfirmPassword;\n    },\n    async updatePassword() {\n      if (!this.isPasswordValid) {\n        this.errorMessage =\n          \"La password non soddisfa i requisiti. Correggila prima di procedere.\";\n        return;\n      }\n\n      try {\n        this.isLoading = true;\n        await resetPassword(this.$route.params.uid, this.newPassword);\n\n        this.successMessage =\n          \"La tua password è stata aggiornata con successo!\";\n        this.errorMessage = null;\n      } catch (error) {\n        this.errorMessage =\n          error.response?.data?.error ||\n          \"Errore durante l'aggiornamento della password.\";\n        this.successMessage = null;\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    goToLogin() {\n      this.$router.push(\"/login\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n.form-control {\n  background: #f2f2f2;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 12px;\n}\n\n.reset-password {\n  background: #ffffff; /* Sfondo bianco, simile alla pagina di login */\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0); /* Rimuove ombre esterne */\n}\n\n.container {\n  max-width: 80%;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1); /* Simile alla shadow del login */\n  margin-top: 100px;\n  height: auto;\n  text-align: center; /* Centra il testo */\n  flex-grow: 1; /* Permette al contenuto principale di occupare lo spazio rimanente */\n  margin-left: 20px; /* Margine sinistro per distanziare il contenuto dalla sidebar */\n}\n\nh2 {\n  font-size: 18px; /* Uniforma il font size al login */\n  margin-bottom: 30px;\n}\n\np {\n  font-size: 14px;\n  color: #6c757d;\n}\n\n.btn-group .btn {\n  width: 100%; /* Assicura che i bottoni occupino l'intera larghezza */\n  margin-top: 20px;\n  padding: 10px;\n}\n\n.btn-primary {\n  background-color: #007bff;\n  color: white;\n  padding: 8px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 80%;\n  max-width: 300px;\n  min-width: 200px;\n  font-size: 13px;\n  transition: background-color 0.3s ease;\n  text-align: center;\n  display: inline-block;\n}\n\n.btn-primary:hover {\n  background-color: #0056b3;\n}\n\n.sidebar {\n  top: 0;\n  width: 250px; /* Imposta la larghezza della sidebar */\n  height: 100vh; /* Imposta l'altezza della sidebar al 100% della viewport */\n  padding: 20px; /* Padding interno */\n  background: linear-gradient(180deg, #212529, #343a40);\n}\n\n.sidebar .nav-link {\n  color: #cfd2d6;\n}\n\n.sidebar .nav-link:hover {\n  background-color: #495057;\n  border-radius: 5px;\n}\n\n.nav-link {\n  padding: 10px 15px; /* Aggiunge padding ai link per migliorarne l'aspetto */\n}\n\n@media (max-width: 767.98px) {\n  .navbar-brand {\n    font-size: 1.5rem;\n  }\n\n  .sidebar {\n    display: none;\n  }\n}\n\n.eye-button {\n  background: transparent;\n  border: 1px solid #ccc;\n  cursor: pointer;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  width: 46px;\n}\n\n.eye-icon {\n  width: 18px;\n  height: 18px;\n  margin: auto;\n}\n</style>\n"],"mappings":"AAkHA,SAASA,aAAY,QAAS,wBAAwB;AACtD,OAAOC,KAAI,MAAO,qBAAqB;AACvC,OAAOC,MAAK,MAAO,sBAAsB;AAEzC,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,IAAI;MACpBC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE,KAAK;MACnBC,mBAAmB,EAAE,KAAK;MAC1BC,oBAAoB,EAAE,KAAK;MAC3BC,sBAAsB,EAAE,KAAK;MAC7BC,SAAS,EAAEb,KAAK;MAChBc,UAAU,EAAEb;IACd,CAAC;EACH,CAAC;EACDc,QAAQ,EAAE;IACRC,eAAeA,CAAA,EAAG;MAChB,IAAI,CAAC,IAAI,CAACT,WAAW,EAAE,OAAO,KAAK;MACnC,MAAMU,KAAI,GAAI,kDAAkD;MAChE,OAAOA,KAAK,CAACC,IAAI,CAAC,IAAI,CAACX,WAAW,CAAC;IACrC,CAAC;IACDY,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACZ,WAAU,KAAM,IAAI,CAACC,eAAc,IAAK,IAAI,CAACQ,eAAe;IAC1E;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACZ,YAAW,GAAI,CAAC,IAAI,CAACA,YAAY;IACxC,CAAC;IACDa,yBAAyBA,CAAA,EAAG;MAC1B,IAAI,CAACZ,mBAAkB,GAAI,CAAC,IAAI,CAACA,mBAAmB;IACtD,CAAC;IACD,MAAMa,cAAcA,CAAA,EAAG;MACrB,IAAI,CAAC,IAAI,CAACP,eAAe,EAAE;QACzB,IAAI,CAACX,YAAW,GACd,sEAAsE;QACxE;MACF;MAEA,IAAI;QACF,IAAI,CAACC,SAAQ,GAAI,IAAI;QACrB,MAAMP,aAAa,CAAC,IAAI,CAACyB,MAAM,CAACC,MAAM,CAACC,GAAG,EAAE,IAAI,CAACnB,WAAW,CAAC;QAE7D,IAAI,CAACH,cAAa,GAChB,kDAAkD;QACpD,IAAI,CAACC,YAAW,GAAI,IAAI;MAC1B,EAAE,OAAOsB,KAAK,EAAE;QACd,IAAI,CAACtB,YAAW,GACdsB,KAAK,CAACC,QAAQ,EAAEzB,IAAI,EAAEwB,KAAI,IAC1B,gDAAgD;QAClD,IAAI,CAACvB,cAAa,GAAI,IAAI;MAC5B,UAAU;QACR,IAAI,CAACE,SAAQ,GAAI,KAAK;MACxB;IACF,CAAC;IACDuB,SAASA,CAAA,EAAG;MACV,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}