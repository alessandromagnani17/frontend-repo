{"ast":null,"code":"export default {\n  name: \"PatientRadiographs\",\n  props: {\n    patientId: {\n      type: String,\n      required: true\n    },\n    patientName: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      radiographs: [],\n      selectedRadiograph: null,\n      isModalOpen: false,\n      modalImageUrl: \"\",\n      isImageVisible: false,\n      isSlidingDown: false,\n      isSlidingUp: false\n    };\n  },\n  async mounted() {\n    try {\n      const response = await fetch(`/api/patients/${this.patientId}/radiographs`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        this.radiographs = await response.json();\n      } else {\n        console.error(\"Errore nel recupero delle radiografie.\");\n      }\n    } catch (error) {\n      console.error(\"Errore:\", error);\n    }\n  },\n  methods: {\n    toggleRadiograph(radiograph) {\n      if (this.selectedRadiograph === radiograph) {\n        this.isSlidingDown = false;\n        this.isSlidingUp = true;\n        setTimeout(() => {\n          this.isImageVisible = false;\n          this.selectedRadiograph = null;\n          this.isSlidingUp = false;\n        }, 300);\n      } else {\n        this.selectedRadiograph = radiograph;\n        this.isSlidingUp = false;\n        this.isSlidingDown = true;\n        this.isImageVisible = true;\n      }\n    },\n    enlargeRadiograph(url) {\n      this.modalImageUrl = url;\n      this.isModalOpen = true;\n    },\n    closeModal() {\n      this.isModalOpen = false;\n    },\n    async downloadRadiograph(radiograph) {\n      try {\n        // Effettua il fetch dell'immagine\n        const response = await fetch(radiograph.url);\n        const blob = await response.blob();\n\n        // Crea un URL oggetto per il blob\n        const url = window.URL.createObjectURL(blob);\n\n        // Crea un elemento link temporaneo\n        const link = document.createElement('a');\n        link.href = url;\n\n        // Imposta il nome del file per il download\n        // Usa il nome originale se disponibile, altrimenti usa un nome default\n        const fileName = radiograph.name || `radiografia_${new Date(radiograph.date).toISOString().split('T')[0]}.jpg`;\n        link.download = fileName;\n\n        // Aggiunge il link al documento, simula il click e lo rimuove\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n\n        // Pulisci l'URL oggetto\n        window.URL.revokeObjectURL(url);\n      } catch (error) {\n        console.error('Errore durante il download:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","patientId","type","String","required","patientName","data","radiographs","selectedRadiograph","isModalOpen","modalImageUrl","isImageVisible","isSlidingDown","isSlidingUp","mounted","response","fetch","method","headers","ok","json","console","error","methods","toggleRadiograph","radiograph","setTimeout","enlargeRadiograph","url","closeModal","downloadRadiograph","blob","window","URL","createObjectURL","link","document","createElement","href","fileName","Date","date","toISOString","split","download","body","appendChild","click","removeChild","revokeObjectURL"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/PatientRadiographs.vue"],"sourcesContent":["<template>\n  <div class=\"radiograph-list\">\n    <h2>Radiografie di {{ patientName }}</h2>\n    <ul v-if=\"radiographs.length\">\n      <li\n        v-for=\"radiograph in radiographs\"\n        :key=\"radiograph.name\"\n        class=\"radiograph-item\"\n      >\n        <div>\n          {{ radiograph.date }} -\n          <button @click=\"toggleRadiograph(radiograph)\" class=\"view-link\">\n            Visualizza\n          </button>\n        </div>\n\n        <div\n          v-if=\"selectedRadiograph === radiograph\"\n          class=\"radiograph-preview\"\n        >\n          <div\n            class=\"content-with-animation\"\n            :class=\"{ 'slide-down': isSlidingDown, 'slide-up': isSlidingUp }\"\n          >\n            <img\n              :src=\"radiograph.url\"\n              alt=\"Radiografia\"\n              class=\"radiograph-image\"\n              v-show=\"isImageVisible\"\n            />\n          </div>\n          <div class=\"radiograph-controls\">\n            <button\n              @click=\"enlargeRadiograph(radiograph.url)\"\n              class=\"control-button\"\n            >\n              <img src=\"@/assets/zoom.svg\" alt=\"Zoom\" class=\"icon\" />\n            </button>\n            <button\n              @click=\"downloadRadiograph(radiograph)\"\n              class=\"control-button\"\n            >\n              <img src=\"@/assets/download.svg\" alt=\"Download\" class=\"icon\" />\n            </button>\n          </div>\n        </div>\n      </li>\n    </ul>\n    <p v-else>Nessuna radiografia trovata per questo paziente.</p>\n\n    <div v-if=\"isModalOpen\" class=\"modal\">\n      <div class=\"modal-content\">\n        <span @click=\"closeModal\" class=\"close-button\">\n          <img src=\"@/assets/cross.svg\" alt=\"Chiudi\" class=\"close-icon\" />\n        </span>\n        <img\n          :src=\"modalImageUrl\"\n          alt=\"Immagine ingrandita\"\n          class=\"modal-image\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"PatientRadiographs\",\n  props: {\n    patientId: {\n      type: String,\n      required: true,\n    },\n    patientName: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      radiographs: [],\n      selectedRadiograph: null,\n      isModalOpen: false,\n      modalImageUrl: \"\",\n      isImageVisible: false,\n      isSlidingDown: false,\n      isSlidingUp: false,\n    };\n  },\n  async mounted() {\n    try {\n      const response = await fetch(\n        `/api/patients/${this.patientId}/radiographs`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (response.ok) {\n        this.radiographs = await response.json();\n      } else {\n        console.error(\"Errore nel recupero delle radiografie.\");\n      }\n    } catch (error) {\n      console.error(\"Errore:\", error);\n    }\n  },\n  methods: {\n    toggleRadiograph(radiograph) {\n      if (this.selectedRadiograph === radiograph) {\n        this.isSlidingDown = false;\n        this.isSlidingUp = true;\n        setTimeout(() => {\n          this.isImageVisible = false;\n          this.selectedRadiograph = null;\n          this.isSlidingUp = false;\n        }, 300);\n      } else {\n        this.selectedRadiograph = radiograph;\n        this.isSlidingUp = false;\n        this.isSlidingDown = true;\n        this.isImageVisible = true;\n      }\n    },\n\n    enlargeRadiograph(url) {\n      this.modalImageUrl = url;\n      this.isModalOpen = true;\n    },\n\n    closeModal() {\n      this.isModalOpen = false;\n    },\n\n    async downloadRadiograph(radiograph) {\n      try {\n        // Effettua il fetch dell'immagine\n        const response = await fetch(radiograph.url);\n        const blob = await response.blob();\n        \n        // Crea un URL oggetto per il blob\n        const url = window.URL.createObjectURL(blob);\n        \n        // Crea un elemento link temporaneo\n        const link = document.createElement('a');\n        link.href = url;\n        \n        // Imposta il nome del file per il download\n        // Usa il nome originale se disponibile, altrimenti usa un nome default\n        const fileName = radiograph.name || `radiografia_${new Date(radiograph.date).toISOString().split('T')[0]}.jpg`;\n        link.download = fileName;\n        \n        // Aggiunge il link al documento, simula il click e lo rimuove\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        \n        // Pulisci l'URL oggetto\n        window.URL.revokeObjectURL(url);\n      } catch (error) {\n        console.error('Errore durante il download:', error);\n      }\n    }\n  },\n};\n</script>\n\n<style scoped>\n.radiograph-list {\n  max-width: 800px;\n  margin: 20px auto;\n}\n\nh2 {\n  font-size: 18px;\n  color: #333;\n  margin-bottom: 15px;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli.radiograph-item {\n  padding: 10px 0;\n  border-bottom: 1px solid #ccc;\n  font-size: 12px;\n  color: #444;\n  display: flex;\n  flex-direction: column;\n}\n\n.view-link {\n  color: #007bff;\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-weight: bold;\n  transition: color 0.5s ease;\n  padding: 0;\n  margin: 0;\n}\n\n.view-link:hover {\n  color: #0056b3;\n}\n\n.radiograph-preview {\n  margin-top: 10px;\n  align-self: center;\n}\n\n.radiograph-image {\n  width: 100%;\n  display: block;\n  margin-bottom: 10px;\n}\n\n.content-with-animation {\n  overflow: hidden;\n  max-height: 0;\n  transition: max-height 0.5s ease-out, transform 0.5s ease-out;\n  transform: translateY(-20px);\n}\n\n.content-with-animation.slide-down {\n  max-height: 400px;\n  transform: translateY(0);\n}\n\n.content-with-animation.slide-up {\n  max-height: 0;\n  transform: translateY(-20px);\n}\n\n.radiograph-controls {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.control-button {\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  margin-left: 10px;\n}\n\n.icon {\n  width: 20px;\n  height: 20px;\n}\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal-content {\n  position: relative;\n  max-width: 80%;\n  max-height: 80%;\n  background: white;\n  border-radius: 8px;\n  padding: 20px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.modal-image {\n  width: 80%;\n  max-height: 80vh;\n  display: block;\n  margin: 0 auto;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 16px;\n  cursor: pointer;\n}\n\n.close-icon {\n  width: 12px;\n  height: 12px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}