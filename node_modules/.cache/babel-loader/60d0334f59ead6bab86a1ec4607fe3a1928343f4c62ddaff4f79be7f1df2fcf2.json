{"ast":null,"code":"import PatientRadiographs from \"./PatientRadiographs.vue\";\nimport UploadRadiograph from \"./UploadRadiographs.vue\";\nimport { ref, onMounted } from \"vue\";\nimport { getPatientsFromDoctor, getRadiographs } from \"../services/api-service\";\nexport default {\n  components: {\n    PatientRadiographs,\n    UploadRadiograph\n  },\n  setup() {\n    const patients = ref([]);\n    const selectedPatient = ref(null);\n    const selectedPatientRadiographs = ref([]);\n    const doctorId = localStorage.getItem(\"doctorId\");\n    onMounted(async () => {\n      if (doctorId) {\n        try {\n          patients.value = await getPatientsFromDoctor(doctorId);\n        } catch (error) {\n          console.error(\"Errore nel caricamento dei pazienti:\", error);\n        }\n      } else {\n        console.error(\"Nessun DoctorID trovato nel localStorage.\");\n      }\n    });\n    const selectPatient = async patient => {\n      selectedPatient.value = patient;\n      if (!patient.userId) {\n        console.error(\"ID paziente non trovato.\");\n        return;\n      }\n      try {\n        selectedPatientRadiographs.value = (await getRadiographs(patient.userId)) || [];\n      } catch (error) {\n        console.error(\"Errore nel caricamento delle radiografie per il paziente:\", error);\n      }\n    };\n    const handleUploadSuccess = () => {\n      selectPatient(selectedPatient.value);\n    };\n    return {\n      patients,\n      selectPatient,\n      handleUploadSuccess,\n      selectedPatient,\n      selectedPatientRadiographs\n    };\n  }\n};","map":{"version":3,"names":["PatientRadiographs","UploadRadiograph","ref","onMounted","getPatientsFromDoctor","getRadiographs","components","setup","patients","selectedPatient","selectedPatientRadiographs","doctorId","localStorage","getItem","value","error","console","selectPatient","patient","userId","handleUploadSuccess"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/DoctorDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <div class=\"container\">\n      <div class=\"header\">\n        <h1>Dashboard Dottore</h1>\n      </div>\n\n      <div v-if=\"patients.length > 0\">\n        <h2>Elenco Pazienti</h2>\n        <ul class=\"patient-list\">\n          <li\n            v-for=\"patient in patients\"\n            :key=\"patient.userId\"\n            @click=\"selectPatient(patient)\"\n            class=\"patient-item\"\n          >\n            {{ patient.name }} {{ patient.family_name }}\n          </li>\n        </ul>\n      </div>\n      <div v-else>\n        <p class=\"no-patients\">Nessun paziente associato trovato.</p>\n      </div>\n\n      <div v-if=\"selectedPatient\" class=\"details\">\n        <h2>Dettagli Paziente</h2>\n        <div class=\"patient-details\">\n          <p><strong>Nome:</strong> {{ selectedPatient.name }}</p>\n          <p><strong>Cognome:</strong> {{ selectedPatient.family_name }}</p>\n          <p><strong>Email:</strong> {{ selectedPatient.email }}</p>\n          <p><strong>Data di nascita:</strong> {{ selectedPatient.birthdate }}</p>\n          <p>\n            <strong>Numero di telefono:</strong> {{ selectedPatient.phone_number }}\n          </p>\n          <p><strong>Indirizzo:</strong> {{ selectedPatient.address }}</p>\n        </div>\n\n        <div class=\"upload-section\">\n          <UploadRadiograph\n            @uploadSuccess=\"handleUploadSuccess\"\n            :patientId=\"selectedPatient.userId\"\n          />\n        </div>\n\n        <div class=\"radiographs-section\">\n          <PatientRadiographs\n            :radiographs=\"selectedPatientRadiographs\"\n            :patientId=\"selectedPatient.userId\"\n            :patientName=\"selectedPatient.name\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PatientRadiographs from \"./PatientRadiographs.vue\";\nimport UploadRadiograph from \"./UploadRadiographs.vue\";\nimport { ref, onMounted } from \"vue\";\nimport { getPatientsFromDoctor, getRadiographs } from \"../services/api-service\";\n\nexport default {\n  components: {\n    PatientRadiographs,\n    UploadRadiograph,\n  },\n  setup() {\n    const patients = ref([]);\n    const selectedPatient = ref(null);\n    const selectedPatientRadiographs = ref([]);\n\n    const doctorId = localStorage.getItem(\"doctorId\");\n\n    onMounted(async () => {\n      if (doctorId) {\n        try {\n          patients.value = await getPatientsFromDoctor(doctorId);\n        } catch (error) {\n          console.error(\"Errore nel caricamento dei pazienti:\", error);\n        }\n      } else {\n        console.error(\"Nessun DoctorID trovato nel localStorage.\");\n      }\n    });\n\n    const selectPatient = async (patient) => {\n      selectedPatient.value = patient;\n\n      if (!patient.userId) {\n        console.error(\"ID paziente non trovato.\");\n        return;\n      }\n\n      try {\n        selectedPatientRadiographs.value = await getRadiographs(patient.userId) || [];\n      } catch (error) {\n        console.error(\"Errore nel caricamento delle radiografie per il paziente:\", error);\n      }\n    };\n\n    const handleUploadSuccess = () => {\n      selectPatient(selectedPatient.value);\n    };\n\n    return {\n      patients,\n      selectPatient,\n      handleUploadSuccess,\n      selectedPatient,\n      selectedPatientRadiographs,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.dashboard {\n  background: #ffffff;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.container {\n  max-width: 600px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 100px;\n  width: 100%;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\nh1 {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\nh2 {\n  font-size: 18px;\n  margin-bottom: 20px;\n}\n\n.patient-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.patient-item {\n  cursor: pointer;\n  text-decoration: underline;\n  font-size: 14px;\n  margin-bottom: 10px;\n  color: #007bff;\n}\n\n.patient-item:hover {\n  color: #0056b3;\n}\n\n.no-patients {\n  font-size: 14px;\n  color: #999;\n}\n\n.details {\n  margin-top: 30px;\n}\n\n.patient-details p {\n  font-size: 14px;\n  margin-bottom: 10px;\n}\n\n.upload-section, .radiographs-section {\n  margin-top: 30px;\n}\n\n.btn-next {\n  width: 100%;\n  margin-top: 10px;\n  padding: 0.4rem;\n  cursor: pointer;\n  font-size: 13px;\n}\n\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.loading-icon {\n  width: 50px;\n  height: 50px;\n}\n</style>\n"],"mappings":"AAyDA,OAAOA,kBAAiB,MAAO,0BAA0B;AACzD,OAAOC,gBAAe,MAAO,yBAAyB;AACtD,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,qBAAqB,EAAEC,cAAa,QAAS,yBAAyB;AAE/E,eAAe;EACbC,UAAU,EAAE;IACVN,kBAAkB;IAClBC;EACF,CAAC;EACDM,KAAKA,CAAA,EAAG;IACN,MAAMC,QAAO,GAAIN,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMO,eAAc,GAAIP,GAAG,CAAC,IAAI,CAAC;IACjC,MAAMQ,0BAAyB,GAAIR,GAAG,CAAC,EAAE,CAAC;IAE1C,MAAMS,QAAO,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAEjDV,SAAS,CAAC,YAAY;MACpB,IAAIQ,QAAQ,EAAE;QACZ,IAAI;UACFH,QAAQ,CAACM,KAAI,GAAI,MAAMV,qBAAqB,CAACO,QAAQ,CAAC;QACxD,EAAE,OAAOI,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC9D;MACF,OAAO;QACLC,OAAO,CAACD,KAAK,CAAC,2CAA2C,CAAC;MAC5D;IACF,CAAC,CAAC;IAEF,MAAME,aAAY,GAAI,MAAOC,OAAO,IAAK;MACvCT,eAAe,CAACK,KAAI,GAAII,OAAO;MAE/B,IAAI,CAACA,OAAO,CAACC,MAAM,EAAE;QACnBH,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAC;QACzC;MACF;MAEA,IAAI;QACFL,0BAA0B,CAACI,KAAI,GAAI,OAAMT,cAAc,CAACa,OAAO,CAACC,MAAM,MAAK,EAAE;MAC/E,EAAE,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2DAA2D,EAAEA,KAAK,CAAC;MACnF;IACF,CAAC;IAED,MAAMK,mBAAkB,GAAIA,CAAA,KAAM;MAChCH,aAAa,CAACR,eAAe,CAACK,KAAK,CAAC;IACtC,CAAC;IAED,OAAO;MACLN,QAAQ;MACRS,aAAa;MACbG,mBAAmB;MACnBX,eAAe;MACfC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}