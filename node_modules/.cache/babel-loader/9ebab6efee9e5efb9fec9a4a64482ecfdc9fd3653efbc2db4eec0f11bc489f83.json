{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"calendar\"\n};\nconst _hoisted_2 = {\n  class: \"calendar-header\"\n};\nconst _hoisted_3 = {\n  class: \"calendar-day-names\"\n};\nconst _hoisted_4 = {\n  class: \"calendar-grid\"\n};\nconst _hoisted_5 = [\"onClick\", \"title\"];\nconst _hoisted_6 = {\n  class: \"date\"\n};\nconst _hoisted_7 = {\n  class: \"icons\"\n};\nconst _hoisted_8 = {\n  class: \"icon-row operations\"\n};\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = {\n  class: \"icon-row radiographs\"\n};\nconst _hoisted_11 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: \"month-button\",\n    onClick: _cache[0] || (_cache[0] = $event => $props.changeMonth(-1))\n  }, \"‹\"), _createElementVNode(\"span\", null, _toDisplayString($props.monthNames[$props.month]) + \" \" + _toDisplayString($props.year), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"month-button\",\n    onClick: _cache[1] || (_cache[1] = $event => $props.changeMonth(1))\n  }, \"›\")]), _createCommentVNode(\" Riga per i nomi dei giorni \"), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.dayNames, dayName => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: dayName,\n      class: \"day-name\"\n    }, _toDisplayString(dayName), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.daysInMonth, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: `${day.year}-${day.month}-${day.date}`,\n      class: _normalizeClass(['calendar-day', {\n        disabled: day.isDisabled,\n        today: `${day.year}-${String(day.month).padStart(2, '0')}-${String(day.date).padStart(2, '0')}` === $data.formattedToday,\n        selected: $options.isSelectedDay(day)\n      }]),\n      onClick: $event => !day.isDisabled && $options.selectDay(day),\n      title: $options.generateTooltip(day)\n    }, [_createCommentVNode(\" Data \"), _createElementVNode(\"div\", _hoisted_6, _toDisplayString(day.date), 1 /* TEXT */), _createCommentVNode(\" Icone Operazioni \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(day.operations, (operation, index) => {\n      return _openBlock(), _createElementBlock(\"img\", {\n        key: 'operation-' + index + '-' + day.date,\n        src: $props.operationIcon,\n        alt: \"Operazione\",\n        class: \"icon\"\n      }, null, 8 /* PROPS */, _hoisted_9);\n    }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Icone Radiografie \"), _createElementVNode(\"div\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(day.radiographs, (radiograph, index) => {\n      return _openBlock(), _createElementBlock(\"img\", {\n        key: 'radiograph-' + index + '-' + day.date,\n        src: $props.radiographIcon,\n        alt: \"Radiografia\",\n        class: \"icon\"\n      }, null, 8 /* PROPS */, _hoisted_11);\n    }), 128 /* KEYED_FRAGMENT */))])])], 10 /* CLASS, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","$event","$props","changeMonth","_toDisplayString","monthNames","month","year","_createCommentVNode","_hoisted_3","_Fragment","_renderList","dayNames","dayName","key","_hoisted_4","daysInMonth","day","date","_normalizeClass","isDisabled","String","padStart","$data","formattedToday","$options","isSelectedDay","selectDay","title","generateTooltip","_hoisted_6","_hoisted_7","_hoisted_8","operations","operation","index","src","operationIcon","alt","_hoisted_9","_hoisted_10","radiographs","radiograph","radiographIcon","_hoisted_11","_hoisted_5"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\ScheduleCalendar.vue"],"sourcesContent":["<template>\r\n  <div class=\"calendar\">\r\n    <div class=\"calendar-header\">\r\n      <button class=\"month-button\" @click=\"changeMonth(-1)\">&#8249;</button>\r\n      <span>{{ monthNames[month] }} {{ year }}</span>\r\n      <button class=\"month-button\" @click=\"changeMonth(1)\">&#8250;</button>\r\n    </div>\r\n\r\n    <!-- Riga per i nomi dei giorni -->\r\n    <div class=\"calendar-day-names\">\r\n      <div v-for=\"dayName in dayNames\" :key=\"dayName\" class=\"day-name\">\r\n        {{ dayName }}\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"calendar-grid\">\r\n      <div\r\n        v-for=\"day in daysInMonth\"\r\n        :key=\"`${day.year}-${day.month}-${day.date}`\"\r\n        :class=\"[\r\n          'calendar-day',\r\n          {\r\n            disabled: day.isDisabled,\r\n            today:\r\n              `${day.year}-${String(day.month).padStart(2, '0')}-${String(\r\n                day.date\r\n              ).padStart(2, '0')}` === formattedToday,\r\n            selected: isSelectedDay(day),\r\n          },\r\n        ]\"\r\n        @click=\"!day.isDisabled && selectDay(day)\"\r\n        :title=\"generateTooltip(day)\"\r\n      >\r\n        <!-- Data -->\r\n        <div class=\"date\">{{ day.date }}</div>\r\n\r\n        <!-- Icone Operazioni -->\r\n        <div class=\"icons\">\r\n          <div class=\"icon-row operations\">\r\n            <img\r\n              v-for=\"(operation, index) in day.operations\"\r\n              :key=\"'operation-' + index + '-' + day.date\"\r\n              :src=\"operationIcon\"\r\n              alt=\"Operazione\"\r\n              class=\"icon\"\r\n            />\r\n          </div>\r\n\r\n          <!-- Icone Radiografie -->\r\n          <div class=\"icon-row radiographs\">\r\n            <img\r\n              v-for=\"(radiograph, index) in day.radiographs\"\r\n              :key=\"'radiograph-' + index + '-' + day.date\"\r\n              :src=\"radiographIcon\"\r\n              alt=\"Radiografia\"\r\n              class=\"icon\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    month: Number,\r\n    year: Number,\r\n    daysInMonth: Array,\r\n    monthNames: Array,\r\n    dayNames: Array,\r\n    minDate: String,\r\n    operationIcon: String,\r\n    radiographIcon: String,\r\n    showDayDetails: Function,\r\n    changeMonth: Function,\r\n    selectedDay: Object,\r\n  },\r\n  data() {\r\n    return {\r\n      // Ottieni la data di oggi in formato YYYY-MM-DD per il confronto\r\n      formattedToday: new Date().toISOString().split(\"T\")[0],\r\n    };\r\n  },\r\n  methods: {\r\n    selectDay(day) {\r\n      const formattedDate = `${day.year}-${String(day.month).padStart(\r\n        2,\r\n        \"0\"\r\n      )}-${String(day.date).padStart(2, \"0\")}`;\r\n      this.$emit(\"update-selected-day\", { ...day, formattedDate });\r\n    },\r\n    isSelectedDay(day) {\r\n      return (\r\n        this.selectedDay &&\r\n        this.selectedDay.formattedDate ===\r\n          `${day.year}-${String(day.month).padStart(2, \"0\")}-${String(\r\n            day.date\r\n          ).padStart(2, \"0\")}`\r\n      );\r\n    },\r\n    generateTooltip(day) {\r\n      const operations = day.operations || [];\r\n      const numberOfOperations = operations.length;\r\n\r\n      // Verifica se è oggi\r\n      const isToday =\r\n        `${day.year}-${String(day.month).padStart(2, \"0\")}-${String(\r\n          day.date\r\n        ).padStart(2, \"0\")}` === this.formattedToday;\r\n\r\n      if (numberOfOperations === 0) {\r\n        return isToday\r\n          ? \"Nessuna operazione programmata per oggi.\"\r\n          : `Nessuna operazione programmata per ${\r\n              this.dayNames[\r\n                new Date(day.year, day.month - 1, day.date).getDay()\r\n              ]\r\n            } ${day.date}.`;\r\n      }\r\n\r\n      const operationTimes = operations\r\n        .map((op) => {\r\n          const operationTime = new Date(op.operationDate);\r\n          const hours = String(operationTime.getHours()).padStart(2, \"0\");\r\n          const minutes = String(operationTime.getMinutes()).padStart(2, \"0\");\r\n          return `${hours}:${minutes}`;\r\n        })\r\n        .sort();\r\n\r\n      let operationText;\r\n      if (numberOfOperations >= 3) {\r\n        operationText = `Hai ${numberOfOperations} operazion${\r\n          numberOfOperations > 1 ? \"i\" : \"e\"\r\n        } programmat${numberOfOperations > 1 ? \"e\" : \"a\"} per ${\r\n          isToday\r\n            ? \"oggi\"\r\n            : `${\r\n                this.dayNames[\r\n                  new Date(day.year, day.month - 1, day.date).getDay()\r\n                ]\r\n              } ${day.date}`\r\n        } alle ${operationTimes.slice(0, -1).join(\", alle \")} e alle ${\r\n          operationTimes[operationTimes.length - 1]\r\n        }`;\r\n      } else {\r\n        operationText = `Hai ${numberOfOperations} operazion${\r\n          numberOfOperations > 1 ? \"i\" : \"e\"\r\n        } programmat${numberOfOperations > 1 ? \"e\" : \"a\"} per ${\r\n          isToday\r\n            ? \"oggi\"\r\n            : `${\r\n                this.dayNames[\r\n                  new Date(day.year, day.month - 1, day.date).getDay()\r\n                ]\r\n              } ${day.date}`\r\n        } alle ${operationTimes.join(\" e alle \")}`;\r\n      }\r\n      return operationText;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.schedule-calendar {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.calendar-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 1em;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.month-button {\r\n  background: none;\r\n  border: none;\r\n  padding: 5px;\r\n  cursor: pointer;\r\n  font-size: 1.5em;\r\n  color: #007bff;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.month-button:hover {\r\n  color: #0056b3;\r\n}\r\n\r\n.calendar-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  gap: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.calendar-day {\r\n  position: relative;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  height: 70px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n}\r\n\r\n.calendar-day.disabled {\r\n  opacity: 0.5;\r\n  color: #ccc;\r\n  pointer-events: none;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.calendar-day.today {\r\n  background-color: #f9f4f4;\r\n  border: 2px solid #ffa8a8db;\r\n  border-radius: 5px;\r\n}\r\n\r\n.calendar-day.selected {\r\n  border-radius: 5px;\r\n  border: 2px solid #7bbbffe7;\r\n}\r\n\r\n.calendar-day.today.selected {\r\n  background-color: #ffebeb;\r\n  border: 2px solid #7bbbffe7;\r\n}\r\n\r\n.calendar-day-names {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  background-color: #f0f0f0;\r\n  padding: 10px 0;\r\n  font-weight: bold;\r\n  color: #555;\r\n  text-align: center;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.day-name {\r\n  text-transform: uppercase;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.icon-row {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 2px;\r\n}\r\n\r\n.operations {\r\n  min-height: 7px;\r\n  margin-bottom: 3px;\r\n}\r\n\r\n.icon {\r\n  width: 7px;\r\n  height: 7px;\r\n}\r\n\r\n/* Tooltip */\r\n.tooltip {\r\n  position: absolute;\r\n  top: -25px; /* Posiziona il tooltip sopra la data */\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background-color: #333;\r\n  color: white;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  font-size: 12px;\r\n  z-index: 10;\r\n  visibility: visible;\r\n  opacity: 0.9;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}