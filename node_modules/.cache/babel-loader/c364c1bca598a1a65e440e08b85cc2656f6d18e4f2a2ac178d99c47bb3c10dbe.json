{"ast":null,"code":"import axios from \"axios\";\nimport { verifyEmail } from \"@/services/api-service\";\nexport default {\n  name: \"VerifyEmail\",\n  data() {\n    return {\n      verificationMessage: \"Verificando la tua email...\",\n      errorMessage: null,\n      isLoading: true\n    };\n  },\n  async mounted() {\n    const uid = this.$route.params.uid; // Assicurati che l'UID sia presente nell'URL\n    const response = await verifyEmail(uid);\n\n    // Imposta il messaggio di verifica basato sulla risposta del server\n    if (response.data.message === \"Email già verificata!\") {\n      this.verificationMessage = \"La tua email è già stata verificata!\";\n    } else if (response.data.message === \"Email verificata con successo!\") {\n      this.verificationMessage = \"Email verificata con successo!\";\n    }\n    console.log(\"Risposta server --> \" + response.data.message);\n    this.isLoading = false;\n  },\n  methods: {\n    goToLogin() {\n      this.$router.push(\"/login\");\n    }\n  }\n};","map":{"version":3,"names":["axios","verifyEmail","name","data","verificationMessage","errorMessage","isLoading","mounted","uid","$route","params","response","message","console","log","methods","goToLogin","$router","push"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\VerifyEmail.vue"],"sourcesContent":["<template>\n  <div class=\"verify-email\">\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4\">{{ verificationMessage }}</h2>\n      <p v-if=\"errorMessage\">{{ errorMessage }}</p>\n      <div class=\"btn-group mt-4\" v-if=\"!isLoading && !errorMessage\">\n        <button class=\"btn btn-primary btn-next\" @click=\"goToLogin\">\n          Esegui il login\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { verifyEmail } from \"@/services/api-service\";\n\nexport default {\n  name: \"VerifyEmail\",\n  data() {\n    return {\n      verificationMessage: \"Verificando la tua email...\",\n      errorMessage: null,\n      isLoading: true,\n    };\n  },\n  async mounted() {\n    const uid = this.$route.params.uid; // Assicurati che l'UID sia presente nell'URL\n    const response = await verifyEmail(uid);\n\n    // Imposta il messaggio di verifica basato sulla risposta del server\n    if (response.data.message === \"Email già verificata!\") {\n      this.verificationMessage = \"La tua email è già stata verificata!\";\n    } else if (response.data.message === \"Email verificata con successo!\") {\n      this.verificationMessage = \"Email verificata con successo!\";\n    }\n\n    console.log(\"Risposta server --> \" + response.data.message);\n    this.isLoading = false;\n  },\n  methods: {\n    goToLogin() {\n      this.$router.push(\"/login\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n.verify-email {\n  background: #ffffff; /* Sfondo bianco, simile alla pagina di login */\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0); /* Rimuove ombre esterne */\n}\n\n.container {\n  max-width: 80%;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1); /* Simile alla shadow del login */\n  margin-top: 100px;\n  height: auto;\n  text-align: center; /* Centra il testo */\n  flex-grow: 1; /* Permette al contenuto principale di occupare lo spazio rimanente */\n  margin-left: 20px; /* Margine sinistro per distanziare il contenuto dalla sidebar */\n}\n\nh2 {\n  font-size: 18px; /* Uniforma il font size al login */\n  margin-bottom: 30px;\n}\n\np {\n  font-size: 14px;\n  color: #6c757d;\n}\n\n.btn-group .btn {\n  width: 100%; /* Assicura che i bottoni occupino l'intera larghezza */\n  margin-top: 20px;\n  padding: 10px;\n}\n\n.btn-primary {\n  background-color: #007bff;\n  color: white;\n  padding: 8px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 80%;\n  max-width: 300px;\n  min-width: 200px;\n  font-size: 13px;\n  transition: background-color 0.3s ease;\n  text-align: center;\n  display: inline-block;\n}\n\n.btn-primary:hover {\n  background-color: #0056b3;\n}\n\n.sidebar {\n  top: 0;\n  width: 250px; /* Imposta la larghezza della sidebar */\n  height: 100vh; /* Imposta l'altezza della sidebar al 100% della viewport */\n  padding: 20px; /* Padding interno */\n  background: linear-gradient(180deg, #212529, #343a40);\n}\n\n.sidebar .nav-link {\n  color: #cfd2d6;\n}\n\n.sidebar .nav-link:hover {\n  background-color: #495057;\n  border-radius: 5px;\n}\n\n.nav-link {\n  padding: 10px 15px; /* Aggiunge padding ai link per migliorarne l'aspetto */\n}\n\n@media (max-width: 767.98px) {\n  .navbar-brand {\n    font-size: 1.5rem;\n  }\n\n  .sidebar {\n    display: none;\n  }\n}\n</style>\n"],"mappings":"AAeA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,WAAU,QAAS,wBAAwB;AAEpD,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,mBAAmB,EAAE,6BAA6B;MAClDC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,GAAE,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,GAAG,EAAE;IACpC,MAAMG,QAAO,GAAI,MAAMV,WAAW,CAACO,GAAG,CAAC;;IAEvC;IACA,IAAIG,QAAQ,CAACR,IAAI,CAACS,OAAM,KAAM,uBAAuB,EAAE;MACrD,IAAI,CAACR,mBAAkB,GAAI,sCAAsC;IACnE,OAAO,IAAIO,QAAQ,CAACR,IAAI,CAACS,OAAM,KAAM,gCAAgC,EAAE;MACrE,IAAI,CAACR,mBAAkB,GAAI,gCAAgC;IAC7D;IAEAS,OAAO,CAACC,GAAG,CAAC,sBAAqB,GAAIH,QAAQ,CAACR,IAAI,CAACS,OAAO,CAAC;IAC3D,IAAI,CAACN,SAAQ,GAAI,KAAK;EACxB,CAAC;EACDS,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}