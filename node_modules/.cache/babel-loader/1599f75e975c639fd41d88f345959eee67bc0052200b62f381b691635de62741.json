{"ast":null,"code":"import { getPatientsFromDoctor } from \"@/services/api-service\";\nimport { loadRadiographiesForPatient } from \"@/services/api-service\";\nexport default {\n  data() {\n    return {\n      patients: [],\n      selectedPatient: \"\",\n      role: \"\",\n      userRadiographs: [],\n      isLoading: true\n    };\n  },\n  async created() {\n    const userDataString = localStorage.getItem(\"userData\");\n    const userData = JSON.parse(userDataString);\n    const userUid = userData.doctorID;\n    this.role = userData.role;\n    if (this.role === \"doctor\") {\n      this.patients = await getPatientsFromDoctor(userUid);\n    }\n    this.isLoading = false;\n  },\n  methods: {\n    async onPatientChange() {\n      console.log(\"Entrooo\");\n      const patient = this.patients.find(p => p.userId === this.selectedPatient);\n      this.selectedPatient = patient ? `${patient.name} ${patient.family_name} (ID: ${patient.userId})` : \"\";\n      this.userRadiographs = await loadRadiographiesForPatient(patient.userId);\n    },\n    changePatient() {\n      this.selectedPatient = \"\";\n      this.userRadiographies = [];\n    }\n  }\n};","map":{"version":3,"names":["getPatientsFromDoctor","loadRadiographiesForPatient","data","patients","selectedPatient","role","userRadiographs","isLoading","created","userDataString","localStorage","getItem","userData","JSON","parse","userUid","doctorID","methods","onPatientChange","console","log","patient","find","p","userId","name","family_name","changePatient","userRadiographies"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\views\\ViewRadiographs.vue"],"sourcesContent":["<template>\n  <div class=\"welcome\">\n    <div class=\"container mt-5\">\n      <h5><strong>Visualizza una radiografia</strong></h5>\n      <div v-if=\"isLoading\" class=\"alert alert-info\">Caricamento...</div>\n      <div v-else-if=\"role === 'doctor'\">\n        <div v-if=\"patients.length > 0\">\n          <div class=\"select-container mb-4\">\n            <select\n              v-if=\"patients.length > 0 && !selectedPatient\"\n              v-model=\"selectedPatient\"\n              @change=\"onPatientChange\"\n              class=\"form-select custom-select\"\n            >\n              <option value=\"\" disabled selected>Seleziona un paziente</option>\n              <option\n                v-for=\"patient in patients\"\n                :key=\"patient.userId\"\n                :value=\"patient.userId\"\n              >\n                {{ patient.name }} {{ patient.family_name }} (ID:\n                {{ patient.userId }})\n              </option>\n            </select>\n          </div>\n          <div v-if=\"selectedPatient\" class=\"mt-2\">\n            <div>\n              Utente selezionato: <strong>{{ selectedPatient }}</strong>\n            </div>\n            <button @click=\"changePatient\" class=\"btn btn-secondary mt-2\">\n              Cambia paziente\n            </button>\n          </div>\n          <div class=\"row mt-5\" v-if=\"userRadiographs.length > 0\">\n            <div v-for=\"radiograph in userRadiographs\" :key=\"radiograph.id\"class=\"card col-4 mb-3\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">Radiografia {{ radiograph.id }}</h5>\n                <p class=\"card-text\">Descrizione</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div v-else>\n          <p>NON hai pazienti.</p>\n        </div>\n      </div>\n      <div v-else-if=\"role === 'patient'\">\n        <p>You can only see your own radiographs.</p>\n      </div>\n      <div v-else>\n        <p>You do not have permission to view radiographs.</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getPatientsFromDoctor } from \"@/services/api-service\";\nimport { loadRadiographiesForPatient } from \"@/services/api-service\";\n\nexport default {\n  data() {\n    return {\n      patients: [],\n      selectedPatient: \"\",\n      role: \"\",\n      userRadiographs: [],\n      isLoading: true,\n    };\n  },\n  async created() {\n    const userDataString = localStorage.getItem(\"userData\");\n    const userData = JSON.parse(userDataString);\n    const userUid = userData.doctorID;\n    this.role = userData.role;\n    if (this.role === \"doctor\") {\n      this.patients = await getPatientsFromDoctor(userUid);\n    }\n    this.isLoading = false;\n  },\n  methods: {\n    async onPatientChange() {\n      console.log(\"Entrooo\");\n      const patient = this.patients.find(\n        (p) => p.userId === this.selectedPatient\n      );\n      this.selectedPatient = patient\n        ? `${patient.name} ${patient.family_name} (ID: ${patient.userId})`\n        : \"\";\n\n      this.userRadiographs = await loadRadiographiesForPatient(patient.userId);\n    },\n    changePatient() {\n      this.selectedPatient = \"\";\n      this.userRadiographies = [];\n    },\n  },\n};\n</script>\n\n<style scoped>\n.welcome {\n  background: #ffffff; /* Sfondo bianco */\n  min-height: 100vh;\n  display: flex;\n  align-items: center; /* Centra verticalmente */\n  justify-content: center; /* Centra orizzontalmente */\n}\n\n.container {\n  max-width: 90%; /* Modifica qui per utilizzare una percentuale */\n  padding: 5%; /* Usa percentuali per il padding */\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 10%; /* Usa percentuali per il margine superiore */\n  height: auto;\n  text-align: center;\n  flex-grow: 1;\n}\n\n.img-preview {\n  max-width: 100%;\n  max-height: 50vh; /* Modifica per utilizzare una percentuale dell'altezza della finestra */\n  margin-top: 15px;\n}\n\n.row {\n  display: flex; /* Usa Flexbox per le card */\n  flex-wrap: wrap; /* Permetti alle card di andare a capo se necessario */\n  margin-bottom: 20px; /* Margine inferiore per la separazione */\n  height: 10%;\n}\n\n.card {\n  flex: 1 1 45%; /* Permetti alle card di occupare il 45% della larghezza */\n  margin: 10px; /* Margine tra le card */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* Stili per la card della predizione */\n.card.prediction-card {\n  margin-top: 20px; /* Margine superiore per separarla dalle altre card */\n}\n\n.card-img-top {\n  border-radius: 0.5rem;\n  max-height: 50vh; /* Limita l'altezza in percentuale */\n  object-fit: cover; /* Mantieni le proporzioni dell'immagine */\n}\n\n.card-body {\n  text-align: center;\n}\n\n.btn-primary {\n  background-color: #007bff;\n  border: none;\n}\n\n.btn-primary:hover {\n  background-color: #0056b3;\n}\n\n.sidebar {\n  top: 0;\n  width: 250px;\n  height: 100vh;\n  padding: 20px;\n  background: linear-gradient(180deg, #212529, #343a40);\n  margin-right: 20px;\n}\n\n.sidebar .nav-link {\n  color: #cfd2d6;\n}\n\n.sidebar .nav-link:hover {\n  background-color: #495057;\n  border-radius: 5px;\n}\n\n.nav-link {\n  padding: 10px 15px;\n}\n\n@media (max-width: 767.98px) {\n  .navbar-brand {\n    font-size: 1.5rem;\n  }\n\n  .sidebar {\n    display: none;\n  }\n}\n\n.select-container {\n  margin-top: 18px; /* Spazio sopra il menu a tendina */\n  margin-bottom: 10px; /* Spazio sotto il menu a tendina */\n}\n\n.form-select {\n  display: block; /* Assicurati che il selettore occupi l'intera larghezza */\n  width: 100%; /* Fa s√¨ che il selettore si espanda */\n  padding: 10px; /* Padding interno per il selettore */\n  border: 1px solid #ced4da; /* Colore del bordo */\n  border-radius: 5px; /* Angoli arrotondati */\n  background-color: #fff; /* Sfondo bianco */\n  transition: border-color 0.2s; /* Transizione per il cambio del colore del bordo */\n}\n\n.form-select:focus {\n  border-color: #007bff; /* Colore del bordo quando in focus */\n  outline: none; /* Rimuove l'outline predefinito */\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); /* Ombra del box quando in focus */\n}\n\n.custom-select {\n  max-width: 80%; /* Imposta la larghezza massima desiderata */\n  margin: 0 auto; /* Centra il menu a tendina */\n}\n\n.card {\n  flex: 1 1 45%; /* Permetti alle card di occupare il 45% della larghezza */\n  margin: 10px; /* Margine tra le card */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.card-img-top {\n  border-radius: 0.5rem;\n  max-height: 50vh; /* Limita l'altezza in percentuale */\n  object-fit: cover; /* Mantieni le proporzioni dell'immagine */\n}\n</style>\n"],"mappings":"AAyDA,SAASA,qBAAoB,QAAS,wBAAwB;AAC9D,SAASC,2BAA0B,QAAS,wBAAwB;AAEpE,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,IAAI,EAAE,EAAE;MACRC,eAAe,EAAE,EAAE;MACnBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,cAAa,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,MAAMC,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACL,cAAc,CAAC;IAC3C,MAAMM,OAAM,GAAIH,QAAQ,CAACI,QAAQ;IACjC,IAAI,CAACX,IAAG,GAAIO,QAAQ,CAACP,IAAI;IACzB,IAAI,IAAI,CAACA,IAAG,KAAM,QAAQ,EAAE;MAC1B,IAAI,CAACF,QAAO,GAAI,MAAMH,qBAAqB,CAACe,OAAO,CAAC;IACtD;IACA,IAAI,CAACR,SAAQ,GAAI,KAAK;EACxB,CAAC;EACDU,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtB,MAAMC,OAAM,GAAI,IAAI,CAAClB,QAAQ,CAACmB,IAAI,CAC/BC,CAAC,IAAKA,CAAC,CAACC,MAAK,KAAM,IAAI,CAACpB,eAC3B,CAAC;MACD,IAAI,CAACA,eAAc,GAAIiB,OAAM,GACzB,GAAGA,OAAO,CAACI,IAAI,IAAIJ,OAAO,CAACK,WAAW,SAASL,OAAO,CAACG,MAAM,GAAE,GAC/D,EAAE;MAEN,IAAI,CAAClB,eAAc,GAAI,MAAML,2BAA2B,CAACoB,OAAO,CAACG,MAAM,CAAC;IAC1E,CAAC;IACDG,aAAaA,CAAA,EAAG;MACd,IAAI,CAACvB,eAAc,GAAI,EAAE;MACzB,IAAI,CAACwB,iBAAgB,GAAI,EAAE;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}