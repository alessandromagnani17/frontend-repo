{"ast":null,"code":"export default {\n  name: \"UserNotifications\",\n  data() {\n    return {\n      notifications: []\n    };\n  },\n  mounted() {\n    this.fetchNotifications();\n  },\n  methods: {\n    async fetchNotifications() {\n      try {\n        const userData = JSON.parse(localStorage.getItem(\"userData\")); // Decodifica il JSON\n        const userId = userData.userId;\n        console.log(\"Fetching notifications...\");\n        console.log(\"Selected patient ID:\", userId);\n\n        // Recupera le notifiche dal backend\n        const response = await fetch(`/api/notifications?patientId=${userId}`);\n        if (!response.ok) {\n          throw new Error(\"Errore nel recupero delle notifiche\");\n        }\n        const data = await response.json();\n        console.log(\"Notifications data:\", data); // Stampa il risultato delle notifiche\n        this.notifications = data.notifications; // Supponiamo che il backend ritorni un array di notifiche\n      } catch (error) {\n        console.error(\"Errore nel recupero delle notifiche:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","notifications","mounted","fetchNotifications","methods","userData","JSON","parse","localStorage","getItem","userId","console","log","response","fetch","ok","Error","json","error"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/views/UserNotifications.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <h2>\n      Notifiche\n      <span v-if=\"unreadCount > 0\" class=\"badge badge-warning\">{{ unreadCount }}</span>\n    </h2>\n    <div v-if=\"notifications.length\">\n      <ul class=\"list-group\">\n        <li\n          v-for=\"(notification, index) in notifications\"\n          :key=\"index\"\n          class=\"list-group-item\"\n          :class=\"{ 'unread-notification': !notification.read }\"\n        >\n          {{ notification.message }}\n          <span class=\"badge badge-success float-right\">\n            {{ notification.date }} - {{ notification.time }}\n          </span>\n          <button\n            v-if=\"!notification.read\"\n            class=\"btn btn-sm btn-primary ml-3\"\n            @click=\"markAsRead(notification.id)\"\n          >\n            Segna come letta\n          </button>\n        </li>\n      </ul>\n    </div>\n    <div v-else>\n      <p>Non ci sono notifiche.</p>\n    </div>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  name: \"UserNotifications\",\n  data() {\n    return {\n      notifications: [],\n    };\n  },\n\n  mounted() {\n    this.fetchNotifications();\n  },\n  methods: {\n    async fetchNotifications() {\n      try {\n        const userData = JSON.parse(localStorage.getItem(\"userData\")); // Decodifica il JSON\n        const userId = userData.userId;\n\n        console.log(\"Fetching notifications...\");\n        console.log(\"Selected patient ID:\", userId);\n\n        // Recupera le notifiche dal backend\n        const response = await fetch(`/api/notifications?patientId=${userId}`);\n        if (!response.ok) {\n          throw new Error(\"Errore nel recupero delle notifiche\");\n        }\n\n        const data = await response.json();\n        console.log(\"Notifications data:\", data); // Stampa il risultato delle notifiche\n        this.notifications = data.notifications; // Supponiamo che il backend ritorni un array di notifiche\n      } catch (error) {\n        console.error(\"Errore nel recupero delle notifiche:\", error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.list-group-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.float-right {\n  margin-left: 10px;\n}\n</style>\n"],"mappings":"AAoCA,eAAe;EACbA,IAAI,EAAE,mBAAmB;EACzBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,kBAAkB,CAAC,CAAC;EAC3B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAME,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE;QAC/D,MAAMC,MAAK,GAAIL,QAAQ,CAACK,MAAM;QAE9BC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QACxCD,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,MAAM,CAAC;;QAE3C;QACA,MAAMG,QAAO,GAAI,MAAMC,KAAK,CAAC,gCAAgCJ,MAAM,EAAE,CAAC;QACtE,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;QACxD;QAEA,MAAMhB,IAAG,GAAI,MAAMa,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCN,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEZ,IAAI,CAAC,EAAE;QAC1C,IAAI,CAACC,aAAY,GAAID,IAAI,CAACC,aAAa,EAAE;MAC3C,EAAE,OAAOiB,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}