{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"RegisterComponent\",\n  data() {\n    return {\n      form: {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        nome: \"\",\n        cognome: \"\",\n        data: \"\",\n        telefono: \"\",\n        gender: \"\",\n        address: \"\",\n        cap_code: \"\",\n        // Campo aggiunto per il CAP\n        tax_code: \"\" // Campo aggiunto per il Tax Code\n      },\n      errors: {},\n      loading: false,\n      showPassword: false,\n      showConfirmPassword: false,\n      passwordError: \"\",\n      showPasswordError: false // Aggiunta della variabile per mostrare errore di conferma\n    };\n  },\n  methods: {\n    toggleShowPassword() {\n      this.showPassword = !this.showPassword;\n    },\n    toggleShowConfirmPassword() {\n      this.showConfirmPassword = !this.showConfirmPassword;\n    },\n    async onSubmit() {\n      this.loading = true;\n      this.errors = {};\n      this.passwordError = \"\";\n      this.showPasswordError = false; // Resetta l'errore\n\n      // Controllo delle password\n      if (this.form.password !== this.form.confirmPassword) {\n        this.showPasswordError = true; // Mostra errore\n      } else {\n        this.showPasswordError = false; // Nascondi errore\n      }\n\n      // Se le password non corrispondono, interrompi l'invio\n      if (this.showPasswordError) {\n        this.loading = false;\n        return;\n      }\n      try {\n        const {\n          username,\n          email,\n          password,\n          nome,\n          cognome,\n          data,\n          telefono,\n          gender,\n          address,\n          cap_code,\n          // Aggiunto cap_code\n          tax_code // Aggiunto tax_code\n        } = this.form;\n        console.log(\"Dati registrazione:\", {\n          username,\n          email,\n          password,\n          nome,\n          cognome,\n          data,\n          telefono,\n          gender,\n          address,\n          cap_code,\n          // Aggiunto cap_code\n          tax_code // Aggiunto tax_code\n        });\n        const response = await axios.post(\"http://127.0.0.1:5000/register\", {\n          username,\n          email,\n          password,\n          nome,\n          cognome,\n          data,\n          telefono,\n          gender,\n          address,\n          cap_code,\n          // Includere cap_code nella richiesta\n          tax_code // Includere tax_code nella richiesta\n        });\n        alert(\"Registration successful! Please check your email for verification.\");\n        console.log(response.data);\n      } catch (error) {\n        console.error(\"Error signing up:\", error);\n        if (error.response) {\n          console.error(\"Response data:\", error.response.data);\n          this.errors.general = error.response.data.error || \"Registration failed\";\n        } else {\n          this.errors.general = error.message;\n        }\n        alert(\"Error signing up: \" + this.errors.general);\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","form","username","email","password","confirmPassword","nome","cognome","telefono","gender","address","cap_code","tax_code","errors","loading","showPassword","showConfirmPassword","passwordError","showPasswordError","methods","toggleShowPassword","toggleShowConfirmPassword","onSubmit","console","log","response","post","alert","error","general","message"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/UserRegister.vue"],"sourcesContent":["<template>\n  <div class=\"register\">\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4\">Create Your Account</h2>\n      <form @submit.prevent=\"onSubmit\">\n        <!-- Username -->\n        <div class=\"mb-3\">\n          <label for=\"username\" class=\"form-label\">Username</label>\n          <input\n            id=\"username\"\n            v-model=\"form.username\"\n            type=\"text\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n\n        <!-- Email -->\n        <div class=\"mb-3\">\n          <label for=\"email\" class=\"form-label\">Email</label>\n          <input\n            id=\"email\"\n            v-model=\"form.email\"\n            type=\"email\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n\n        <!-- Password -->\n        <div class=\"mb-3\">\n          <label for=\"password\" class=\"form-label\">Password</label>\n          <div class=\"input-group\">\n            <input\n              id=\"password\"\n              v-model=\"form.password\"\n              :type=\"showPassword ? 'text' : 'password'\"\n              class=\"form-control password-input\"\n              required\n              @paste.prevent\n            />\n            <button\n              type=\"button\"\n              class=\"btn eye-button\"\n              @click=\"toggleShowPassword\"\n            >\n              <img\n                :src=\"\n                  showPassword\n                    ? require('@/assets/eye-off.svg')\n                    : require('@/assets/eye-on.svg')\n                \"\n                alt=\"Toggle Password Visibility\"\n                class=\"eye-icon\"\n              />\n            </button>\n          </div>\n          <div v-if=\"passwordError\" class=\"invalid-feedback d-block\">\n            {{ passwordError }}\n          </div>\n        </div>\n\n        <!-- Confirm Password -->\n        <div class=\"mb-3\">\n          <label for=\"confirmPassword\" class=\"form-label\"\n            >Confirm Password</label\n          >\n          <div class=\"input-group\">\n            <input\n              id=\"confirmPassword\"\n              v-model=\"form.confirmPassword\"\n              :type=\"showConfirmPassword ? 'text' : 'password'\"\n              class=\"form-control password-input\"\n              :class=\"{ 'is-invalid': showPasswordError }\"\n            />\n            required @paste.prevent />\n            <button\n              type=\"button\"\n              class=\"btn eye-button\"\n              @click=\"toggleShowConfirmPassword\"\n            >\n              <img\n                :src=\"\n                  showConfirmPassword\n                    ? require('@/assets/eye-off.svg')\n                    : require('@/assets/eye-on.svg')\n                \"\n                alt=\"Toggle Password Visibility\"\n                class=\"eye-icon\"\n              />\n            </button>\n          </div>\n          <div v-if=\"showPasswordError\" class=\"text-danger mt-1\">\n            Passwords do not match.\n          </div>\n        </div>\n\n        <!-- First Name -->\n        <div class=\"mb-3\">\n          <label for=\"nome\" class=\"form-label\">First Name</label>\n          <input\n            id=\"nome\"\n            v-model=\"form.nome\"\n            type=\"text\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n\n        <!-- Last Name -->\n        <div class=\"mb-3\">\n          <label for=\"cognome\" class=\"form-label\">Last Name</label>\n          <input\n            id=\"cognome\"\n            v-model=\"form.cognome\"\n            type=\"text\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n\n        <!-- Birth Date -->\n        <div class=\"mb-3\">\n          <label for=\"data\" class=\"form-label\">Birth Date</label>\n          <input\n            id=\"data\"\n            v-model=\"form.data\"\n            type=\"date\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n\n        <!-- Phone Number -->\n        <div class=\"mb-3\">\n          <label for=\"telefono\" class=\"form-label\">Phone Number</label>\n          <input\n            id=\"telefono\"\n            v-model=\"form.telefono\"\n            type=\"tel\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n\n        <!-- Gender -->\n        <div class=\"mb-3\">\n          <label for=\"gender\" class=\"form-label\">Gender</label>\n          <select\n            id=\"gender\"\n            v-model=\"form.gender\"\n            class=\"form-control\"\n            required\n          >\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n          </select>\n        </div>\n\n        <!-- Address -->\n        <div class=\"mb-3\">\n          <label for=\"address\" class=\"form-label\">Address</label>\n          <input\n            id=\"address\"\n            v-model=\"form.address\"\n            type=\"text\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n\n        <!-- CAP Code -->\n        <div class=\"mb-3\">\n          <label for=\"cap_code\" class=\"form-label\">CAP Code</label>\n          <input\n            id=\"cap_code\"\n            v-model=\"form.cap_code\"\n            type=\"text\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n\n        <!-- Tax Code -->\n        <div class=\"mb-3\">\n          <label for=\"tax_code\" class=\"form-label\">Tax Code</label>\n          <input\n            id=\"tax_code\"\n            v-model=\"form.tax_code\"\n            type=\"text\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n\n        <!-- Submit button -->\n        <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading\">\n          <span v-if=\"loading\">Registering...</span>\n          <span v-else>Register</span>\n        </button>\n\n        <!-- Error message -->\n        <div v-if=\"errors.general\" class=\"invalid-feedback mt-3\">\n          {{ errors.general }}\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"RegisterComponent\",\n  data() {\n    return {\n      form: {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        nome: \"\",\n        cognome: \"\",\n        data: \"\",\n        telefono: \"\",\n        gender: \"\",\n        address: \"\",\n        cap_code: \"\", // Campo aggiunto per il CAP\n        tax_code: \"\", // Campo aggiunto per il Tax Code\n      },\n      errors: {},\n      loading: false,\n      showPassword: false,\n      showConfirmPassword: false,\n      passwordError: \"\",\n      showPasswordError: false, // Aggiunta della variabile per mostrare errore di conferma\n    };\n  },\n  methods: {\n    toggleShowPassword() {\n      this.showPassword = !this.showPassword;\n    },\n    toggleShowConfirmPassword() {\n      this.showConfirmPassword = !this.showConfirmPassword;\n    },\n    async onSubmit() {\n      this.loading = true;\n      this.errors = {};\n      this.passwordError = \"\";\n      this.showPasswordError = false; // Resetta l'errore\n\n      // Controllo delle password\n      if (this.form.password !== this.form.confirmPassword) {\n        this.showPasswordError = true; // Mostra errore\n      } else {\n        this.showPasswordError = false; // Nascondi errore\n      }\n\n      // Se le password non corrispondono, interrompi l'invio\n      if (this.showPasswordError) {\n        this.loading = false;\n        return;\n      }\n\n      try {\n        const {\n          username,\n          email,\n          password,\n          nome,\n          cognome,\n          data,\n          telefono,\n          gender,\n          address,\n          cap_code, // Aggiunto cap_code\n          tax_code, // Aggiunto tax_code\n        } = this.form;\n\n        console.log(\"Dati registrazione:\", {\n          username,\n          email,\n          password,\n          nome,\n          cognome,\n          data,\n          telefono,\n          gender,\n          address,\n          cap_code, // Aggiunto cap_code\n          tax_code, // Aggiunto tax_code\n        });\n\n        const response = await axios.post(\"http://127.0.0.1:5000/register\", {\n          username,\n          email,\n          password,\n          nome,\n          cognome,\n          data,\n          telefono,\n          gender,\n          address,\n          cap_code, // Includere cap_code nella richiesta\n          tax_code, // Includere tax_code nella richiesta\n        });\n\n        alert(\n          \"Registration successful! Please check your email for verification.\"\n        );\n        console.log(response.data);\n      } catch (error) {\n        console.error(\"Error signing up:\", error);\n        if (error.response) {\n          console.error(\"Response data:\", error.response.data);\n          this.errors.general =\n            error.response.data.error || \"Registration failed\";\n        } else {\n          this.errors.general = error.message;\n        }\n        alert(\"Error signing up: \" + this.errors.general);\n      } finally {\n        this.loading = false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.register {\n  background: linear-gradient(135deg, #f7f7f7, #e0e0e0);\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.container {\n  max-width: 600px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  font-size: 2.5rem;\n  color: #343a40;\n}\n\n.form-label {\n  color: #495057;\n}\n\n.invalid-feedback {\n  color: #dc3545;\n}\n\n.btn {\n  margin-top: 20px;\n  background-color: transparent; /* Imposta lo sfondo del pulsante come trasparente */\n  border: none; /* Rimuovi il bordo del pulsante */\n  transition: background-color 0.3s, transform 0.3s;\n}\n\n/* Eye icon styling */\n.input-group {\n  display: flex; /* Rendi il gruppo di input un contenitore flessibile */\n  align-items: center; /* Allinea gli elementi verticalmente */\n}\n\n.eye-icon {\n  width: 24px; /* Regola la dimensione come necessario */\n  height: 24px; /* Regola la dimensione come necessario */\n}\n\n.password-input {\n  height: calc(2.25rem + 2px); /* Mantieni l'altezza con altri campi di input */\n  border-top-right-radius: 0; /* Rimuovi il bordo arrotondato a destra per connettere con il pulsante */\n  border-bottom-right-radius: 0; /* Rimuovi il bordo arrotondato a destra per connettere con il pulsante */\n}\n\n.eye-button {\n  height: calc(\n    2.25rem + 2px\n  ); /* Allinea l'altezza del pulsante con il campo di input */\n  width: 40px; /* Regola la larghezza del pulsante */\n  border-top-left-radius: 0; /* Rimuovi il bordo arrotondato a sinistra per connettere con l'input */\n  border-bottom-left-radius: 0; /* Rimuovi il bordo arrotondato a sinistra per connettere con l'input */\n  display: flex; /* Rendi il pulsante un contenitore flessibile */\n  align-items: center; /* Allinea l'icona verticalmente al centro */\n  justify-content: center; /* Centra l'icona orizzontalmente */\n  padding: 0; /* Rimuovi il padding predefinito */\n  margin-top: 0px; /* Sposta il pulsante verso l'alto */\n}\n\n.eye-button:hover {\n  background-color: rgba(\n    211,\n    211,\n    211,\n    0.5\n  ); /* Colore grigio al passaggio del mouse */\n  transform: scale(\n    1.05\n  ); /* Aggiungi un effetto di ingrandimento se desiderato */\n}\n\n.btn-primary {\n  background-color: #007bff; /* Colore del pulsante principale */\n  color: white; /* Colore del testo del pulsante */\n}\n\n.btn-primary:hover {\n  background-color: #0056b3; /* Colore al passaggio del mouse per il pulsante principale */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}