{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, vShow as _vShow, withDirectives as _withDirectives, normalizeClass as _normalizeClass, Transition as _Transition, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nimport _imports_0 from '@/assets/zoom.svg';\nimport _imports_1 from '@/assets/download.svg';\nconst _hoisted_1 = {\n  key: 0,\n  class: \"day-details\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  class: \"radiograph-list\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"radiograph-preview\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  class: \"radiograph-controls\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"href\"];\nconst _hoisted_10 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_Transition, {\n    name: \"fade\",\n    onBeforeEnter: $options.beforeEnter,\n    onEnter: $options.enter,\n    onLeave: $options.leave\n  }, {\n    default: _withCtx(() => [$props.selectedDay ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, \" Dettagli del Giorno: \" + _toDisplayString($props.selectedDay.date) + \" \" + _toDisplayString($props.monthNames[$props.month]) + \" \" + _toDisplayString($props.year), 1 /* TEXT */), _createCommentVNode(\" Mostra operazioni pianificate se presenti \"), $props.selectedDay.radiographs.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", {\n      class: \"small-text\"\n    }, \"Radiografie caricate:\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.selectedDay.radiographs, radiograph => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: radiograph.name,\n        class: \"radiograph-item\"\n      }, [_createElementVNode(\"div\", null, [_createTextVNode(_toDisplayString(radiograph.date) + \" - \", 1 /* TEXT */), _createElementVNode(\"button\", {\n        onClick: $event => _ctx.toggleRadiograph(radiograph),\n        class: \"view-link\"\n      }, \" Visualizza \", 8 /* PROPS */, _hoisted_4)]), _ctx.selectedRadiograph === radiograph ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", {\n        class: _normalizeClass([\"content-with-animation\", {\n          'slide-down': _ctx.isSlidingDown,\n          'slide-up': _ctx.isSlidingUp\n        }])\n      }, [_withDirectives(_createElementVNode(\"img\", {\n        src: radiograph.url,\n        alt: \"Radiografia\",\n        class: \"radiograph-image\"\n      }, null, 8 /* PROPS */, _hoisted_6), [[_vShow, _ctx.isImageVisible]])], 2 /* CLASS */), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n        onClick: $event => $props.enlargeRadiograph(radiograph.url),\n        class: \"control-button\"\n      }, [...(_cache[0] || (_cache[0] = [_createElementVNode(\"img\", {\n        src: _imports_0,\n        alt: \"Zoom\",\n        class: \"icon\"\n      }, null, -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_8), _createElementVNode(\"a\", {\n        href: `/api/download-radiograph?url=${encodeURIComponent(radiograph.url)}&filename=radiografia_${radiograph.date}.png`,\n        class: \"control-button\",\n        download: \"\"\n      }, [...(_cache[1] || (_cache[1] = [_createElementVNode(\"img\", {\n        src: _imports_1,\n        alt: \"Download\",\n        class: \"icon\"\n      }, null, -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_9)])])) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Mostra il messaggio solo se NON ci sono operazioni e radiografie \"), $props.selectedDay.operations.length === 0 && $props.selectedDay.radiographs.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _cache[3] || (_cache[3] = [_createElementVNode(\"p\", null, \"Non ci sono attività pianificate per questa data.\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onBeforeEnter\", \"onEnter\", \"onLeave\"]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","key","class","_createBlock","_Transition","name","onBeforeEnter","$options","beforeEnter","onEnter","enter","onLeave","leave","default","_withCtx","$props","selectedDay","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","date","monthNames","month","year","_createCommentVNode","radiographs","length","_hoisted_2","_hoisted_3","_Fragment","_renderList","radiograph","_createTextVNode","onClick","$event","_ctx","toggleRadiograph","_hoisted_4","selectedRadiograph","_hoisted_5","_normalizeClass","isSlidingDown","isSlidingUp","src","url","alt","_hoisted_6","isImageVisible","_hoisted_7","enlargeRadiograph","_hoisted_8","href","encodeURIComponent","download","_hoisted_9","operations","_hoisted_10","_cache","_"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/DayDetails.vue"],"sourcesContent":["<template>\n  <transition\n    name=\"fade\"\n    @before-enter=\"beforeEnter\"\n    @enter=\"enter\"\n    @leave=\"leave\"\n  >\n    <div v-if=\"selectedDay\" class=\"day-details\">\n      <h2>\n        Dettagli del Giorno: {{ selectedDay.date }} {{ monthNames[month] }}\n        {{ year }}\n      </h2>\n\n      <!-- Mostra operazioni pianificate se presenti -->\n      <div v-if=\"selectedDay.radiographs.length > 0\">\n        <h3 class=\"small-text\">Radiografie caricate:</h3>\n        <ul class=\"radiograph-list\">\n            <li\n            v-for=\"radiograph in selectedDay.radiographs\"\n            :key=\"radiograph.name\"\n            class=\"radiograph-item\"\n            >\n            <div>\n                {{ radiograph.date }} -\n                <button @click=\"toggleRadiograph(radiograph)\" class=\"view-link\">\n                Visualizza\n                </button>\n            </div>\n\n            <div\n                v-if=\"selectedRadiograph === radiograph\"\n                class=\"radiograph-preview\"\n            >\n                <div\n                class=\"content-with-animation\"\n                :class=\"{ 'slide-down': isSlidingDown, 'slide-up': isSlidingUp }\"\n                >\n                <img\n                    :src=\"radiograph.url\"\n                    alt=\"Radiografia\"\n                    class=\"radiograph-image\"\n                    v-show=\"isImageVisible\"\n                />\n                </div>\n                <div class=\"radiograph-controls\">\n                <button\n                    @click=\"enlargeRadiograph(radiograph.url)\"\n                    class=\"control-button\"\n                >\n                    <img src=\"@/assets/zoom.svg\" alt=\"Zoom\" class=\"icon\" />\n                </button>\n                <a\n                    :href=\"`/api/download-radiograph?url=${encodeURIComponent(\n                    radiograph.url\n                    )}&filename=radiografia_${radiograph.date}.png`\"\n                    class=\"control-button\"\n                    download\n                >\n                    <img src=\"@/assets/download.svg\" alt=\"Download\" class=\"icon\" />\n                </a>\n                </div>\n            </div>\n            </li>\n        </ul>\n        </div>\n\n\n      <!-- Mostra il messaggio solo se NON ci sono operazioni e radiografie -->\n      <div\n        v-if=\"\n          selectedDay.operations.length === 0 &&\n          selectedDay.radiographs.length === 0\n        \"\n      >\n        <p>Non ci sono attività pianificate per questa data.</p>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nexport default {\n  props: {\n    selectedDay: Object,\n    monthNames: Array,\n    month: Number,\n    year: Number,\n    formatDate: Function,\n    formatTime: Function,\n    enlargeRadiograph: Function,\n  },\n  methods: {\n    beforeEnter(el) {\n      el.style.opacity = 0;\n    },\n    enter(el, done) {\n      el.offsetHeight; // Trigger reflow\n      el.style.transition = \"opacity 0.5s ease\";\n      el.style.opacity = 1;\n      done();\n    },\n    leave(el, done) {\n      el.style.transition = \"opacity 0.5s ease\";\n      el.style.opacity = 0;\n      done();\n    },\n  },\n};\n</script>\n\n<style scoped>\n.day-details {\n  margin-top: 50px;\n  text-align: left;\n  transition: opacity 0.5s ease;\n}\n\n.day-details h2 {\n  font-size: 1em;\n  margin-bottom: 10px;\n}\n\n.day-details p {\n  font-size: 0.7em;\n  margin-bottom: 10px;\n}\n\n.day-details ul {\n  list-style-type: none;\n  padding: 0;\n}\n\n.day-details li {\n  margin-bottom: 10px;\n}\n\n/* Pulsanti più piccoli */\n.day-details button {\n  background-color: #007bff;\n  color: white;\n  border-radius: 5px;\n  padding: 5px 10px; /* Dimensione del padding ridotta */\n  font-size: 0.8em; /* Testo più piccolo */\n  border: none;\n  cursor: pointer;\n}\n\n.day-details button:hover {\n  background-color: #0056b3; /* Effetto hover */\n}\n\n.small-text {\n  font-size: 0.9rem; /* Puoi regolare la dimensione come preferisci */\n  font-weight: 600; /* Opzionale, per mantenere il testo in grassetto */\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.5s ease;\n}\n\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}