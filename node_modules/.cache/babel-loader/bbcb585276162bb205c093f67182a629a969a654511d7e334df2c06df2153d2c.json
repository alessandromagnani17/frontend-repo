{"ast":null,"code":"import PatientList from \"./PatientList.vue\";\nimport PatientRadiographs from \"./PatientRadiographs.vue\";\nimport UploadRadiograph from \"./UploadRadiographs.vue\";\nimport { ref, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { getRadiographs, getPatients } from \"../services/api-service\";\nexport default {\n  components: {\n    PatientList,\n    PatientRadiographs,\n    UploadRadiograph\n  },\n  setup() {\n    const store = useStore(); // Crea un'istanza dello store\n    const patients = ref([]);\n    const selectedPatient = ref(null);\n    const selectedPatientRadiographs = ref([]);\n\n    // Ottieni l'ID del dottore loggato\n    const doctorId = store.state.user.id;\n    onMounted(async () => {\n      // Ottieni i pazienti associati\n      patients.value = await getPatients(doctorId);\n    });\n\n    // Seleziona un paziente e ottieni le sue radiografie\n    const selectPatient = async patient => {\n      selectedPatient.value = patient;\n      selectedPatientRadiographs.value = await getRadiographs(patient.id);\n    };\n    const handleUploadSuccess = () => {\n      selectPatient(selectedPatient.value); // Ricarica le radiografie\n    };\n    return {\n      patients,\n      selectPatient,\n      handleUploadSuccess,\n      selectedPatient,\n      selectedPatientRadiographs\n    };\n  }\n};","map":{"version":3,"names":["PatientList","PatientRadiographs","UploadRadiograph","ref","onMounted","useStore","getRadiographs","getPatients","components","setup","store","patients","selectedPatient","selectedPatientRadiographs","doctorId","state","user","id","value","selectPatient","patient","handleUploadSuccess"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\DoctorDashboard.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Dashboard Dottore</h1>\r\n    <PatientList :patients=\"patients\" @selectPatient=\"selectPatient\" />\r\n    <UploadRadiograph\r\n      v-if=\"selectedPatient\"\r\n      @uploadSuccess=\"handleUploadSuccess\"\r\n      :patientId=\"selectedPatient.id\"\r\n    />\r\n    <PatientRadiographs\r\n      :radiographs=\"selectedPatientRadiographs\"\r\n      v-if=\"selectedPatient\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PatientList from \"./PatientList.vue\";\r\nimport PatientRadiographs from \"./PatientRadiographs.vue\";\r\nimport UploadRadiograph from \"./UploadRadiographs.vue\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { getRadiographs, getPatients } from \"../services/api-service\";\r\n\r\nexport default {\r\n  components: {\r\n    PatientList,\r\n    PatientRadiographs,\r\n    UploadRadiograph,\r\n  },\r\n  setup() {\r\n    const store = useStore(); // Crea un'istanza dello store\r\n    const patients = ref([]);\r\n    const selectedPatient = ref(null);\r\n    const selectedPatientRadiographs = ref([]);\r\n\r\n    // Ottieni l'ID del dottore loggato\r\n    const doctorId = store.state.user.id;\r\n\r\n    onMounted(async () => {\r\n      // Ottieni i pazienti associati\r\n      patients.value = await getPatients(doctorId);\r\n    });\r\n\r\n    // Seleziona un paziente e ottieni le sue radiografie\r\n    const selectPatient = async (patient) => {\r\n      selectedPatient.value = patient;\r\n      selectedPatientRadiographs.value = await getRadiographs(patient.id);\r\n    };\r\n\r\n    const handleUploadSuccess = () => {\r\n      selectPatient(selectedPatient.value); // Ricarica le radiografie\r\n    };\r\n\r\n    return {\r\n      patients,\r\n      selectPatient,\r\n      handleUploadSuccess,\r\n      selectedPatient,\r\n      selectedPatientRadiographs,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Puoi aggiungere qui il tuo stile personalizzato per la dashboard */\r\n</style>\r\n"],"mappings":"AAiBA,OAAOA,WAAU,MAAO,mBAAmB;AAC3C,OAAOC,kBAAiB,MAAO,0BAA0B;AACzD,OAAOC,gBAAe,MAAO,yBAAyB;AACtD,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,cAAc,EAAEC,WAAU,QAAS,yBAAyB;AAErE,eAAe;EACbC,UAAU,EAAE;IACVR,WAAW;IACXC,kBAAkB;IAClBC;EACF,CAAC;EACDO,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIL,QAAQ,CAAC,CAAC,EAAE;IAC1B,MAAMM,QAAO,GAAIR,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMS,eAAc,GAAIT,GAAG,CAAC,IAAI,CAAC;IACjC,MAAMU,0BAAyB,GAAIV,GAAG,CAAC,EAAE,CAAC;;IAE1C;IACA,MAAMW,QAAO,GAAIJ,KAAK,CAACK,KAAK,CAACC,IAAI,CAACC,EAAE;IAEpCb,SAAS,CAAC,YAAY;MACpB;MACAO,QAAQ,CAACO,KAAI,GAAI,MAAMX,WAAW,CAACO,QAAQ,CAAC;IAC9C,CAAC,CAAC;;IAEF;IACA,MAAMK,aAAY,GAAI,MAAOC,OAAO,IAAK;MACvCR,eAAe,CAACM,KAAI,GAAIE,OAAO;MAC/BP,0BAA0B,CAACK,KAAI,GAAI,MAAMZ,cAAc,CAACc,OAAO,CAACH,EAAE,CAAC;IACrE,CAAC;IAED,MAAMI,mBAAkB,GAAIA,CAAA,KAAM;MAChCF,aAAa,CAACP,eAAe,CAACM,KAAK,CAAC,EAAE;IACxC,CAAC;IAED,OAAO;MACLP,QAAQ;MACRQ,aAAa;MACbE,mBAAmB;MACnBT,eAAe;MACfC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}