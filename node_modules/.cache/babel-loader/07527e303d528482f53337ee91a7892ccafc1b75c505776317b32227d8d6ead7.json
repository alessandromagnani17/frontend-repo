{"ast":null,"code":"import { ref } from \"vue\"; // Importa il composable ref da Vue 3\nimport { useRouter } from \"vue-router\"; // Importa il router per la navigazione\nimport axios from \"axios\"; // Importa axios per fare richieste HTTP\n\nexport default {\n  name: \"UserLogin\",\n  setup() {\n    // Stato del form\n    const form = ref({\n      email: \"\",\n      password: \"\",\n      rememberMe: false\n    });\n\n    // Stato degli errori\n    const errors = ref({\n      email: \"\",\n      password: \"\",\n      general: \"\"\n    });\n    const router = useRouter(); // Inizializza il router\n    const currentStep = ref(1);\n    const loading = ref(false);\n    const showPassword = ref(false);\n\n    // Funzione per passare allo step successivo\n    const goToNextStep = () => {\n      if (isStepValid(currentStep.value)) {\n        currentStep.value++;\n      }\n    };\n\n    // Funzione per tornare allo step precedente\n    const goToPreviousStep = () => {\n      currentStep.value--;\n    };\n\n    // Funzione per validare il form\n    const validateForm = () => {\n      errors.value = {\n        email: form.value.email ? \"\" : \"Email è richiesta\",\n        password: form.value.password ? \"\" : \"Password è richiesta\"\n      };\n      return Object.values(errors.value).every(error => !error);\n    };\n\n    // Funzione per validare lo step\n    const isStepValid = step => {\n      if (step === 1) {\n        return form.value.email;\n      } else if (step === 2) {\n        return form.value.password;\n      }\n      return false;\n    };\n\n    // Funzione per mostrare/nascondere la password\n    const toggleShowPassword = () => {\n      showPassword.value = !showPassword.value;\n    };\n    const onSubmit = async () => {\n      if (!validateForm()) return;\n      loading.value = true;\n      try {\n        // Effettua la richiesta POST per il login usando axios\n        const response = await axios.post(\"/api/login\", {\n          email: form.value.email,\n          // Passa l'email come username\n          password: form.value.password\n        });\n\n        // Simula successo del login\n        alert(\"Login avvenuto con successo! Benvenuto \" + response.data.username);\n\n        // Naviga alla pagina di benvenuto o dashboard\n        router.push({\n          name: \"Welcome\",\n          query: {\n            username: form.value.email\n          } // Passa l'email come parametro\n        });\n      } catch (error) {\n        console.error(\"Errore di login:\", error);\n        alert(`Errore di login: ${error.message}`);\n        if (error.response) {\n          alert(`Status code: ${error.response.status}`);\n          alert(`Errore dal server: ${error.response.data}`);\n          errors.value.general = `Errore di login: ${error.response.data.message || error.response.statusText}`;\n        } else if (error.request) {\n          alert(\"La richiesta è stata inviata ma non ha ricevuto risposta dal server.\");\n          errors.value.general = \"Errore di rete o server non raggiungibile.\";\n        } else {\n          alert(\"Errore sconosciuto durante la richiesta.\");\n          errors.value.general = \"Errore sconosciuto durante la richiesta.\";\n        }\n      } finally {\n        loading.value = false;\n      }\n    };\n    return {\n      form,\n      currentStep,\n      loading,\n      showPassword,\n      toggleShowPassword,\n      onSubmit,\n      goToNextStep,\n      goToPreviousStep,\n      isStepValid,\n      errors\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","axios","name","setup","form","email","password","rememberMe","errors","general","router","currentStep","loading","showPassword","goToNextStep","isStepValid","value","goToPreviousStep","validateForm","Object","values","every","error","step","toggleShowPassword","onSubmit","response","post","alert","data","username","push","query","console","message","status","statusText","request"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\UserLogin.vue"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <div class=\"container mt-5\">\n      <div class=\"header\">\n        <button\n          v-if=\"currentStep > 1\"\n          class=\"back-button\"\n          @click=\"goToPreviousStep\"\n        >\n          <img src=\"@/assets/back-icon.svg\" alt=\"Indietro\" class=\"back-icon\" />\n        </button>\n      </div>\n\n      <span class=\"step-title\">Passaggio {{ currentStep }} di 2</span>\n      <h2 class=\"mb-4\">Accedi al tuo Account</h2>\n\n      <form @submit.prevent=\"onSubmit\">\n        <!-- Step 1: Inserisci Email -->\n        <div v-if=\"currentStep === 1\">\n          <div class=\"mb-3\">\n            <label for=\"email\" class=\"form-label\">Email</label>\n            <input\n              id=\"email\"\n              v-model=\"form.email\"\n              type=\"email\"\n              class=\"form-control\"\n              :class=\"{ 'is-invalid': errors.email }\"\n              required\n            />\n            <div class=\"invalid-feedback\">{{ errors.email }}</div>\n          </div>\n        </div>\n\n        <!-- Step 2: Inserisci Password -->\n        <div v-if=\"currentStep === 2\">\n          <div class=\"mb-3\">\n            <label for=\"password\" class=\"form-label\">Password</label>\n            <div class=\"input-group\">\n              <input\n                id=\"password\"\n                v-model=\"form.password\"\n                :type=\"showPassword ? 'text' : 'password'\"\n                class=\"form-control\"\n                :class=\"{ 'is-invalid': errors.password }\"\n                required\n              />\n              <button\n                type=\"button\"\n                class=\"btn eye-button\"\n                @click=\"toggleShowPassword\"\n              >\n                <img\n                  :src=\"\n                    showPassword\n                      ? require('@/assets/eye-off.svg')\n                      : require('@/assets/eye-on.svg')\n                  \"\n                  alt=\"Toggle Password Visibility\"\n                  class=\"eye-icon\"\n                />\n              </button>\n            </div>\n            <div class=\"invalid-feedback\">{{ errors.password }}</div>\n          </div>\n\n          <div class=\"mb-3 form-check\">\n            <input\n              id=\"rememberMe\"\n              v-model=\"form.rememberMe\"\n              type=\"checkbox\"\n              class=\"form-check-input\"\n            />\n            <label for=\"rememberMe\" class=\"form-check-label\">Ricordami</label>\n          </div>\n        </div>\n\n        <!-- Bottone di avanzamento o login -->\n        <div v-if=\"currentStep < 2\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-next\"\n            @click=\"goToNextStep\"\n            :disabled=\"!isStepValid(currentStep)\"\n          >\n            Avanti\n          </button>\n        </div>\n\n        <div v-if=\"currentStep === 2\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-next\"\n            :disabled=\"loading || !isStepValid(currentStep)\"\n          >\n            <span v-if=\"loading\">Login...</span>\n            <span v-else>Accedi</span>\n          </button>\n          <!-- Error message -->\n          <div v-if=\"errors.general\" class=\"invalid-feedback mt-3\">\n            {{ errors.general }}\n          </div>\n        </div>\n      </form>\n    </div>\n\n    <!-- Loading overlay -->\n    <div v-if=\"loading\" class=\"loading-overlay\">\n      <div class=\"loading-icon\">\n        <img src=\"@/assets/loading-icon.svg\" alt=\"Loading...\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\"; // Importa il composable ref da Vue 3\nimport { useRouter } from \"vue-router\"; // Importa il router per la navigazione\nimport axios from \"axios\"; // Importa axios per fare richieste HTTP\n\nexport default {\n  name: \"UserLogin\",\n  setup() {\n    // Stato del form\n    const form = ref({\n      email: \"\",\n      password: \"\",\n      rememberMe: false,\n    });\n\n    // Stato degli errori\n    const errors = ref({\n      email: \"\",\n      password: \"\",\n      general: \"\",\n    });\n\n    const router = useRouter(); // Inizializza il router\n    const currentStep = ref(1);\n    const loading = ref(false);\n    const showPassword = ref(false);\n\n    // Funzione per passare allo step successivo\n    const goToNextStep = () => {\n      if (isStepValid(currentStep.value)) {\n        currentStep.value++;\n      }\n    };\n\n    // Funzione per tornare allo step precedente\n    const goToPreviousStep = () => {\n      currentStep.value--;\n    };\n\n    // Funzione per validare il form\n    const validateForm = () => {\n      errors.value = {\n        email: form.value.email ? \"\" : \"Email è richiesta\",\n        password: form.value.password ? \"\" : \"Password è richiesta\",\n      };\n      return Object.values(errors.value).every((error) => !error);\n    };\n\n    // Funzione per validare lo step\n    const isStepValid = (step) => {\n      if (step === 1) {\n        return form.value.email;\n      } else if (step === 2) {\n        return form.value.password;\n      }\n      return false;\n    };\n\n    // Funzione per mostrare/nascondere la password\n    const toggleShowPassword = () => {\n      showPassword.value = !showPassword.value;\n    };\n\n    const onSubmit = async () => {\n      if (!validateForm()) return;\n      loading.value = true;\n\n      try {\n        // Effettua la richiesta POST per il login usando axios\n        const response = await axios.post(\"/api/login\", {\n          email: form.value.email, // Passa l'email come username\n          password: form.value.password,\n        });\n\n        // Simula successo del login\n        alert(\n          \"Login avvenuto con successo! Benvenuto \" + response.data.username\n        );\n\n        // Naviga alla pagina di benvenuto o dashboard\n        router.push({\n          name: \"Welcome\",\n          query: { username: form.value.email }, // Passa l'email come parametro\n        });\n      } catch (error) {\n        console.error(\"Errore di login:\", error);\n        alert(`Errore di login: ${error.message}`);\n        if (error.response) {\n          alert(`Status code: ${error.response.status}`);\n          alert(`Errore dal server: ${error.response.data}`);\n          errors.value.general = `Errore di login: ${\n            error.response.data.message || error.response.statusText\n          }`;\n        } else if (error.request) {\n          alert(\n            \"La richiesta è stata inviata ma non ha ricevuto risposta dal server.\"\n          );\n          errors.value.general = \"Errore di rete o server non raggiungibile.\";\n        } else {\n          alert(\"Errore sconosciuto durante la richiesta.\");\n          errors.value.general = \"Errore sconosciuto durante la richiesta.\";\n        }\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    return {\n      form,\n      currentStep,\n      loading,\n      showPassword,\n      toggleShowPassword,\n      onSubmit,\n      goToNextStep,\n      goToPreviousStep,\n      isStepValid,\n      errors,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.login {\n  background: #ffffff; /* Sfondo bianco */\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0);\n}\n\n.container {\n  max-width: 600px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 100px;\n  height: auto;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.back-button {\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  margin-left: -10px;\n}\n\n.back-icon {\n  width: 30px;\n  height: 30px;\n}\n\n.step-title {\n  font-size: 10px;\n  margin-bottom: 10px;\n}\n\nh2 {\n  font-size: 18px;\n  margin-bottom: 30px;\n}\n\n.form-label {\n  font-size: 12px;\n}\n\n.form-control {\n  background: #f2f2f2;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 12px;\n}\n\n.input-group {\n  position: relative;\n}\n\n.eye-button {\n  background: transparent;\n  border: 1px solid #ccc;\n  cursor: pointer;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  width: 46px;\n}\n\n.eye-icon {\n  width: 18px;\n  height: 18px;\n  margin: auto;\n}\n\n.btn-next {\n  width: 100%;\n  margin-top: 20px;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.loading-icon {\n  width: 50px;\n  height: 50px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}