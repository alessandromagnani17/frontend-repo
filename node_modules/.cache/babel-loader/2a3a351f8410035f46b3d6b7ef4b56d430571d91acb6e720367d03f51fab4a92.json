{"ast":null,"code":"import PatientRadiographs from \"./PatientRadiographs.vue\";\nimport UploadRadiograph from \"./UploadRadiographs.vue\";\nimport { ref, onMounted } from \"vue\";\nimport { getPatientInfo, getRadiographs } from \"../services/api-service\";\nexport default {\n  components: {\n    PatientRadiographs,\n    UploadRadiograph\n  },\n  setup() {\n    const selectedPatient = ref(null);\n    const selectedPatientRadiographs = ref([]);\n    const userId = localStorage.getItem(\"userId\"); // Presupponendo che l'ID dell'utente paziente sia salvato qui\n\n    onMounted(async () => {\n      if (userId) {\n        try {\n          selectedPatient.value = await getPatientInfo(userId);\n          selectedPatientRadiographs.value = await getRadiographs(userId);\n        } catch (error) {\n          console.error(\"Errore nel caricamento dei dettagli del paziente:\", error);\n        }\n      } else {\n        console.error(\"Nessun ID paziente trovato nel localStorage.\");\n      }\n    });\n    const handleUploadSuccess = async () => {\n      if (selectedPatient.value) {\n        selectedPatientRadiographs.value = await getRadiographs(selectedPatient.value.userId);\n      }\n    };\n    return {\n      selectedPatient,\n      selectedPatientRadiographs,\n      handleUploadSuccess\n    };\n  }\n};","map":{"version":3,"names":["PatientRadiographs","UploadRadiograph","ref","onMounted","getPatientInfo","getRadiographs","components","setup","selectedPatient","selectedPatientRadiographs","userId","localStorage","getItem","value","error","console","handleUploadSuccess"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/PatientDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <div class=\"container\">\n      <div class=\"header\">\n        <h1>Dashboard Paziente</h1>\n      </div>\n\n      <div v-if=\"selectedPatient\" class=\"info\">\n        <h2>Dettagli Paziente</h2>\n        <div class=\"patient-info\">\n          <p><strong>Nome:</strong> {{ selectedPatient.name }}</p>\n          <p><strong>Cognome:</strong> {{ selectedPatient.family_name }}</p>\n          <p><strong>Email:</strong> {{ selectedPatient.email }}</p>\n          <p>\n            <strong>Data di nascita:</strong> {{ selectedPatient.birthdate }}\n          </p>\n          <p>\n            <strong>Numero di telefono:</strong>\n            {{ selectedPatient.phone_number }}\n          </p>\n          <p><strong>Indirizzo:</strong> {{ selectedPatient.address }}</p>\n        </div>\n\n        <div class=\"upload-section\">\n          <UploadRadiograph\n            @uploadSuccess=\"handleUploadSuccess\"\n            :patientId=\"selectedPatient.userId\"\n          />\n        </div>\n\n        <div class=\"radiographs-section\">\n          <PatientRadiographs\n            :radiographs=\"selectedPatientRadiographs\"\n            :patientId=\"selectedPatient.userId\"\n            :patientName=\"selectedPatient.name\"\n          />\n        </div>\n      </div>\n      <div v-else>\n        <p class=\"no-patient\">Nessun paziente loggato trovato.</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PatientRadiographs from \"./PatientRadiographs.vue\";\nimport UploadRadiograph from \"./UploadRadiographs.vue\";\nimport { ref, onMounted } from \"vue\";\nimport {\n  getPatientInfo,\n  getRadiographs,\n} from \"../services/api-service\";\n\nexport default {\n  components: {\n    PatientRadiographs,\n    UploadRadiograph,\n  },\n  setup() {\n    const selectedPatient = ref(null);\n    const selectedPatientRadiographs = ref([]);\n\n    const userId = localStorage.getItem(\"userId\"); // Presupponendo che l'ID dell'utente paziente sia salvato qui\n\n    onMounted(async () => {\n      if (userId) {\n        try {\n          selectedPatient.value = await getPatientInfo(userId);\n          selectedPatientRadiographs.value = await getRadiographs(\n            userId\n          );\n        } catch (error) {\n          console.error(\n            \"Errore nel caricamento dei dettagli del paziente:\",\n            error\n          );\n        }\n      } else {\n        console.error(\"Nessun ID paziente trovato nel localStorage.\");\n      }\n    });\n\n    const handleUploadSuccess = async () => {\n      if (selectedPatient.value) {\n        selectedPatientRadiographs.value = await getRadiographs(\n          selectedPatient.value.userId\n        );\n      }\n    };\n\n    return {\n      selectedPatient,\n      selectedPatientRadiographs,\n      handleUploadSuccess,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.dashboard {\n  background: #ffffff;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.container {\n  max-width: 600px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 100px;\n  width: 100%;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\nh1 {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\nh2 {\n  font-size: 18px;\n  margin-bottom: 20px;\n}\n\n.no-patient {\n  font-size: 14px;\n  color: #999;\n}\n\n.info {\n  margin-top: 30px;\n}\n\n.patient-info p {\n  font-size: 14px;\n  margin-bottom: 10px;\n}\n\n.upload-section,\n.radiographs-section {\n  margin-top: 30px;\n}\n\n.btn-next {\n  width: 100%;\n  margin-top: 10px;\n  padding: 0.4rem;\n  cursor: pointer;\n  font-size: 13px;\n}\n\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.loading-icon {\n  width: 50px;\n  height: 50px;\n}\n</style>\n"],"mappings":"AA8CA,OAAOA,kBAAiB,MAAO,0BAA0B;AACzD,OAAOC,gBAAe,MAAO,yBAAyB;AACtD,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SACEC,cAAc,EACdC,cAAc,QACT,yBAAyB;AAEhC,eAAe;EACbC,UAAU,EAAE;IACVN,kBAAkB;IAClBC;EACF,CAAC;EACDM,KAAKA,CAAA,EAAG;IACN,MAAMC,eAAc,GAAIN,GAAG,CAAC,IAAI,CAAC;IACjC,MAAMO,0BAAyB,GAAIP,GAAG,CAAC,EAAE,CAAC;IAE1C,MAAMQ,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;;IAE/CT,SAAS,CAAC,YAAY;MACpB,IAAIO,MAAM,EAAE;QACV,IAAI;UACFF,eAAe,CAACK,KAAI,GAAI,MAAMT,cAAc,CAACM,MAAM,CAAC;UACpDD,0BAA0B,CAACI,KAAI,GAAI,MAAMR,cAAc,CACrDK,MACF,CAAC;QACH,EAAE,OAAOI,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CACX,mDAAmD,EACnDA,KACF,CAAC;QACH;MACF,OAAO;QACLC,OAAO,CAACD,KAAK,CAAC,8CAA8C,CAAC;MAC/D;IACF,CAAC,CAAC;IAEF,MAAME,mBAAkB,GAAI,MAAAA,CAAA,KAAY;MACtC,IAAIR,eAAe,CAACK,KAAK,EAAE;QACzBJ,0BAA0B,CAACI,KAAI,GAAI,MAAMR,cAAc,CACrDG,eAAe,CAACK,KAAK,CAACH,MACxB,CAAC;MACH;IACF,CAAC;IAED,OAAO;MACLF,eAAe;MACfC,0BAA0B;MAC1BO;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}