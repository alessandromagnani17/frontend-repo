{"ast":null,"code":"import { getPatientsFromDoctor } from \"@/services/api-service\";\nimport { loadRadiographiesForPatient } from \"@/services/api-service\";\nexport default {\n  data() {\n    return {\n      patients: [],\n      selectedPatientName: \"\",\n      selectedPatientSurname: \"\",\n      selectedPatientId: \"\",\n      role: \"\",\n      userRadiographs: [],\n      isLoading: true,\n      isLoadingRadiographs: false,\n      errorNoRadiographies: false\n    };\n  },\n  async created() {\n    const userDataString = localStorage.getItem(\"userData\");\n    const userData = JSON.parse(userDataString);\n    this.role = userData.role;\n    if (this.role === \"doctor\") {\n      this.patients = await getPatientsFromDoctor(userData.doctorID);\n    } else if (this.role === \"patient\") {\n      this.selectedPatientId = userData.uid;\n      this.selectedPatientName = localStorage.getItem(\"Name\");\n      this.selectedPatientSurname = localStorage.getItem(\"Surname\");\n      this.isLoadingRadiographs = true;\n      this.userRadiographs = await loadRadiographiesForPatient(this.selectedPatientId);\n      if (this.userRadiographs.length == 0) {\n        this.errorNoRadiographies = true;\n      } else {\n        this.errorNoRadiographies = false;\n      }\n      this.isLoadingRadiographs = false;\n    }\n    const id = this.$route.query.patient_id;\n    if (id) {\n      this.selectedPatientId = id;\n      this.isLoadingRadiographs = true;\n      const patient = this.patients.find(p => p.userId === this.selectedPatientId);\n      if (patient) {\n        this.selectedPatientName = patient.name;\n        this.selectedPatientSurname = patient.family_name;\n        this.selectedPatientId = patient.userId;\n      }\n      this.userRadiographs = await loadRadiographiesForPatient(this.selectedPatientId);\n      if (this.userRadiographs.length == 0) {\n        this.errorNoRadiographies = true;\n      } else {\n        this.errorNoRadiographies = false;\n      }\n      this.isLoadingRadiographs = false;\n    }\n    this.isLoading = false;\n  },\n  methods: {\n    async onPatientChange() {\n      this.userRadiographs = [];\n      this.isLoadingRadiographs = true;\n      const patient = this.patients.find(p => p.userId === this.selectedPatientId);\n      if (patient) {\n        this.selectedPatientName = patient.name;\n        this.selectedPatientSurname = patient.family_name;\n        this.selectedPatientId = patient.userId;\n      }\n      this.userRadiographs = await loadRadiographiesForPatient(this.selectedPatientId);\n      if (this.userRadiographs.length == 0) {\n        this.errorNoRadiographies = true;\n      } else {\n        this.errorNoRadiographies = false;\n      }\n      this.isLoadingRadiographs = false;\n      this.$router.push({\n        name: \"ViewRadiographs\",\n        query: {\n          patient_id: this.selectedPatientId\n        }\n      });\n    },\n    changePatient() {\n      this.selectedPatientId = \"\";\n      this.selectedPatientName = \"\";\n      this.selectedPatientSurname = \"\";\n      this.userRadiographies = [];\n      this.errorNoRadiographies = false;\n      this.isLoadingRadiographs = false;\n      this.$router.push({\n        name: \"ViewRadiographs\"\n      });\n    },\n    goToRadiographDetail(index, or, gd) {\n      localStorage.setItem(\"selected_original_img\", or);\n      localStorage.setItem(\"selected_gradcam_img\", gd);\n      const idx = index + 1;\n      this.$router.push({\n        name: \"RadiographyDetail\",\n        query: {\n          patient_id: this.selectedPatientId,\n          index: idx\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["getPatientsFromDoctor","loadRadiographiesForPatient","data","patients","selectedPatientName","selectedPatientSurname","selectedPatientId","role","userRadiographs","isLoading","isLoadingRadiographs","errorNoRadiographies","created","userDataString","localStorage","getItem","userData","JSON","parse","doctorID","uid","length","id","$route","query","patient_id","patient","find","p","userId","name","family_name","methods","onPatientChange","$router","push","changePatient","userRadiographies","goToRadiographDetail","index","or","gd","setItem","idx"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/views/ViewRadiographs.vue"],"sourcesContent":["<template>\n  <div class=\"welcome\">\n    <div class=\"container mt-5\">\n      <h5 class=\"text-primary\"><strong>Visualizza radiografie</strong></h5>\n      <div v-if=\"isLoading\" class=\"alert alert-info\">Caricamento...</div>\n      <div v-else-if=\"role === 'doctor' || role === 'patient'\">\n        <div v-if=\"role === 'doctor'\" class=\"select-container mb-4\">\n          <select\n            v-if=\"patients.length > 0 && !selectedPatientId\"\n            v-model=\"selectedPatientId\"\n            @change=\"onPatientChange\"\n            class=\"form-select custom-select\"\n          >\n            <option value=\"\" disabled selected>Seleziona un paziente</option>\n            <option\n              v-for=\"patient in patients\"\n              :key=\"patient.userId\"\n              :value=\"patient.userId\"\n            >\n              {{ patient.name }} {{ patient.family_name }} (ID:\n              {{ patient.userId }})\n            </option>\n          </select>\n        </div>\n        <div v-if=\"selectedPatientId\" class=\"mt-2\">\n          <div v-if=\"role === 'doctor'\" class=\"text-secondary\">\n            Utente selezionato:\n            <strong\n              >{{ selectedPatientName }} {{ selectedPatientSurname }} (ID:\n              {{ selectedPatientId }})</strong\n            >\n          </div>\n          <div v-else>\n            Benvenuto\n            <strong class=\"text-secondary\"\n              >{{ selectedPatientName }} {{ selectedPatientSurname }}</strong\n            >\n          </div>\n          <div v-if=\"role === 'doctor'\">\n            <button @click=\"changePatient\" class=\"btn btn-primary mt-2\">\n              Cambia paziente\n            </button>\n          </div>\n        </div>\n        <div v-if=\"isLoadingRadiographs\" class=\"alert alert-info mt-3\">\n          Caricamento delle radiografie...\n        </div>\n        <div\n          class=\"row mt-5\"\n          v-if=\"userRadiographs.length > 0 && selectedPatientId\"\n        >\n          <div\n            v-for=\"(radiograph, index) in userRadiographs\"\n            :key=\"radiograph.radiography_id\"\n            @click=\"\n              goToRadiographDetail(\n                index,\n                radiograph.original_image,\n                radiograph.gradcam_image\n              )\n            \"\n            class=\"card\"\n          >\n            <img\n              :src=\"radiograph.original_image\"\n              class=\"card-img-top\"\n              alt=\"Radiografia\"\n            />\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">Radiografia {{ index + 1 }}</h5>\n            </div>\n          </div>\n        </div>\n        <div v-else>\n          <div v-if=\"errorNoRadiographies\" class=\"alert alert-danger mt-3\">\n            <p>\n              L'utente {{ selectedPatientName }}\n              {{ selectedPatientSurname }} non ha radiografie.\n            </p>\n          </div>\n        </div>\n        <div\n          v-if=\"patients.length == 0 && role === 'doctor'\"\n          class=\"text-danger\"\n        >\n          <p>NON hai pazienti.</p>\n        </div>\n      </div>\n      <div v-else>\n        <p class=\"text-muted\">\n          You do not have permission to view radiographs.\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getPatientsFromDoctor } from \"@/services/api-service\";\nimport { loadRadiographiesForPatient } from \"@/services/api-service\";\n\nexport default {\n  data() {\n    return {\n      patients: [],\n      selectedPatientName: \"\",\n      selectedPatientSurname: \"\",\n      selectedPatientId: \"\",\n      role: \"\",\n      userRadiographs: [],\n      isLoading: true,\n      isLoadingRadiographs: false,\n      errorNoRadiographies: false,\n    };\n  },\n  async created() {\n    const userDataString = localStorage.getItem(\"userData\");\n    const userData = JSON.parse(userDataString);\n    this.role = userData.role;\n    if (this.role === \"doctor\") {\n      this.patients = await getPatientsFromDoctor(userData.doctorID);\n    } else if (this.role === \"patient\") {\n      this.selectedPatientId = userData.uid;\n      this.selectedPatientName = localStorage.getItem(\"Name\");\n      this.selectedPatientSurname = localStorage.getItem(\"Surname\");\n      this.isLoadingRadiographs = true;\n\n      this.userRadiographs = await loadRadiographiesForPatient(\n        this.selectedPatientId\n      );\n\n      if (this.userRadiographs.length == 0) {\n        this.errorNoRadiographies = true;\n      } else {\n        this.errorNoRadiographies = false;\n      }\n\n      this.isLoadingRadiographs = false;\n    }\n    const id = this.$route.query.patient_id;\n    if (id) {\n      this.selectedPatientId = id;\n      this.isLoadingRadiographs = true;\n      const patient = this.patients.find(\n        (p) => p.userId === this.selectedPatientId\n      );\n\n      if (patient) {\n        this.selectedPatientName = patient.name;\n        this.selectedPatientSurname = patient.family_name;\n        this.selectedPatientId = patient.userId;\n      }\n\n      this.userRadiographs = await loadRadiographiesForPatient(\n        this.selectedPatientId\n      );\n\n      if (this.userRadiographs.length == 0) {\n        this.errorNoRadiographies = true;\n      } else {\n        this.errorNoRadiographies = false;\n      }\n\n      this.isLoadingRadiographs = false;\n    }\n    this.isLoading = false;\n  },\n  methods: {\n    async onPatientChange() {\n      this.userRadiographs = [];\n      this.isLoadingRadiographs = true;\n      const patient = this.patients.find(\n        (p) => p.userId === this.selectedPatientId\n      );\n\n      if (patient) {\n        this.selectedPatientName = patient.name;\n        this.selectedPatientSurname = patient.family_name;\n        this.selectedPatientId = patient.userId;\n      }\n\n      this.userRadiographs = await loadRadiographiesForPatient(\n        this.selectedPatientId\n      );\n\n      if (this.userRadiographs.length == 0) {\n        this.errorNoRadiographies = true;\n      } else {\n        this.errorNoRadiographies = false;\n      }\n\n      this.isLoadingRadiographs = false;\n      this.$router.push({\n        name: \"ViewRadiographs\",\n        query: {\n          patient_id: this.selectedPatientId,\n        },\n      });\n    },\n    changePatient() {\n      this.selectedPatientId = \"\";\n      this.selectedPatientName = \"\";\n      this.selectedPatientSurname = \"\";\n      this.userRadiographies = [];\n      this.errorNoRadiographies = false;\n      this.isLoadingRadiographs = false;\n      this.$router.push({ name: \"ViewRadiographs\" });\n    },\n    goToRadiographDetail(index, or, gd) {\n      localStorage.setItem(\"selected_original_img\", or);\n      localStorage.setItem(\"selected_gradcam_img\", gd);\n      const idx = index + 1;\n      this.$router.push({\n        name: \"RadiographyDetail\",\n        query: {\n          patient_id: this.selectedPatientId,\n          index: idx,\n        },\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.welcome {\n  background: #ffffff; /* Sfondo bianco */\n  min-height: 100vh;\n  display: flex;\n  align-items: center; /* Centra verticalmente */\n  justify-content: center; /* Centra orizzontalmente */\n}\n\n.container {\n  max-width: 90%; /* Modifica qui per utilizzare una percentuale */\n  padding: 5%; /* Usa percentuali per il padding */\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 10%; /* Usa percentuali per il margine superiore */\n  height: auto;\n  text-align: center;\n  flex-grow: 1;\n}\n\n.img-preview {\n  max-width: 100%;\n  max-height: 50vh; /* Modifica per utilizzare una percentuale dell'altezza della finestra */\n  margin-top: 15px;\n}\n\n.row {\n  display: flex; /* Usa Flexbox per le card */\n  flex-wrap: wrap; /* Permetti alle card di andare a capo se necessario */\n  margin-bottom: 20px; /* Margine inferiore per la separazione */\n  height: 10%;\n}\n\n.card {\n  flex: 1 1 45%; /* Permetti alle card di occupare il 45% della larghezza */\n  margin: 10px; /* Margine tra le card */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  transition: transform 0.2s ease-in-out;\n}\n\n.card:hover {\n  transform: scale(1.03); /* Leggero ingrandimento quando si passa sopra */\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Aggiunge un'ombra per maggiore enfasi */\n}\n\n/* Stili per la card della predizione */\n.card.prediction-card {\n  margin-top: 20px; /* Margine superiore per separarla dalle altre card */\n}\n\n.card-img-top {\n  border-radius: 0.5rem;\n  max-height: 50vh; /* Limita l'altezza in percentuale */\n  object-fit: cover; /* Mantieni le proporzioni dell'immagine */\n}\n\n.card-body {\n  text-align: center;\n}\n\n.btn-primary {\n  background-color: #007bff;\n  border: none;\n  padding: 8px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 13px; /* Ridimensionato il testo */\n  transition: background-color 0.3s ease;\n  text-align: center;\n  width: 40%;\n  min-width: 150px;\n}\n\n.btn-primary:hover {\n  background-color: #0056b3;\n}\n\n.sidebar {\n  top: 0;\n  width: 250px;\n  height: 100vh;\n  padding: 20px;\n  background: linear-gradient(180deg, #212529, #343a40);\n  margin-right: 20px;\n}\n\n.sidebar .nav-link {\n  color: #cfd2d6;\n}\n\n.sidebar .nav-link:hover {\n  background-color: #495057;\n  border-radius: 5px;\n}\n\n.nav-link {\n  padding: 10px 15px;\n}\n\n@media (max-width: 767.98px) {\n  .navbar-brand {\n    font-size: 1.5rem;\n  }\n\n  .sidebar {\n    display: none;\n  }\n}\n\n.select-container {\n  margin-top: 18px; /* Spazio sopra il menu a tendina */\n  margin-bottom: 10px; /* Spazio sotto il menu a tendina */\n}\n\n.form-select {\n  display: block; /* Assicurati che il selettore occupi l'intera larghezza */\n  width: 100%; /* Fa sÃ¬ che il selettore si espanda */\n  padding: 10px; /* Padding interno per il selettore */\n  border: 1px solid #ced4da; /* Colore del bordo */\n  border-radius: 5px; /* Angoli arrotondati */\n  background-color: #fff; /* Sfondo bianco */\n  transition: border-color 0.2s; /* Transizione per il cambio del colore del bordo */\n}\n\n.form-select:focus {\n  border-color: #007bff; /* Colore del bordo quando in focus */\n  outline: none; /* Rimuove l'outline predefinito */\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); /* Ombra del box quando in focus */\n}\n\n.custom-select {\n  max-width: 80%; /* Imposta la larghezza massima desiderata */\n  margin: 0 auto; /* Centra il menu a tendina */\n}\n\n.card {\n  flex: 0 0 30%; /* Imposta la larghezza al 30% per avere 3 card per riga */\n  margin: 10px; /* Margine tra le card */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.card-img-top {\n  border-radius: 0.5rem;\n  max-height: 50vh; /* Limita l'altezza in percentuale */\n  object-fit: cover; /* Mantieni le proporzioni dell'immagine */\n}\n\n.row {\n  justify-content: flex-start; /* Assicura che le immagini siano allineate a sinistra */\n}\n\n/* Aggiungi il pulsante upload con il nuovo stile */\n.btn-upload {\n  background-color: #007bff;\n  color: white;\n  padding: 8px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 40%;\n  min-width: 150px;\n  font-size: 13px; /* Ridimensionato il testo */\n  transition: background-color 0.3s ease;\n  text-align: center;\n}\n\n.btn-upload:hover {\n  background-color: #0056b3;\n}\n\n/* Stile per il testo ridotto */\n.small-text {\n  font-size: 13px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}