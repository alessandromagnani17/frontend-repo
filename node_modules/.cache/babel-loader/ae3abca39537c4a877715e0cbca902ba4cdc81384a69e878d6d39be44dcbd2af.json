{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"calendar\"\n};\nconst _hoisted_2 = {\n  class: \"calendar-header\"\n};\nconst _hoisted_3 = {\n  class: \"calendar-day-names\"\n};\nconst _hoisted_4 = {\n  class: \"calendar-grid\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"date\"\n};\nconst _hoisted_7 = {\n  class: \"icon-row operations\"\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  class: \"icon-row radiographs\"\n};\nconst _hoisted_10 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: \"month-button\",\n    onClick: _cache[0] || (_cache[0] = $event => $props.changeMonth(-1))\n  }, \"‹\"), _createElementVNode(\"span\", null, _toDisplayString($props.monthNames[$props.month]) + \" \" + _toDisplayString($props.year), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"month-button\",\n    onClick: _cache[1] || (_cache[1] = $event => $props.changeMonth(1))\n  }, \"›\")]), _createCommentVNode(\" Riga per i nomi dei giorni \"), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.dayNames, dayName => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: dayName,\n      class: \"day-name\"\n    }, _toDisplayString(dayName), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.daysInMonth, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: `${day.year}-${day.month}-${day.date}`,\n      class: _normalizeClass(['calendar-day', {\n        disabled: day.isDisabled,\n        today: `${day.year}-${String(day.month).padStart(2, '0')}-${String(day.date).padStart(2, '0')}` === $props.minDate,\n        selected: $options.isSelectedDay(day) // Aggiungi la classe 'selected' per il giorno selezionato\n      }]),\n      onClick: $event => !day.isDisabled && $options.selectDay(day),\n      title: 'Ciao',\n      \"<!--\": \"\",\n      Tooltip: \"\",\n      che: \"\",\n      appare: \"\",\n      quando: \"\",\n      passi: \"\",\n      sopra: \"\",\n      con: \"\",\n      il: \"\",\n      mouse: \"\",\n      \"--\": \"\"\n    }, [_cache[2] || (_cache[2] = _createTextVNode(\" > \")), _createCommentVNode(\" Data \"), _createElementVNode(\"div\", _hoisted_6, _toDisplayString(day.date), 1 /* TEXT */), _createCommentVNode(\" Icone Operazioni \"), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(day.operations.length, n => {\n      return _openBlock(), _createElementBlock(\"img\", {\n        key: 'operation-' + n + '-' + day.date,\n        src: $props.operationIcon,\n        alt: \"Operazione\",\n        class: \"icon\"\n      }, null, 8 /* PROPS */, _hoisted_8);\n    }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(day.radiographs.length, n => {\n      return _openBlock(), _createElementBlock(\"img\", {\n        key: 'radiograph-' + n + '-' + day.date,\n        src: $props.radiographIcon,\n        alt: \"Radiografia\",\n        class: \"icon\"\n      }, null, 8 /* PROPS */, _hoisted_10);\n    }), 128 /* KEYED_FRAGMENT */))])], 10 /* CLASS, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","$event","$props","changeMonth","_toDisplayString","monthNames","month","year","_createCommentVNode","_hoisted_3","_Fragment","_renderList","dayNames","dayName","key","_hoisted_4","daysInMonth","day","date","_normalizeClass","isDisabled","String","padStart","minDate","$options","isSelectedDay","selectDay","title","Tooltip","che","appare","quando","passi","sopra","con","il","mouse","_createTextVNode","_hoisted_6","_hoisted_7","operations","length","n","src","operationIcon","alt","_hoisted_8","_hoisted_9","radiographs","radiographIcon","_hoisted_10","_hoisted_5"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/ScheduleCalendar.vue"],"sourcesContent":["<template>\n  <div class=\"calendar\">\n    <div class=\"calendar-header\">\n      <button class=\"month-button\" @click=\"changeMonth(-1)\">&#8249;</button>\n      <span>{{ monthNames[month] }} {{ year }}</span>\n      <button class=\"month-button\" @click=\"changeMonth(1)\">&#8250;</button>\n    </div>\n\n    <!-- Riga per i nomi dei giorni -->\n    <div class=\"calendar-day-names\">\n      <div v-for=\"dayName in dayNames\" :key=\"dayName\" class=\"day-name\">\n        {{ dayName }}\n      </div>\n    </div>\n\n    <div class=\"calendar-grid\">\n      <div\n        v-for=\"day in daysInMonth\"\n        :key=\"`${day.year}-${day.month}-${day.date}`\"\n        :class=\"[\n          'calendar-day',\n          {\n            disabled: day.isDisabled,\n            today:\n              `${day.year}-${String(day.month).padStart(2, '0')}-${String(\n                day.date\n              ).padStart(2, '0')}` === minDate,\n            selected: isSelectedDay(day), // Aggiungi la classe 'selected' per il giorno selezionato\n          },\n        ]\"\n        @click=\"!day.isDisabled && selectDay(day)\"\n        :title=\"'Ciao'\" <!-- Tooltip che appare quando passi sopra con il mouse -->\n      >\n        <!-- Data -->\n        <div class=\"date\">{{ day.date }}</div>\n\n        <!-- Icone Operazioni -->\n        <div class=\"icon-row operations\">\n          <img\n            v-for=\"n in day.operations.length\"\n            :key=\"'operation-' + n + '-' + day.date\"\n            :src=\"operationIcon\"\n            alt=\"Operazione\"\n            class=\"icon\"\n          />\n        </div>\n\n        <div class=\"icon-row radiographs\">\n          <img\n            v-for=\"n in day.radiographs.length\"\n            :key=\"'radiograph-' + n + '-' + day.date\"\n            :src=\"radiographIcon\"\n            alt=\"Radiografia\"\n            class=\"icon\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  props: {\n    month: Number,\n    year: Number,\n    daysInMonth: Array,\n    monthNames: Array,\n    dayNames: Array,\n    minDate: String,\n    operationIcon: String,\n    radiographIcon: String,\n    showDayDetails: Function,\n    changeMonth: Function,\n    selectedDay: Object,\n  },\n  methods: {\n    selectDay(day) {\n      // Aggiungi una proprietà 'formattedDate' alla data\n      const formattedDate = `${day.year}-${String(day.month).padStart(\n        2,\n        \"0\"\n      )}-${String(day.date).padStart(2, \"0\")}`;\n      this.$emit(\"update-selected-day\", { ...day, formattedDate });\n    },\n    isSelectedDay(day) {\n      // Confronta la data formattata\n      return (\n        this.selectedDay &&\n        this.selectedDay.formattedDate ===\n          `${day.year}-${String(day.month).padStart(2, \"0\")}-${String(\n            day.date\n          ).padStart(2, \"0\")}`\n      );\n    },\n  },\n};\n</script>\n\n<style scoped>\n.schedule-calendar {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.calendar-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 1em;\n  margin-bottom: 10px;\n}\n\n.month-button {\n  background: none; /* Nessun sfondo */\n  border: none; /* Nessun bordo */\n  padding: 5px; /* Spazio interno per clic comodamente */\n  cursor: pointer; /* Cambia il cursore per indicare che è cliccabile */\n  font-size: 1.5em; /* Dimensione del carattere per renderlo visibile */\n  color: #007bff; /* Colore blu per l’icona del pulsante */\n  transition: color 0.3s ease; /* Animazione per un tocco moderno */\n}\n\n.month-button:hover {\n  color: #0056b3; /* Cambia colore al passaggio del mouse */\n}\n\n.month-button:focus {\n  outline: none; /* Rimuove il bordo di focus */\n}\n\n.calendar-grid {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 10px;\n  margin-top: 10px;\n}\n\n.calendar-day {\n  position: relative;\n  padding: 10px;\n  border: 1px solid #ddd;\n  height: 70px;\n  overflow: hidden;\n  cursor: pointer;\n}\n\n.calendar-day.disabled {\n  opacity: 0.5;\n  color: #ccc;\n  pointer-events: none;\n  background-color: #f9f9f9;\n}\n\n/* Giorno di oggi - colore di sfondo rosso chiaro */\n.calendar-day.today {\n  background-color: #f9f4f4; /* Rosso chiaro */\n  border: 2px solid #ffa8a8db; /* Bordo rosso (già presente) */\n  border-radius: 5px;\n}\n\n/* Giorno selezionato - bordo blu (#007bff) */\n.calendar-day.selected {\n  border-radius: 5px;\n  border: 2px solid #7bbbffe7; /* Bordo blu */\n}\n\n/* Modifica la visibilità del bordo di oggi per avere un'idea chiara del giorno corrente */\n.calendar-day.today.selected {\n  background-color: #ffebeb; /* Rosso chiaro */\n  border: 2px solid #7bbbffe7; /* Bordo blu per il giorno selezionato */\n}\n\n.calendar-day-names {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  background-color: #f0f0f0;\n  padding: 10px 0;\n  font-weight: bold;\n  color: #555;\n  text-align: center;\n  border-bottom: 1px solid #ddd;\n}\n\n.day-name {\n  text-transform: uppercase;\n  font-size: 0.9em;\n}\n\n.activity-icons {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n}\n\n.icon-row {\n  display: flex;\n  justify-content: center;\n  gap: 2px;\n}\n\n.operations {\n  min-height: 7px;\n  margin-bottom: 3px;\n}\n\n.icon {\n  width: 7px;\n  height: 7px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}