{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, vShow as _vShow, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nimport _imports_0 from '@/assets/zoom.svg';\nimport _imports_1 from '@/assets/download.svg';\nimport _imports_2 from '@/assets/cross.svg';\nconst _hoisted_1 = {\n  class: \"radiograph-list\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"radiograph-preview\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  class: \"radiograph-controls\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = [\"href\"];\nconst _hoisted_9 = {\n  key: 1\n};\nconst _hoisted_10 = {\n  key: 2,\n  class: \"modal\"\n};\nconst _hoisted_11 = {\n  class: \"modal-content\"\n};\nconst _hoisted_12 = [\"src\"];\nconst _hoisted_13 = {\n  key: 3,\n  class: \"error-alert\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, \"Radiografie di \" + _toDisplayString($props.patientName), 1 /* TEXT */), $data.radiographs.length ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.radiographs, radiograph => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: radiograph.name,\n      class: \"radiograph-item\"\n    }, [_createElementVNode(\"div\", null, [_createTextVNode(_toDisplayString(radiograph.date) + \" - \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.toggleRadiograph(radiograph),\n      class: \"view-link\"\n    }, \" Visualizza \", 8 /* PROPS */, _hoisted_3)]), $data.selectedRadiograph === radiograph ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", {\n      class: _normalizeClass([\"content-with-animation\", {\n        'slide-down': $data.isSlidingDown,\n        'slide-up': $data.isSlidingUp\n      }])\n    }, [_withDirectives(_createElementVNode(\"img\", {\n      src: radiograph.url,\n      alt: \"Radiografia\",\n      class: \"radiograph-image\"\n    }, null, 8 /* PROPS */, _hoisted_5), [[_vShow, $data.isImageVisible]])], 2 /* CLASS */), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n      onClick: $event => $options.enlargeRadiograph(radiograph.url),\n      class: \"control-button\"\n    }, [...(_cache[2] || (_cache[2] = [_createElementVNode(\"img\", {\n      src: _imports_0,\n      alt: \"Zoom\",\n      class: \"icon\"\n    }, null, -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_7), _createElementVNode(\"a\", {\n      href: `/api/download-radiograph?url=${encodeURIComponent(radiograph.url)}&filename=radiografia_${radiograph.date}.png`,\n      class: \"control-button\",\n      download: \"\"\n    }, [...(_cache[3] || (_cache[3] = [_createElementVNode(\"img\", {\n      src: _imports_1,\n      alt: \"Download\",\n      class: \"icon\"\n    }, null, -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_8)])])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_9, \"Nessuna radiografia trovata per questo paziente.\")), $data.isModalOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"span\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closeModal && $options.closeModal(...args)),\n    class: \"close-button\"\n  }, _cache[4] || (_cache[4] = [_createElementVNode(\"img\", {\n    src: _imports_2,\n    alt: \"Chiudi\",\n    class: \"close-icon\"\n  }, null, -1 /* HOISTED */)])), _createElementVNode(\"img\", {\n    src: $data.modalImageUrl,\n    alt: \"Immagine ingrandita\",\n    class: \"modal-image\"\n  }, null, 8 /* PROPS */, _hoisted_12)])])) : _createCommentVNode(\"v-if\", true), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createTextVNode(_toDisplayString($data.errorMessage) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $data.errorMessage = ''),\n    class: \"close-error\"\n  }, \"×\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$props","patientName","$data","radiographs","length","_hoisted_2","_Fragment","_renderList","radiograph","name","_createTextVNode","date","onClick","$event","$options","toggleRadiograph","_hoisted_3","selectedRadiograph","_hoisted_4","_normalizeClass","isSlidingDown","isSlidingUp","src","url","alt","_hoisted_5","isImageVisible","_hoisted_6","enlargeRadiograph","_hoisted_7","href","encodeURIComponent","download","_hoisted_8","_createCommentVNode","_hoisted_9","isModalOpen","_hoisted_10","_hoisted_11","_cache","args","closeModal","modalImageUrl","_hoisted_12","errorMessage","_hoisted_13"],"sources":["C:\\Users\\Utente\\Desktop\\DIO\\osteoarthritis-project\\frontend\\src\\components\\PatientRadiographs.vue"],"sourcesContent":["<template>\r\n  <div class=\"radiograph-list\">\r\n    <h2>Radiografie di {{ patientName }}</h2>\r\n    <ul v-if=\"radiographs.length\">\r\n      <li\r\n        v-for=\"radiograph in radiographs\"\r\n        :key=\"radiograph.name\"\r\n        class=\"radiograph-item\"\r\n      >\r\n        <div>\r\n          {{ radiograph.date }} -\r\n          <button @click=\"toggleRadiograph(radiograph)\" class=\"view-link\">\r\n            Visualizza\r\n          </button>\r\n        </div>\r\n\r\n        <div\r\n          v-if=\"selectedRadiograph === radiograph\"\r\n          class=\"radiograph-preview\"\r\n        >\r\n          <div\r\n            class=\"content-with-animation\"\r\n            :class=\"{ 'slide-down': isSlidingDown, 'slide-up': isSlidingUp }\"\r\n          >\r\n            <img\r\n              :src=\"radiograph.url\"\r\n              alt=\"Radiografia\"\r\n              class=\"radiograph-image\"\r\n              v-show=\"isImageVisible\"\r\n            />\r\n          </div>\r\n          <div class=\"radiograph-controls\">\r\n            <button\r\n              @click=\"enlargeRadiograph(radiograph.url)\"\r\n              class=\"control-button\"\r\n            >\r\n              <img src=\"@/assets/zoom.svg\" alt=\"Zoom\" class=\"icon\" />\r\n            </button>\r\n            <a\r\n              :href=\"`/api/download-radiograph?url=${encodeURIComponent(\r\n                radiograph.url\r\n              )}&filename=radiografia_${radiograph.date}.png`\"\r\n              class=\"control-button\"\r\n              download\r\n            >\r\n              <img src=\"@/assets/download.svg\" alt=\"Download\" class=\"icon\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <p v-else>Nessuna radiografia trovata per questo paziente.</p>\r\n\r\n    <div v-if=\"isModalOpen\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <span @click=\"closeModal\" class=\"close-button\">\r\n          <img src=\"@/assets/cross.svg\" alt=\"Chiudi\" class=\"close-icon\" />\r\n        </span>\r\n        <img\r\n          :src=\"modalImageUrl\"\r\n          alt=\"Immagine ingrandita\"\r\n          class=\"modal-image\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"errorMessage\" class=\"error-alert\">\r\n      {{ errorMessage }}\r\n      <button @click=\"errorMessage = ''\" class=\"close-error\">×</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"PatientRadiographs\",\r\n  props: {\r\n    patientId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    patientName: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      radiographs: [],\r\n      selectedRadiograph: null,\r\n      isModalOpen: false,\r\n      modalImageUrl: \"\",\r\n      isImageVisible: false,\r\n      isSlidingDown: false,\r\n      isSlidingUp: false,\r\n      errorMessage: \"\",\r\n      currentPatientId: this.patientId, // Variabile locale per gestire il patientId\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.loadRadiographs(); // Carica le radiografie iniziali, se necessario\r\n  },\r\n\r\n  watch: {\r\n    patientId(newPatientId) {\r\n      this.currentPatientId = newPatientId; // Aggiorna la variabile locale quando cambia la prop\r\n      this.loadRadiographs(); // Ricarica le radiografie quando la prop cambia\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    async loadRadiographs() {\r\n      try {\r\n        console.log(\"Props patientId:\", this.patientId);\r\n        console.log(\"Props patientName:\", this.patientName);\r\n\r\n        const response = await fetch(\r\n          `/api/patients/${this.currentPatientId}/radiographs`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        if (response.ok) {\r\n          this.radiographs = await response.json();\r\n        } else {\r\n          this.errorMessage = \"Errore nel recupero delle radiografie.\";\r\n        }\r\n      } catch (error) {\r\n        this.errorMessage = \"Errore di connessione al server.\";\r\n        console.error(\"Errore:\", error);\r\n      }\r\n    },\r\n\r\n    // Rimuovi la logica che cerca di modificare il patientId\r\n    async selectPatient(patient) {\r\n      this.selectedPatient = patient;\r\n      this.currentPatientId = patient.userId; // Aggiorna la variabile locale\r\n      this.radiographs = []; // Svuota le radiografie precedenti\r\n      await this.loadRadiographs(); // Carica le radiografie del nuovo paziente\r\n    },\r\n\r\n    toggleRadiograph(radiograph) {\r\n      if (this.selectedRadiograph === radiograph) {\r\n        this.isSlidingDown = false;\r\n        this.isSlidingUp = true;\r\n        setTimeout(() => {\r\n          this.isImageVisible = false;\r\n          this.selectedRadiograph = null;\r\n          this.isSlidingUp = false;\r\n        }, 300);\r\n      } else {\r\n        this.selectedRadiograph = radiograph;\r\n        this.isSlidingUp = false;\r\n        this.isSlidingDown = true;\r\n        this.isImageVisible = true;\r\n      }\r\n    },\r\n\r\n    enlargeRadiograph(url) {\r\n      this.modalImageUrl = url;\r\n      this.isModalOpen = true;\r\n    },\r\n\r\n    closeModal() {\r\n      this.isModalOpen = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.error-alert {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background-color: #f44336;\r\n  color: white;\r\n  padding: 16px;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  z-index: 1000;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n  font-size: 14px;\r\n}\r\n\r\n.close-error {\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  padding: 0 4px;\r\n}\r\n\r\n.control-button:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.radiograph-list {\r\n  max-width: 800px;\r\n  margin: 20px auto;\r\n}\r\n\r\nh2 {\r\n  font-size: 18px;\r\n  color: #333;\r\n  margin-bottom: 15px;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli.radiograph-item {\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid #ccc;\r\n  font-size: 12px;\r\n  color: #444;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.view-link {\r\n  color: #007bff;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: color 0.5s ease;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.view-link:hover {\r\n  color: #0056b3;\r\n}\r\n\r\n.radiograph-preview {\r\n  margin-top: 15px;\r\n  width: 95%;\r\n  align-self: center;\r\n}\r\n\r\n.radiograph-image {\r\n  width: 100%;\r\n  display: block;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.content-with-animation {\r\n  overflow: hidden;\r\n  max-height: 0;\r\n  transition: max-height 0.5s ease-out, transform 0.5s ease-out;\r\n  transform: translateY(-20px);\r\n}\r\n\r\n.content-with-animation.slide-down {\r\n  max-height: 550px;\r\n  transform: translateY(0);\r\n}\r\n\r\n.content-with-animation.slide-up {\r\n  max-height: 0;\r\n  transform: translateY(-20px);\r\n}\r\n\r\n.radiograph-controls {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.control-button {\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-left: 10px;\r\n}\r\n\r\n.icon {\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n  max-width: 80%;\r\n  max-height: 80%;\r\n  background: white;\r\n  border-radius: 6px;\r\n  padding: 20px;\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.modal-image {\r\n  width: 92%;\r\n  max-height: 80vh;\r\n  display: block;\r\n  margin: 0 auto;\r\n}\r\n\r\n.close-button {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.close-icon {\r\n  width: 12px;\r\n  height: 12px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}