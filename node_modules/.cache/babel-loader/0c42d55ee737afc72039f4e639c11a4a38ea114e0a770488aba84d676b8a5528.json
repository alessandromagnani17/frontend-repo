{"ast":null,"code":"export default {\n  name: \"ProfilePage\",\n  data() {\n    return {\n      userData: {}\n    };\n  },\n  mounted() {\n    this.loadUserData();\n  },\n  methods: {\n    loadUserData() {\n      const userId = this.userData.userId; // Assicurati di avere l'ID utente\n      fetch(`http://localhost:5000/get_user/${userId}`) // Modifica per utilizzare una rotta per recuperare i dati utente\n      .then(response => {\n        if (!response.ok) throw new Error(\"Errore nel recupero dei dati utente\");\n        return response.json();\n      }).then(data => {\n        this.userData = data; // Aggiorna i dati dell'utente nella tua vista\n      }).catch(error => {\n        console.error(\"Errore:\", error);\n        alert(\"Si è verificato un errore durante il caricamento dei dati utente.\");\n      });\n    },\n    editField(field) {\n      const newValue = prompt(`Inserisci il nuovo valore per ${field}:`, this.userData[field]);\n      if (newValue) {\n        this.userData[field] = newValue; // Aggiorna localmente\n        this.updateUserDataInFirebase(field, newValue);\n      }\n    },\n    updateUserDataInFirebase(field, value) {\n      const userId = this.userData.userId; // Assicurati che tu abbia l'ID utente\n      fetch(\"http://localhost:5000/update_user\", {\n        // Aggiorna l'URL della tua rotta\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId,\n          [field]: value\n        }) // Includi l'ID utente e il campo da aggiornare\n      }).then(response => {\n        if (!response.ok) throw new Error(\"Errore nel salvataggio dei dati\");\n        alert(\"Informazione aggiornata con successo!\");\n        this.loadUserData(); // Ricarica i dati utente per visualizzare l'aggiornamento\n      }).catch(error => {\n        console.error(\"Errore:\", error);\n        alert(\"Si è verificato un errore durante l'aggiornamento.\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","userData","mounted","loadUserData","methods","userId","fetch","then","response","ok","Error","json","catch","error","console","alert","editField","field","newValue","prompt","updateUserDataInFirebase","value","method","headers","body","JSON","stringify"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/views/ProfilePage.vue"],"sourcesContent":["<template>\n  <div class=\"profile\">\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4\">Benvenuto nel tuo Profilo!</h2>\n      <div class=\"user-info\">\n        <div class=\"user-item\">\n          <p><strong>Nome:</strong> {{ userData.name }}</p>\n          <button class=\"btn btn-primary\" @click=\"editField('name')\">\n            Modifica\n          </button>\n        </div>\n        <div class=\"user-item\">\n          <p><strong>Cognome:</strong> {{ userData.family_name }}</p>\n          <button class=\"btn btn-primary\" @click=\"editField('family_name')\">\n            Modifica\n          </button>\n        </div>\n        <div class=\"user-item\">\n          <p><strong>Username:</strong> {{ userData.username }}</p>\n          <button class=\"btn btn-primary\" @click=\"editField('username')\">\n            Modifica\n          </button>\n        </div>\n        <div class=\"user-item\">\n          <p><strong>Email:</strong> {{ userData.email }}</p>\n          <button class=\"btn btn-primary\" @click=\"editField('email')\">\n            Modifica\n          </button>\n        </div>\n        <div class=\"user-item\">\n          <p><strong>Data di Nascita:</strong> {{ userData.birthdate }}</p>\n          <button class=\"btn btn-primary\" @click=\"editField('birthdate')\">\n            Modifica\n          </button>\n        </div>\n        <div class=\"user-item\">\n          <p><strong>Telefono:</strong> {{ userData.phone_number }}</p>\n          <button class=\"btn btn-primary\" @click=\"editField('phone_number')\">\n            Modifica\n          </button>\n        </div>\n        <div class=\"user-item\">\n          <p><strong>Indirizzo:</strong> {{ userData.address }}</p>\n          <button class=\"btn btn-primary\" @click=\"editField('address')\">\n            Modifica\n          </button>\n        </div>\n        <div class=\"user-item\">\n          <p><strong>CAP:</strong> {{ userData.cap_code }}</p>\n          <button class=\"btn btn-primary\" @click=\"editField('cap_code')\">\n            Modifica\n          </button>\n        </div>\n        <div class=\"user-item\">\n          <p><strong>Genere:</strong> {{ userData.gender }}</p>\n          <button class=\"btn btn-primary\" @click=\"editField('gender')\">\n            Modifica\n          </button>\n        </div>\n        <div class=\"user-item\">\n          <p><strong>Codice Fiscale:</strong> {{ userData.tax_code }}</p>\n          <button class=\"btn btn-primary\" @click=\"editField('tax_code')\">\n            Modifica\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ProfilePage\",\n  data() {\n    return {\n      userData: {},\n    };\n  },\n  mounted() {\n    this.loadUserData();\n  },\n  methods: {\n    loadUserData() {\n      const userId = this.userData.userId; // Assicurati di avere l'ID utente\n      fetch(`http://localhost:5000/get_user/${userId}`) // Modifica per utilizzare una rotta per recuperare i dati utente\n        .then((response) => {\n          if (!response.ok)\n            throw new Error(\"Errore nel recupero dei dati utente\");\n          return response.json();\n        })\n        .then((data) => {\n          this.userData = data; // Aggiorna i dati dell'utente nella tua vista\n        })\n        .catch((error) => {\n          console.error(\"Errore:\", error);\n          alert(\n            \"Si è verificato un errore durante il caricamento dei dati utente.\"\n          );\n        });\n    },\n    editField(field) {\n      const newValue = prompt(\n        `Inserisci il nuovo valore per ${field}:`,\n        this.userData[field]\n      );\n      if (newValue) {\n        this.userData[field] = newValue; // Aggiorna localmente\n        this.updateUserDataInFirebase(field, newValue);\n      }\n    },\n    updateUserDataInFirebase(field, value) {\n      const userId = this.userData.userId; // Assicurati che tu abbia l'ID utente\n      fetch(\"http://localhost:5000/update_user\", {\n        // Aggiorna l'URL della tua rotta\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ userId, [field]: value }), // Includi l'ID utente e il campo da aggiornare\n      })\n        .then((response) => {\n          if (!response.ok) throw new Error(\"Errore nel salvataggio dei dati\");\n\n          alert(\"Informazione aggiornata con successo!\");\n          this.loadUserData(); // Ricarica i dati utente per visualizzare l'aggiornamento\n        })\n        .catch((error) => {\n          console.error(\"Errore:\", error);\n          alert(\"Si è verificato un errore durante l'aggiornamento.\");\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  max-width: 600px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1); /* Ombra leggera */\n  margin-top: 100px;\n  height: auto;\n  text-align: left; /* Allinea il testo a sinistra */\n}\n\nh2 {\n  font-size: 20px;\n  margin-bottom: 20px;\n}\n\n.user-info {\n  font-size: 14px;\n  line-height: 1.5;\n}\n\n.user-item {\n  display: flex;\n  align-items: center; /* Allinea il testo e il pulsante */\n  justify-content: space-between; /* Spazio tra il testo e il pulsante */\n  margin-bottom: 15px; /* Spaziatura tra le righe */\n}\n\n.btn-primary {\n  background-color: #007bff; /* Colore blu */\n  border: none; /* Rimuove il bordo */\n  color: white; /* Testo bianco */\n  padding: 8px 12px; /* Padding per il pulsante */\n  border-radius: 5px; /* Angoli arrotondati */\n  cursor: pointer; /* Cambia il cursore */\n}\n\n.btn-primary:hover {\n  background-color: #0056b3; /* Colore blu scuro al passaggio del mouse */\n}\n</style>\n"],"mappings":"AAuEA,eAAe;EACbA,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CAAC;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAAC,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACPD,YAAYA,CAAA,EAAG;MACb,MAAME,MAAK,GAAI,IAAI,CAACJ,QAAQ,CAACI,MAAM,EAAE;MACrCC,KAAK,CAAC,kCAAkCD,MAAM,EAAE,EAAE;MAAA,CAC/CE,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EACd,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;QACxD,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACxB,CAAC,EACAJ,IAAI,CAAEP,IAAI,IAAK;QACd,IAAI,CAACC,QAAO,GAAID,IAAI,EAAE;MACxB,CAAC,EACAY,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BE,KAAK,CACH,mEACF,CAAC;MACH,CAAC,CAAC;IACN,CAAC;IACDC,SAASA,CAACC,KAAK,EAAE;MACf,MAAMC,QAAO,GAAIC,MAAM,CACrB,iCAAiCF,KAAK,GAAG,EACzC,IAAI,CAAChB,QAAQ,CAACgB,KAAK,CACrB,CAAC;MACD,IAAIC,QAAQ,EAAE;QACZ,IAAI,CAACjB,QAAQ,CAACgB,KAAK,IAAIC,QAAQ,EAAE;QACjC,IAAI,CAACE,wBAAwB,CAACH,KAAK,EAAEC,QAAQ,CAAC;MAChD;IACF,CAAC;IACDE,wBAAwBA,CAACH,KAAK,EAAEI,KAAK,EAAE;MACrC,MAAMhB,MAAK,GAAI,IAAI,CAACJ,QAAQ,CAACI,MAAM,EAAE;MACrCC,KAAK,CAAC,mCAAmC,EAAE;QACzC;QACAgB,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAErB,MAAM;UAAE,CAACY,KAAK,GAAGI;QAAM,CAAC,CAAC,CAAE;MACpD,CAAC,EACEd,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;QAEpEK,KAAK,CAAC,uCAAuC,CAAC;QAC9C,IAAI,CAACZ,YAAY,CAAC,CAAC,EAAE;MACvB,CAAC,EACAS,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BE,KAAK,CAAC,oDAAoD,CAAC;MAC7D,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}