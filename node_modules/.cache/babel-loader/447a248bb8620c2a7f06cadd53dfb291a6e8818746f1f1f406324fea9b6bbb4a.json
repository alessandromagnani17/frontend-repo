{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"reset-password\"\n};\nconst _hoisted_2 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"btn-group mt-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", {\n    class: \"mb-4\"\n  }, \"Reimposta la tua password\", -1 /* HOISTED */)), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Campo per inserire la nuova password \"), _createElementVNode(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"new-password\"\n  }, \"Inserisci la nuova password:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"new-password\",\n    class: \"form-control mt-3\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPassword = $event),\n    placeholder: \"Nuova password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPassword]]), _createElementVNode(\"button\", {\n    class: \"btn btn-primary mt-4\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.updatePassword && $options.updatePassword(...args))\n  }, \" Aggiorna Password \")]), _createCommentVNode(\" Bottone per il login se non ci sono errori \"), !$data.isLoading && !$data.errorMessage && !_ctx.isPasswordFieldVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary btn-next\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.goToLogin && $options.goToLogin(...args))\n  }, \" Esegui il login \")])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$data","errorMessage","_hoisted_3","_toDisplayString","_createCommentVNode","for","type","id","_cache","$event","newPassword","placeholder","onClick","args","$options","updatePassword","isLoading","_ctx","isPasswordFieldVisible","_hoisted_4","goToLogin"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\ResetPassword.vue"],"sourcesContent":["<template>\n  <div class=\"reset-password\">\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4\">Reimposta la tua password</h2>\n      <p v-if=\"errorMessage\">{{ errorMessage }}</p>\n\n      <!-- Campo per inserire la nuova password -->\n      <div>\n        <label for=\"new-password\">Inserisci la nuova password:</label>\n        <input\n          type=\"password\"\n          id=\"new-password\"\n          class=\"form-control mt-3\"\n          v-model=\"newPassword\"\n          placeholder=\"Nuova password\"\n        />\n        <button\n          class=\"btn btn-primary mt-4\"\n          @click=\"updatePassword\">\n          Aggiorna Password\n        </button>\n      </div>\n\n      <!-- Bottone per il login se non ci sono errori -->\n      <div\n        class=\"btn-group mt-4\"\n        v-if=\"!isLoading && !errorMessage && !isPasswordFieldVisible\"\n      >\n        <button class=\"btn btn-primary btn-next\" @click=\"goToLogin\">\n          Esegui il login\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { resetPassword } from \"@/services/api-service\";\n\nexport default {\n  name: \"ResetPassword\",\n  data() {\n    return {\n      verificationMessage: \"Verificando la tua email...\",\n      errorMessage: null,\n      isLoading: true,\n      newPassword: \"\", // Valore della nuova password\n    };\n  },\n  async mounted() {},\n  methods: {\n    async updatePassword() {\n      if (!this.newPassword) {\n        this.errorMessage = \"La password non puÃ² essere vuota.\";\n        return;\n      }\n\n      console.log(\"Nuova psw: \" + this.newPassword);\n\n      try {\n        const response = await resetPassword(\n          this.$route.params.uid,\n          this.newPassword\n        );\n\n        console.log(\"Risposta server --> \" + response.data.message);\n      } catch (error) {\n        this.errorMessage =\n          error.response?.data?.error ||\n          \"Errore durante la verifica dell'email.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    goToLogin() {\n      this.$router.push(\"/login\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n.reset-password {\n  background: #ffffff; /* Sfondo bianco, simile alla pagina di login */\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0); /* Rimuove ombre esterne */\n}\n\n.container {\n  max-width: 80%;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1); /* Simile alla shadow del login */\n  margin-top: 100px;\n  height: auto;\n  text-align: center; /* Centra il testo */\n  flex-grow: 1; /* Permette al contenuto principale di occupare lo spazio rimanente */\n  margin-left: 20px; /* Margine sinistro per distanziare il contenuto dalla sidebar */\n}\n\nh2 {\n  font-size: 18px; /* Uniforma il font size al login */\n  margin-bottom: 30px;\n}\n\np {\n  font-size: 14px;\n  color: #6c757d;\n}\n\n.btn-group .btn {\n  width: 100%; /* Assicura che i bottoni occupino l'intera larghezza */\n  margin-top: 20px;\n  padding: 10px;\n}\n\n.btn-primary {\n  background-color: #007bff;\n  color: white;\n  padding: 8px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 80%;\n  max-width: 300px;\n  min-width: 200px;\n  font-size: 13px;\n  transition: background-color 0.3s ease;\n  text-align: center;\n  display: inline-block;\n}\n\n.btn-primary:hover {\n  background-color: #0056b3;\n}\n\n.sidebar {\n  top: 0;\n  width: 250px; /* Imposta la larghezza della sidebar */\n  height: 100vh; /* Imposta l'altezza della sidebar al 100% della viewport */\n  padding: 20px; /* Padding interno */\n  background: linear-gradient(180deg, #212529, #343a40);\n}\n\n.sidebar .nav-link {\n  color: #cfd2d6;\n}\n\n.sidebar .nav-link:hover {\n  background-color: #495057;\n  border-radius: 5px;\n}\n\n.nav-link {\n  padding: 10px 15px; /* Aggiunge padding ai link per migliorarne l'aspetto */\n}\n\n@media (max-width: 767.98px) {\n  .navbar-brand {\n    font-size: 1.5rem;\n  }\n\n  .sidebar {\n    display: none;\n  }\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAgB;;EAF/BC,GAAA;AAAA;;EAAAA,GAAA;EAyBQD,KAAK,EAAC;;;uBAxBZE,mBAAA,CAgCM,OAhCNC,UAgCM,GA/BJC,mBAAA,CA8BM,OA9BNC,UA8BM,G,0BA7BJD,mBAAA,CAA+C;IAA3CJ,KAAK,EAAC;EAAM,GAAC,2BAAyB,sBACjCM,KAAA,CAAAC,YAAY,I,cAArBL,mBAAA,CAA6C,KAJnDM,UAAA,EAAAC,gBAAA,CAIgCH,KAAA,CAAAC,YAAY,oBAJ5CG,mBAAA,gBAMMA,mBAAA,0CAA6C,EAC7CN,mBAAA,CAcM,c,0BAbJA,mBAAA,CAA8D;IAAvDO,GAAG,EAAC;EAAc,GAAC,8BAA4B,sB,gBACtDP,mBAAA,CAME;IALAQ,IAAI,EAAC,UAAU;IACfC,EAAE,EAAC,cAAc;IACjBb,KAAK,EAAC,mBAAmB;IAZnC,uBAAAc,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAamBT,KAAA,CAAAU,WAAW,GAAAD,MAAA;IACpBE,WAAW,EAAC;iDADHX,KAAA,CAAAU,WAAW,E,GAGtBZ,mBAAA,CAIS;IAHPJ,KAAK,EAAC,sBAAsB;IAC3BkB,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAE,qBAE1B,E,GAGFT,mBAAA,gDAAmD,E,CAG1CJ,KAAA,CAAAgB,SAAS,KAAKhB,KAAA,CAAAC,YAAY,KAAKgB,IAAA,CAAAC,sBAAsB,I,cAF9DtB,mBAAA,CAOM,OAPNuB,UAOM,GAHJrB,mBAAA,CAES;IAFDJ,KAAK,EAAC,0BAA0B;IAAEkB,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAM,SAAA,IAAAN,QAAA,CAAAM,SAAA,IAAAP,IAAA,CAAS;KAAE,mBAE5D,E,KA9BRT,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}