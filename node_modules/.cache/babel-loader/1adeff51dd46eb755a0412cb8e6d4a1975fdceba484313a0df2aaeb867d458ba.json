{"ast":null,"code":"import PatientList from \"./PatientList.vue\";\nimport PatientRadiographs from \"./PatientRadiographs.vue\";\nimport UploadRadiograph from \"./UploadRadiographs.vue\";\nimport { ref, onMounted } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useStore } from \"vuex\"; // Importa useStore\nimport { getPatients, getRadiographs } from \"../services/api-service\"; // Assicurati che il percorso sia corretto\n\nexport default {\n  components: {\n    PatientList,\n    PatientRadiographs,\n    UploadRadiograph\n  },\n  setup() {\n    const route = useRoute();\n    const store = useStore(); // Crea un'istanza dello store\n    const patients = ref([]);\n    const selectedPatient = ref(null);\n    const selectedPatientRadiographs = ref([]);\n\n    // Ottieni l'ID del dottore loggato\n    const doctorId = store.state.user.id;\n    onMounted(async () => {\n      // Ottieni i pazienti associati\n      patients.value = await getPatientsByDoctor(doctorId);\n    });\n\n    // Seleziona un paziente e ottieni le sue radiografie\n    const selectPatient = async patient => {\n      selectedPatient.value = patient;\n      selectedPatientRadiographs.value = await getRadiographs(patient.id);\n    };\n    const handleUploadSuccess = () => {\n      selectPatient(selectedPatient.value); // Ricarica le radiografie\n    };\n    return {\n      patients,\n      selectPatient,\n      handleUploadSuccess,\n      selectedPatient,\n      selectedPatientRadiographs\n    };\n  }\n};","map":{"version":3,"names":["PatientList","PatientRadiographs","UploadRadiograph","ref","onMounted","useRoute","useStore","getPatients","getRadiographs","components","setup","route","store","patients","selectedPatient","selectedPatientRadiographs","doctorId","state","user","id","value","getPatientsByDoctor","selectPatient","patient","handleUploadSuccess"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/DoctorDashboard.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Dashboard Dottore</h1>\n      <PatientList :patients=\"patients\" @selectPatient=\"selectPatient\" />\n      <UploadRadiograph\n        v-if=\"selectedPatient\"\n        @uploadSuccess=\"handleUploadSuccess\"\n        :patientId=\"selectedPatient.id\"\n      />\n      <PatientRadiographs\n        :radiographs=\"selectedPatientRadiographs\"\n        v-if=\"selectedPatient\"\n      />\n    </div>\n  </template>\n  \n  <script>\n  import PatientList from \"./PatientList.vue\";\n  import PatientRadiographs from \"./PatientRadiographs.vue\";\n  import UploadRadiograph from \"./UploadRadiographs.vue\";\n  import { ref, onMounted } from \"vue\";\n  import { useRoute } from \"vue-router\";\n  import { useStore } from \"vuex\"; // Importa useStore\n  import { getPatients, getRadiographs } from \"../services/api-service\"; // Assicurati che il percorso sia corretto\n  \n  export default {\n    components: {\n      PatientList,\n      PatientRadiographs,\n      UploadRadiograph,\n    },\n    setup() {\n      const route = useRoute();\n      const store = useStore(); // Crea un'istanza dello store\n      const patients = ref([]);\n      const selectedPatient = ref(null);\n      const selectedPatientRadiographs = ref([]);\n  \n      // Ottieni l'ID del dottore loggato\n      const doctorId = store.state.user.id;\n  \n      onMounted(async () => {\n        // Ottieni i pazienti associati\n        patients.value = await getPatientsByDoctor(doctorId);\n      });\n  \n      // Seleziona un paziente e ottieni le sue radiografie\n      const selectPatient = async (patient) => {\n        selectedPatient.value = patient;\n        selectedPatientRadiographs.value = await getRadiographs(patient.id);\n      };\n  \n      const handleUploadSuccess = () => {\n        selectPatient(selectedPatient.value); // Ricarica le radiografie\n      };\n  \n      return {\n        patients,\n        selectPatient,\n        handleUploadSuccess,\n        selectedPatient,\n        selectedPatientRadiographs,\n      };\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* Puoi aggiungere qui il tuo stile personalizzato per la dashboard */\n  </style>\n  "],"mappings":"AAiBE,OAAOA,WAAU,MAAO,mBAAmB;AAC3C,OAAOC,kBAAiB,MAAO,0BAA0B;AACzD,OAAOC,gBAAe,MAAO,yBAAyB;AACtD,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,QAAO,QAAS,YAAY;AACrC,SAASC,QAAO,QAAS,MAAM,EAAE;AACjC,SAASC,WAAW,EAAEC,cAAa,QAAS,yBAAyB,EAAE;;AAEvE,eAAe;EACbC,UAAU,EAAE;IACVT,WAAW;IACXC,kBAAkB;IAClBC;EACF,CAAC;EACDQ,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIN,QAAQ,CAAC,CAAC;IACxB,MAAMO,KAAI,GAAIN,QAAQ,CAAC,CAAC,EAAE;IAC1B,MAAMO,QAAO,GAAIV,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMW,eAAc,GAAIX,GAAG,CAAC,IAAI,CAAC;IACjC,MAAMY,0BAAyB,GAAIZ,GAAG,CAAC,EAAE,CAAC;;IAE1C;IACA,MAAMa,QAAO,GAAIJ,KAAK,CAACK,KAAK,CAACC,IAAI,CAACC,EAAE;IAEpCf,SAAS,CAAC,YAAY;MACpB;MACAS,QAAQ,CAACO,KAAI,GAAI,MAAMC,mBAAmB,CAACL,QAAQ,CAAC;IACtD,CAAC,CAAC;;IAEF;IACA,MAAMM,aAAY,GAAI,MAAOC,OAAO,IAAK;MACvCT,eAAe,CAACM,KAAI,GAAIG,OAAO;MAC/BR,0BAA0B,CAACK,KAAI,GAAI,MAAMZ,cAAc,CAACe,OAAO,CAACJ,EAAE,CAAC;IACrE,CAAC;IAED,MAAMK,mBAAkB,GAAIA,CAAA,KAAM;MAChCF,aAAa,CAACR,eAAe,CAACM,KAAK,CAAC,EAAE;IACxC,CAAC;IAED,OAAO;MACLP,QAAQ;MACRS,aAAa;MACbE,mBAAmB;MACnBV,eAAe;MACfC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}