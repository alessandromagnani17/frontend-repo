{"ast":null,"code":"export default {\n  props: {\n    selectedDay: Object,\n    monthNames: Array,\n    month: Number,\n    year: Number,\n    formatDate: Function,\n    formatTime: Function,\n    enlargeRadiograph: Function\n  },\n  data() {\n    return {\n      selectedRadiograph: null,\n      isSlidingDown: false,\n      isSlidingUp: false,\n      isImageVisible: false\n    };\n  },\n  methods: {\n    toggleRadiograph(radiograph) {\n      if (this.selectedRadiograph === radiograph) {\n        this.isSlidingUp = true;\n        this.isSlidingDown = false;\n        setTimeout(() => {\n          this.selectedRadiograph = null;\n          this.isImageVisible = false;\n        }, 500); // Il tempo di transizione deve corrispondere a quello del CSS\n      } else {\n        this.selectedRadiograph = radiograph;\n        this.isSlidingDown = true;\n        this.isSlidingUp = false;\n        this.isImageVisible = true;\n      }\n    },\n    beforeEnter(el) {\n      el.style.opacity = 0;\n    },\n    enter(el, done) {\n      el.offsetHeight; // Trigger reflow\n      el.style.transition = \"opacity 0.5s ease\";\n      el.style.opacity = 1;\n      done();\n    },\n    leave(el, done) {\n      el.style.transition = \"opacity 0.5s ease\";\n      el.style.opacity = 0;\n      done();\n    }\n  }\n};","map":{"version":3,"names":["props","selectedDay","Object","monthNames","Array","month","Number","year","formatDate","Function","formatTime","enlargeRadiograph","data","selectedRadiograph","isSlidingDown","isSlidingUp","isImageVisible","methods","toggleRadiograph","radiograph","setTimeout","beforeEnter","el","style","opacity","enter","done","offsetHeight","transition","leave"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/DayDetails.vue"],"sourcesContent":["<template>\n  <transition\n    name=\"fade\"\n    @before-enter=\"beforeEnter\"\n    @enter=\"enter\"\n    @leave=\"leave\"\n  >\n    <div v-if=\"selectedDay\" class=\"day-details\">\n      <h2>\n        Dettagli del Giorno: {{ selectedDay.date }} {{ monthNames[month] }}\n        {{ year }}\n      </h2>\n\n      <!-- Mostra operazioni pianificate se presenti -->\n      <div v-if=\"selectedDay.operations.length > 0\">\n        <h3 class=\"small-text\">Operazioni pianificate:</h3>\n        <ul>\n          <li v-for=\"operation in selectedDay.operations\" :key=\"operation.id\">\n            <strong>{{ operation.type }}</strong\n            ><br />\n            <span>Data: {{ formatDate(operation.operationDate) }}</span\n            ><br />\n            <span>Ora: {{ formatTime(operation.operationDate) }}</span\n            ><br />\n            <span>Descrizione: {{ operation.description }}</span\n            ><br />\n          </li>\n        </ul>\n      </div>\n\n      <div v-if=\"selectedDay.radiographs.length > 0\">\n        <h3 class=\"small-text\">Radiografie caricate:</h3>\n        <ul class=\"radiograph-list\">\n            <li\n            v-for=\"radiograph in selectedDay.radiographs\"\n            :key=\"radiograph.name\"\n            class=\"radiograph-item\"\n            >\n            <div>\n                {{ radiograph.date }} -\n                <button @click=\"toggleRadiograph(radiograph)\" class=\"view-link\">\n                Visualizza\n                </button>\n            </div>\n\n            <div\n                v-if=\"selectedRadiograph === radiograph\"\n                class=\"radiograph-preview\"\n            >\n                <div\n                class=\"content-with-animation\"\n                :class=\"{ 'slide-down': isSlidingDown, 'slide-up': isSlidingUp }\"\n                >\n                <img\n                    :src=\"radiograph.url\"\n                    alt=\"Radiografia\"\n                    class=\"radiograph-image\"\n                    v-show=\"isImageVisible\"\n                />\n                </div>\n                <div class=\"radiograph-controls\">\n                <button\n                    @click=\"enlargeRadiograph(radiograph.url)\"\n                    class=\"control-button\"\n                >\n                    <img src=\"@/assets/zoom.svg\" alt=\"Zoom\" class=\"icon\" />\n                </button>\n                <a\n                    :href=\"`/api/download-radiograph?url=${encodeURIComponent(\n                    radiograph.url\n                    )}&filename=radiografia_${radiograph.date}.png`\"\n                    class=\"control-button\"\n                    download\n                >\n                    <img src=\"@/assets/download.svg\" alt=\"Download\" class=\"icon\" />\n                </a>\n                </div>\n            </div>\n            </li>\n        </ul>\n        </div>\n\n\n      <!-- Mostra il messaggio solo se NON ci sono operazioni e radiografie -->\n      <div\n        v-if=\"\n          selectedDay.operations.length === 0 &&\n          selectedDay.radiographs.length === 0\n        \"\n      >\n        <p>Non ci sono attività pianificate per questa data.</p>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nexport default {\n  props: {\n    selectedDay: Object,\n    monthNames: Array,\n    month: Number,\n    year: Number,\n    formatDate: Function,\n    formatTime: Function,\n    enlargeRadiograph: Function,\n  },\n  data() {\n    return {\n      selectedRadiograph: null,\n      isSlidingDown: false,\n      isSlidingUp: false,\n      isImageVisible: false,\n    };\n  },\n  methods: {\n    toggleRadiograph(radiograph) {\n      if (this.selectedRadiograph === radiograph) {\n        this.isSlidingUp = true;\n        this.isSlidingDown = false;\n        setTimeout(() => {\n          this.selectedRadiograph = null;\n          this.isImageVisible = false;\n        }, 500); // Il tempo di transizione deve corrispondere a quello del CSS\n      } else {\n        this.selectedRadiograph = radiograph;\n        this.isSlidingDown = true;\n        this.isSlidingUp = false;\n        this.isImageVisible = true;\n      }\n    },\n    beforeEnter(el) {\n      el.style.opacity = 0;\n    },\n    enter(el, done) {\n      el.offsetHeight; // Trigger reflow\n      el.style.transition = \"opacity 0.5s ease\";\n      el.style.opacity = 1;\n      done();\n    },\n    leave(el, done) {\n      el.style.transition = \"opacity 0.5s ease\";\n      el.style.opacity = 0;\n      done();\n    },\n  },\n};\n</script>\n\n<style scoped>\n.day-details {\n  margin-top: 50px;\n  text-align: left;\n  transition: opacity 0.5s ease;\n}\n\n.day-details h2 {\n  font-size: 1em;\n  margin-bottom: 10px;\n}\n\n.day-details p {\n  font-size: 0.7em;\n  margin-bottom: 10px;\n}\n\n.day-details ul {\n  list-style-type: none;\n  padding: 0;\n}\n\n.day-details li {\n  margin-bottom: 10px;\n}\n\n/* Pulsanti più piccoli */\n.day-details button {\n  background-color: #007bff;\n  color: white;\n  border-radius: 5px;\n  padding: 5px 10px; /* Dimensione del padding ridotta */\n  font-size: 0.8em; /* Testo più piccolo */\n  border: none;\n  cursor: pointer;\n}\n\n.day-details button:hover {\n  background-color: #0056b3; /* Effetto hover */\n}\n\n.small-text {\n  font-size: 0.9rem; /* Puoi regolare la dimensione come preferisci */\n  font-weight: 600; /* Opzionale, per mantenere il testo in grassetto */\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.5s ease;\n}\n\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n\n.radiograph-list {\n  max-width: 800px;\n  margin: 20px auto;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli.radiograph-item {\n  padding: 10px 0;\n  border-bottom: 1px solid #ccc;\n  font-size: 12px;\n  color: #444;\n  display: flex;\n  flex-direction: column;\n}\n\n.view-link {\n  color: #007bff;\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-weight: bold;\n  transition: color 0.5s ease;\n  padding: 0;\n  margin: 0;\n}\n\n.view-link:hover {\n  color: #0056b3;\n}\n\n.radiograph-preview {\n  margin-top: 15px;\n  width: 95%;\n  align-self: center;\n}\n\n.radiograph-image {\n  width: 100%;\n  display: block;\n  margin-bottom: 10px;\n}\n\n.content-with-animation {\n  overflow: hidden;\n  max-height: 0;\n  transition: max-height 0.5s ease-out, transform 0.5s ease-out;\n  transform: translateY(-20px);\n}\n\n.content-with-animation.slide-down {\n  max-height: 550px;\n  transform: translateY(0);\n}\n\n.content-with-animation.slide-up {\n  max-height: 0;\n  transform: translateY(-20px);\n}\n\n.radiograph-controls {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.control-button {\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  margin-left: 10px;\n}\n\n.icon {\n  width: 20px;\n  height: 20px;\n}\n</style>"],"mappings":"AAkGA,eAAe;EACbA,KAAK,EAAE;IACLC,WAAW,EAAEC,MAAM;IACnBC,UAAU,EAAEC,KAAK;IACjBC,KAAK,EAAEC,MAAM;IACbC,IAAI,EAAED,MAAM;IACZE,UAAU,EAAEC,QAAQ;IACpBC,UAAU,EAAED,QAAQ;IACpBE,iBAAiB,EAAEF;EACrB,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,kBAAkB,EAAE,IAAI;MACxBC,aAAa,EAAE,KAAK;MACpBC,WAAW,EAAE,KAAK;MAClBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,UAAU,EAAE;MAC3B,IAAI,IAAI,CAACN,kBAAiB,KAAMM,UAAU,EAAE;QAC1C,IAAI,CAACJ,WAAU,GAAI,IAAI;QACvB,IAAI,CAACD,aAAY,GAAI,KAAK;QAC1BM,UAAU,CAAC,MAAM;UACf,IAAI,CAACP,kBAAiB,GAAI,IAAI;UAC9B,IAAI,CAACG,cAAa,GAAI,KAAK;QAC7B,CAAC,EAAE,GAAG,CAAC,EAAE;MACX,OAAO;QACL,IAAI,CAACH,kBAAiB,GAAIM,UAAU;QACpC,IAAI,CAACL,aAAY,GAAI,IAAI;QACzB,IAAI,CAACC,WAAU,GAAI,KAAK;QACxB,IAAI,CAACC,cAAa,GAAI,IAAI;MAC5B;IACF,CAAC;IACDK,WAAWA,CAACC,EAAE,EAAE;MACdA,EAAE,CAACC,KAAK,CAACC,OAAM,GAAI,CAAC;IACtB,CAAC;IACDC,KAAKA,CAACH,EAAE,EAAEI,IAAI,EAAE;MACdJ,EAAE,CAACK,YAAY,EAAE;MACjBL,EAAE,CAACC,KAAK,CAACK,UAAS,GAAI,mBAAmB;MACzCN,EAAE,CAACC,KAAK,CAACC,OAAM,GAAI,CAAC;MACpBE,IAAI,CAAC,CAAC;IACR,CAAC;IACDG,KAAKA,CAACP,EAAE,EAAEI,IAAI,EAAE;MACdJ,EAAE,CAACC,KAAK,CAACK,UAAS,GAAI,mBAAmB;MACzCN,EAAE,CAACC,KAAK,CAACC,OAAM,GAAI,CAAC;MACpBE,IAAI,CAAC,CAAC;IACR;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}