{"ast":null,"code":"import { ref } from \"vue\"; // Importa il composable ref da Vue 3\nimport { useRouter } from \"vue-router\"; // Importa il router per la navigazione\nimport { Auth } from \"@aws-amplify/auth\";\nexport default {\n  name: \"UserLogin\",\n  setup() {\n    // Stato del form\n    const form = ref({\n      username: \"\",\n      password: \"\",\n      rememberMe: false\n    });\n\n    // Stato degli errori\n    const errors = ref({\n      username: \"\",\n      password: \"\"\n    });\n    const router = useRouter(); // Inizializza il router\n\n    // Funzione per validare il form\n    const validateForm = () => {\n      errors.value = {\n        username: form.value.username ? \"\" : \"Username is required\",\n        password: form.value.password ? \"\" : \"Password is required\"\n      };\n      return Object.values(errors.value).every(error => !error);\n    };\n\n    // Funzione per gestire il submit del form\n    const onSubmit = async () => {\n      if (!validateForm()) return;\n      try {\n        // Effettua il login con AWS Cognito usando Auth.signIn\n        const user = await Auth.signIn(form.value.username, form.value.password);\n        alert(\"Login successful! Welcome \" + user.username);\n\n        // Naviga alla pagina di benvenuto\n        router.push({\n          name: \"Welcome\",\n          query: {\n            username: form.value.username\n          }\n        });\n      } catch (error) {\n        console.error(\"Login error:\", error);\n        alert(`Login error: ${error.message || error}`);\n      }\n    };\n    return {\n      form,\n      onSubmit,\n      errors\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","Auth","name","setup","form","username","password","rememberMe","errors","router","validateForm","value","Object","values","every","error","onSubmit","user","signIn","alert","push","query","console","message"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/UserLogin.vue"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4\">Login to Your Account</h2>\n      <form class=\"needs-validation\" novalidate @submit.prevent=\"onSubmit\">\n        <div class=\"mb-3\">\n          <label for=\"username\" class=\"form-label\">Username</label>\n          <input\n            id=\"username\"\n            v-model=\"form.username\"\n            type=\"text\"\n            class=\"form-control\"\n            :class=\"{ 'is-invalid': errors.username }\"\n            required\n          />\n          <div class=\"invalid-feedback\">{{ errors.username }}</div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"password\" class=\"form-label\">Password</label>\n          <input\n            id=\"password\"\n            v-model=\"form.password\"\n            type=\"password\"\n            class=\"form-control\"\n            :class=\"{ 'is-invalid': errors.password }\"\n            required\n          />\n          <div class=\"invalid-feedback\">{{ errors.password }}</div>\n        </div>\n        <div class=\"mb-3 form-check\">\n          <input\n            id=\"rememberMe\"\n            v-model=\"form.rememberMe\"\n            type=\"checkbox\"\n            class=\"form-check-input\"\n          />\n          <label for=\"rememberMe\" class=\"form-check-label\">Remember Me</label>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\"; // Importa il composable ref da Vue 3\nimport { useRouter } from \"vue-router\"; // Importa il router per la navigazione\nimport { Auth } from \"@aws-amplify/auth\";\n\nexport default {\n  name: \"UserLogin\",\n  setup() {\n    // Stato del form\n    const form = ref({\n      username: \"\",\n      password: \"\",\n      rememberMe: false,\n    });\n\n    // Stato degli errori\n    const errors = ref({\n      username: \"\",\n      password: \"\",\n    });\n\n    const router = useRouter(); // Inizializza il router\n\n    // Funzione per validare il form\n    const validateForm = () => {\n      errors.value = {\n        username: form.value.username ? \"\" : \"Username is required\",\n        password: form.value.password ? \"\" : \"Password is required\",\n      };\n      return Object.values(errors.value).every((error) => !error);\n    };\n\n    // Funzione per gestire il submit del form\n    const onSubmit = async () => {\n      if (!validateForm()) return;\n\n      try {\n        // Effettua il login con AWS Cognito usando Auth.signIn\n        const user = await Auth.signIn(\n          form.value.username,\n          form.value.password\n        );\n        alert(\"Login successful! Welcome \" + user.username);\n\n        // Naviga alla pagina di benvenuto\n        router.push({\n          name: \"Welcome\",\n          query: { username: form.value.username },\n        });\n      } catch (error) {\n        console.error(\"Login error:\", error);\n        alert(`Login error: ${error.message || error}`);\n      }\n    };\n\n    return { form, onSubmit, errors };\n  },\n};\n</script>\n\n<style scoped>\n.login {\n  background: linear-gradient(135deg, #f7f7f7, #e0e0e0);\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.container {\n  max-width: 600px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  animation: slideIn 1s ease-out;\n}\n\n@keyframes slideIn {\n  from {\n    transform: translateY(-30px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\nh2 {\n  font-size: 2.5rem;\n  color: #343a40;\n}\n\n.form-label {\n  color: #495057;\n}\n\n.invalid-feedback {\n  color: #dc3545;\n}\n\n.btn {\n  margin-top: 20px;\n  background-color: #007bff;\n  border: none;\n  transition: background-color 0.3s, transform 0.3s;\n}\n\n.btn:hover {\n  background-color: #0056b3;\n  transform: scale(1.05);\n}\n\n.form-check-label {\n  color: #495057;\n}\n</style>\n"],"mappings":"AA6CA,SAASA,GAAE,QAAS,KAAK,EAAE;AAC3B,SAASC,SAAQ,QAAS,YAAY,EAAE;AACxC,SAASC,IAAG,QAAS,mBAAmB;AAExC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN;IACA,MAAMC,IAAG,GAAIL,GAAG,CAAC;MACfM,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE;IACd,CAAC,CAAC;;IAEF;IACA,MAAMC,MAAK,GAAIT,GAAG,CAAC;MACjBM,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMG,MAAK,GAAIT,SAAS,CAAC,CAAC,EAAE;;IAE5B;IACA,MAAMU,YAAW,GAAIA,CAAA,KAAM;MACzBF,MAAM,CAACG,KAAI,GAAI;QACbN,QAAQ,EAAED,IAAI,CAACO,KAAK,CAACN,QAAO,GAAI,EAAC,GAAI,sBAAsB;QAC3DC,QAAQ,EAAEF,IAAI,CAACO,KAAK,CAACL,QAAO,GAAI,EAAC,GAAI;MACvC,CAAC;MACD,OAAOM,MAAM,CAACC,MAAM,CAACL,MAAM,CAACG,KAAK,CAAC,CAACG,KAAK,CAAEC,KAAK,IAAK,CAACA,KAAK,CAAC;IAC7D,CAAC;;IAED;IACA,MAAMC,QAAO,GAAI,MAAAA,CAAA,KAAY;MAC3B,IAAI,CAACN,YAAY,CAAC,CAAC,EAAE;MAErB,IAAI;QACF;QACA,MAAMO,IAAG,GAAI,MAAMhB,IAAI,CAACiB,MAAM,CAC5Bd,IAAI,CAACO,KAAK,CAACN,QAAQ,EACnBD,IAAI,CAACO,KAAK,CAACL,QACb,CAAC;QACDa,KAAK,CAAC,4BAA2B,GAAIF,IAAI,CAACZ,QAAQ,CAAC;;QAEnD;QACAI,MAAM,CAACW,IAAI,CAAC;UACVlB,IAAI,EAAE,SAAS;UACfmB,KAAK,EAAE;YAAEhB,QAAQ,EAAED,IAAI,CAACO,KAAK,CAACN;UAAS;QACzC,CAAC,CAAC;MACJ,EAAE,OAAOU,KAAK,EAAE;QACdO,OAAO,CAACP,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpCI,KAAK,CAAC,gBAAgBJ,KAAK,CAACQ,OAAM,IAAKR,KAAK,EAAE,CAAC;MACjD;IACF,CAAC;IAED,OAAO;MAAEX,IAAI;MAAEY,QAAQ;MAAER;IAAO,CAAC;EACnC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}