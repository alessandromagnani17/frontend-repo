{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      selectedFile: null,\n      predictedClass: null,\n      imagePreview: null,\n      gradcamImage: null\n    };\n  },\n  methods: {\n    onFileChange(event) {\n      this.selectedFile = event.target.files[0];\n      this.imagePreview = URL.createObjectURL(this.selectedFile);\n    },\n    async submitImage() {\n      if (!this.selectedFile) return;\n      const formData = new FormData();\n      formData.append(\"file\", this.selectedFile);\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const userUid = userData.uid;\n      formData.append(\"userUID\", userUid);\n      try {\n        // Richiesta POST per ottenere il nome dell'immagine Grad-CAM\n        const response = await axios.post(\"http://127.0.0.1:5000/predict\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        console.log(\"Response from server:\", response.data);\n        this.predictedClass = response.data.predicted_class;\n        this.gradcamImage = response.data.gradcam_image;\n        console.log(\"GRAD --> \" + this.gradcamImage);\n      } catch (error) {\n        console.error(\"Error predicting image:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","selectedFile","predictedClass","imagePreview","gradcamImage","methods","onFileChange","event","target","files","URL","createObjectURL","submitImage","formData","FormData","append","userData","JSON","parse","localStorage","getItem","userUid","uid","response","post","headers","console","log","predicted_class","gradcam_image","error"],"sources":["C:\\Users\\Utente\\Desktop\\DIO\\osteoarthritis-project\\frontend\\src\\components\\PredictRadiograph.vue"],"sourcesContent":["<template>\n  <div class=\"welcome\">\n    <aside class=\"sidebar bg-dark text-white\">\n      <h4 class=\"text-center mt-3\">Link Rapidi</h4>\n      <ul class=\"nav flex-column\">\n        <li class=\"nav-item\">\n          <router-link class=\"nav-link text-white\" to=\"/view-radiographs\">\n            Visualizza Radiografie\n          </router-link>\n        </li>\n        <li class=\"nav-item\">\n          <router-link class=\"nav-link text-white\" to=\"/manage-patients\">\n            Gestisci Pazienti\n          </router-link>\n        </li>\n        <li class=\"nav-item\">\n          <router-link class=\"nav-link text-white\" to=\"/reports\">\n            Rapporti\n          </router-link>\n        </li>\n        <li class=\"nav-item\">\n          <router-link class=\"nav-link text-white\" to=\"/predict\">\n            Predict\n          </router-link>\n        </li>\n      </ul>\n    </aside>\n\n    <div class=\"container mt-5\">\n      <h5><strong>Carica una radiografia</strong></h5>\n      <div>\n        <input type=\"file\" @change=\"onFileChange\" accept=\"image/*\" />\n      </div>\n      <div v-if=\"imagePreview\" class=\"mt-3\">\n        <img :src=\"imagePreview\" alt=\"Anteprima immagine\" class=\"img-preview\" />\n      </div>\n      <div>\n        <button @click=\"submitImage\" class=\"btn btn-primary mt-5\">\n          Predict\n        </button>\n      </div>\n      <div v-if=\"predictedClass !== null\" class=\"mt-4\">\n        Predicted Class: {{ predictedClass }}\n      </div>\n      <div v-if=\"gradcamImage\" class=\"mt-3\">\n        <img :src=\"gradcamImage\" alt=\"Grad-CAM Image\" class=\"img-preview\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      selectedFile: null,\n      predictedClass: null,\n      imagePreview: null,\n      gradcamImage: null,\n    };\n  },\n  methods: {\n    onFileChange(event) {\n      this.selectedFile = event.target.files[0];\n      this.imagePreview = URL.createObjectURL(this.selectedFile);\n    },\n    async submitImage() {\n      if (!this.selectedFile) return;\n\n      const formData = new FormData();\n      formData.append(\"file\", this.selectedFile);\n\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const userUid = userData.uid;\n      formData.append(\"userUID\", userUid);\n\n      try {\n        // Richiesta POST per ottenere il nome dell'immagine Grad-CAM\n        const response = await axios.post(\n          \"http://127.0.0.1:5000/predict\",\n          formData,\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n\n        console.log(\"Response from server:\", response.data);\n        this.predictedClass = response.data.predicted_class;\n        this.gradcamImage = response.data.gradcam_image;\n\n        console.log(\"GRAD --> \" + this.gradcamImage)\n      } catch (error) {\n        console.error(\"Error predicting image:\", error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.welcome {\n  background: #ffffff;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0);\n}\n\n.container {\n  max-width: 600px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 100px;\n  height: auto;\n  text-align: center;\n  flex-grow: 1;\n  margin-left: 20px;\n}\n\n.img-preview {\n  max-width: 100%;\n  max-height: 300px;\n  margin-top: 15px;\n}\n\nh2 {\n  font-size: 18px;\n  margin-bottom: 30px;\n}\n\np {\n  font-size: 14px;\n  color: #6c757d;\n}\n\n.btn-group .btn {\n  width: 100%;\n  margin-top: 20px;\n  padding: 10px;\n}\n\n.btn-primary {\n  background-color: #007bff;\n  border: none;\n}\n\n.btn-primary:hover {\n  background-color: #0056b3;\n}\n\n.sidebar {\n  top: 0;\n  width: 250px;\n  height: 100vh;\n  padding: 20px;\n  background: linear-gradient(180deg, #212529, #343a40);\n}\n\n.sidebar .nav-link {\n  color: #cfd2d6;\n}\n\n.sidebar .nav-link:hover {\n  background-color: #495057;\n  border-radius: 5px;\n}\n\n.nav-link {\n  padding: 10px 15px;\n}\n\n@media (max-width: 767.98px) {\n  .navbar-brand {\n    font-size: 1.5rem;\n  }\n\n  .sidebar {\n    display: none;\n  }\n}\n</style>\n"],"mappings":"AAoDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,IAAI;MAClBC,cAAc,EAAE,IAAI;MACpBC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAACC,KAAK,EAAE;MAClB,IAAI,CAACN,YAAW,GAAIM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MACzC,IAAI,CAACN,YAAW,GAAIO,GAAG,CAACC,eAAe,CAAC,IAAI,CAACV,YAAY,CAAC;IAC5D,CAAC;IACD,MAAMW,WAAWA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAACX,YAAY,EAAE;MAExB,MAAMY,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACd,YAAY,CAAC;MAE1C,MAAMe,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;MAC7D,MAAMC,OAAM,GAAIL,QAAQ,CAACM,GAAG;MAC5BT,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEM,OAAO,CAAC;MAEnC,IAAI;QACF;QACA,MAAME,QAAO,GAAI,MAAMxB,KAAK,CAACyB,IAAI,CAC/B,+BAA+B,EAC/BX,QAAQ,EACR;UACEY,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CACF,CAAC;QAEDC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEJ,QAAQ,CAACvB,IAAI,CAAC;QACnD,IAAI,CAACE,cAAa,GAAIqB,QAAQ,CAACvB,IAAI,CAAC4B,eAAe;QACnD,IAAI,CAACxB,YAAW,GAAImB,QAAQ,CAACvB,IAAI,CAAC6B,aAAa;QAE/CH,OAAO,CAACC,GAAG,CAAC,WAAU,GAAI,IAAI,CAACvB,YAAY;MAC7C,EAAE,OAAO0B,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}