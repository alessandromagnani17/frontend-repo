{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-fda51896\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Dashboard Dottore\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PatientList = _resolveComponent(\"PatientList\");\n  const _component_UploadRadiograph = _resolveComponent(\"UploadRadiograph\");\n  const _component_PatientRadiographs = _resolveComponent(\"PatientRadiographs\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createVNode(_component_PatientList, {\n    patients: $setup.patients,\n    onSelectPatient: $setup.selectPatient\n  }, null, 8 /* PROPS */, [\"patients\", \"onSelectPatient\"]), $setup.selectedPatient ? (_openBlock(), _createBlock(_component_UploadRadiograph, {\n    key: 0,\n    onUploadSuccess: $setup.handleUploadSuccess,\n    patientId: $setup.selectedPatient.id\n  }, null, 8 /* PROPS */, [\"onUploadSuccess\", \"patientId\"])) : _createCommentVNode(\"v-if\", true), $setup.selectedPatient ? (_openBlock(), _createBlock(_component_PatientRadiographs, {\n    key: 1,\n    radiographs: $setup.selectedPatientRadiographs\n  }, null, 8 /* PROPS */, [\"radiographs\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_PatientList","patients","$setup","onSelectPatient","selectPatient","selectedPatient","_createBlock","_component_UploadRadiograph","key","onUploadSuccess","handleUploadSuccess","patientId","id","_createCommentVNode","_component_PatientRadiographs","radiographs","selectedPatientRadiographs"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\DoctorDashboard.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Dashboard Dottore</h1>\r\n    <PatientList :patients=\"patients\" @selectPatient=\"selectPatient\" />\r\n    <UploadRadiograph\r\n      v-if=\"selectedPatient\"\r\n      @uploadSuccess=\"handleUploadSuccess\"\r\n      :patientId=\"selectedPatient.id\"\r\n    />\r\n    <PatientRadiographs\r\n      :radiographs=\"selectedPatientRadiographs\"\r\n      v-if=\"selectedPatient\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PatientRadiographs from \"./PatientRadiographs.vue\";\r\nimport UploadRadiograph from \"./UploadRadiographs.vue\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { getPatients, getRadiographs } from \"../services/api-service\"; // Assicurati di importare getPatients\r\n\r\nexport default {\r\n  components: {\r\n    PatientRadiographs,\r\n    UploadRadiograph,\r\n  },\r\n  setup() {\r\n    const patients = ref([]);\r\n    const selectedPatient = ref(null);\r\n    const selectedPatientRadiographs = ref([]);\r\n\r\n    // Ottieni il DoctorID dal localStorage\r\n    const doctorId = localStorage.getItem(\"doctorId\");\r\n\r\n    onMounted(async () => {\r\n      console.log(\"Cerco pazienti associati a: \" + doctorId);\r\n      // Assicurati che doctorId non sia null\r\n      if (doctorId) {\r\n        // Ottieni i pazienti associati\r\n        patients.value = await getPatients(doctorId);\r\n      } else {\r\n        console.error(\"Nessun DoctorID trovato nel localStorage.\");\r\n      }\r\n    });\r\n\r\n    // Seleziona un paziente e ottieni le sue radiografie\r\n    const selectPatient = async (patient) => {\r\n      selectedPatient.value = patient;\r\n      selectedPatientRadiographs.value = await getRadiographs(patient.id);\r\n    };\r\n\r\n    const handleUploadSuccess = () => {\r\n      selectPatient(selectedPatient.value); // Ricarica le radiografie\r\n    };\r\n\r\n    return {\r\n      patients,\r\n      selectPatient,\r\n      handleUploadSuccess,\r\n      selectedPatient,\r\n      selectedPatientRadiographs,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Puoi aggiungere qui il tuo stile personalizzato per la dashboard */\r\n</style>\r\n"],"mappings":";;gEAEIA,mBAAA,CAA0B,YAAtB,mBAAiB;;;;;uBADvBC,mBAAA,CAYM,cAXJC,UAA0B,EAC1BC,YAAA,CAAmEC,sBAAA;IAArDC,QAAQ,EAAEC,MAAA,CAAAD,QAAQ;IAAGE,eAAa,EAAED,MAAA,CAAAE;4DAE1CF,MAAA,CAAAG,eAAe,I,cADvBC,YAAA,CAIEC,2BAAA;IARNC,GAAA;IAMOC,eAAa,EAAEP,MAAA,CAAAQ,mBAAmB;IAClCC,SAAS,EAAET,MAAA,CAAAG,eAAe,CAACO;+DAPlCC,mBAAA,gBAWYX,MAAA,CAAAG,eAAe,I,cAFvBC,YAAA,CAGEQ,6BAAA;IAZNN,GAAA;IAUOO,WAAW,EAAEb,MAAA,CAAAc;8CAVpBH,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}