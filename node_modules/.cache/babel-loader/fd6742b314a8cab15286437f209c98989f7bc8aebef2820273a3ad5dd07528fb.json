{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-4\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"badge badge-warning\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"list-group\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 1\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, [_cache[0] || (_cache[0] = _createTextVNode(\" Notifiche \")), _ctx.unreadCount > 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, _toDisplayString(_ctx.unreadCount), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _ctx.notifications.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.notifications, (notification, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: \"list-group-item\"\n    }, [_createElementVNode(\"div\", null, [_createElementVNode(\"strong\", null, \"Notifica \" + _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(notification, (value, key) => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: key\n      }, [_createElementVNode(\"strong\", null, _toDisplayString(key) + \":\", 1 /* TEXT */), _createTextVNode(\" \" + _toDisplayString(value), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Mostra il pulsante solo se isRead è false \"), !notification.isRead ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => _ctx.markAsRead(notification.id),\n      class: \"btn btn-sm btn-primary mt-2\"\n    }, \" Segna come letta \", 8 /* PROPS */, _hoisted_5)) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _cache[1] || (_cache[1] = [_createElementVNode(\"p\", null, \"Non ci sono notifiche.\", -1 /* HOISTED */)])))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createTextVNode","_ctx","unreadCount","_hoisted_2","_toDisplayString","_createCommentVNode","notifications","length","_hoisted_3","_hoisted_4","_Fragment","_renderList","notification","index","value","isRead","onClick","$event","markAsRead","id","_hoisted_5","_hoisted_6","_cache"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/views/UserNotifications.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <h2>\n      Notifiche\n      <span v-if=\"unreadCount > 0\" class=\"badge badge-warning\">{{\n        unreadCount\n      }}</span>\n    </h2>\n    <div v-if=\"notifications.length\">\n      <ul class=\"list-group\">\n        <li\n          v-for=\"(notification, index) in notifications\"\n          :key=\"index\"\n          class=\"list-group-item\"\n        >\n          <div>\n            <strong>Notifica {{ index + 1 }}</strong>\n            <ul>\n              <li v-for=\"(value, key) in notification\" :key=\"key\">\n                <strong>{{ key }}:</strong> {{ value }}\n              </li>\n            </ul>\n          </div>\n\n          <!-- Mostra il pulsante solo se isRead è false -->\n          <button\n            v-if=\"!notification.isRead\"\n            @click=\"markAsRead(notification.id)\"\n            class=\"btn btn-sm btn-primary mt-2\"\n          >\n            Segna come letta\n          </button>\n        </li>\n      </ul>\n    </div>\n    <div v-else>\n      <p>Non ci sono notifiche.</p>\n    </div>\n  </div>\n</template>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAD7BC,GAAA;EAImCD,KAAK,EAAC;;;EAJzCC,GAAA;AAAA;;EASUD,KAAK,EAAC;AAAY;mBAT5B;;EAAAC,GAAA;AAAA;;uBACEC,mBAAA,CAqCM,OArCNC,UAqCM,GApCJC,mBAAA,CAKK,a,0BAPTC,gBAAA,CAEQ,aAEF,IAAYC,IAAA,CAAAC,WAAW,Q,cAAvBL,mBAAA,CAES,QAFTM,UAES,EAAAC,gBAAA,CADPH,IAAA,CAAAC,WAAW,oBALnBG,mBAAA,e,GAQeJ,IAAA,CAAAK,aAAa,CAACC,MAAM,I,cAA/BV,mBAAA,CA0BM,OAlCVW,UAAA,GASMT,mBAAA,CAwBK,MAxBLU,UAwBK,I,kBAvBHZ,mBAAA,CAsBKa,SAAA,QAhCbC,WAAA,CAW0CV,IAAA,CAAAK,aAAa,EAXvD,CAWkBM,YAAY,EAAEC,KAAK;yBAD7BhB,mBAAA,CAsBK;MApBFD,GAAG,EAAEiB,KAAK;MACXlB,KAAK,EAAC;QAENI,mBAAA,CAOM,cANJA,mBAAA,CAAyC,gBAAjC,WAAS,GAAAK,gBAAA,CAAGS,KAAK,sBACzBd,mBAAA,CAIK,c,kBAHHF,mBAAA,CAEKa,SAAA,QApBnBC,WAAA,CAkByCC,YAAY,EAlBrD,CAkB0BE,KAAK,EAAElB,GAAG;2BAAtBC,mBAAA,CAEK;QAFqCD,GAAG,EAAEA;MAAG,IAChDG,mBAAA,CAA2B,gBAAAK,gBAAA,CAAhBR,GAAG,IAAG,GAAC,iBAnBlCI,gBAAA,CAmB2C,GAAC,GAAAI,gBAAA,CAAGU,KAAK,iB;wCAK1CT,mBAAA,+CAAkD,E,CAEzCO,YAAY,CAACG,MAAM,I,cAD5BlB,mBAAA,CAMS;MA/BnBD,GAAA;MA2BaoB,OAAK,EAAAC,MAAA,IAAEhB,IAAA,CAAAiB,UAAU,CAACN,YAAY,CAACO,EAAE;MAClCxB,KAAK,EAAC;OACP,oBAED,iBA/BVyB,UAAA,KAAAf,mBAAA,e;uDAmCIR,mBAAA,CAEM,OArCVwB,UAAA,EAAAC,MAAA,QAAAA,MAAA,OAoCMvB,mBAAA,CAA6B,WAA1B,wBAAsB,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}