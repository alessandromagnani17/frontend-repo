{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"verify-email\"\n};\nconst _hoisted_2 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_3 = {\n  class: \"mb-4\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = [\"disabled\"];\nconst _hoisted_7 = {\n  key: 2,\n  class: \"btn-group mt-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h2\", _hoisted_3, _toDisplayString($data.verificationMessage), 1 /* TEXT */), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Campo per inserire la nuova password \"), $data.isPasswordFieldVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"new-password\"\n  }, \"Inserisci la nuova password:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"new-password\",\n    class: \"form-control mt-3\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPassword = $event),\n    placeholder: \"Nuova password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPassword]]), _createElementVNode(\"button\", {\n    class: \"btn btn-primary mt-4\",\n    disabled: $data.isLoading,\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.updatePassword && $options.updatePassword(...args))\n  }, \" Aggiorna Password \", 8 /* PROPS */, _hoisted_6)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Bottone per il login se non ci sono errori \"), !$data.isLoading && !$data.errorMessage && !$data.isPasswordFieldVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary btn-next\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.goToLogin && $options.goToLogin(...args))\n  }, \" Esegui il login \")])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$data","verificationMessage","errorMessage","_hoisted_4","_createCommentVNode","isPasswordFieldVisible","_hoisted_5","for","type","id","_cache","$event","newPassword","placeholder","disabled","isLoading","onClick","args","$options","updatePassword","_hoisted_6","_hoisted_7","goToLogin"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\ResetPassword.vue"],"sourcesContent":["<template>\r\n    <div class=\"verify-email\">\r\n      <div class=\"container mt-5\">\r\n        <h2 class=\"mb-4\">{{ verificationMessage }}</h2>\r\n        <p v-if=\"errorMessage\">{{ errorMessage }}</p>\r\n  \r\n        <!-- Campo per inserire la nuova password -->\r\n        <div v-if=\"isPasswordFieldVisible\">\r\n          <label for=\"new-password\">Inserisci la nuova password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"new-password\"\r\n            class=\"form-control mt-3\"\r\n            v-model=\"newPassword\"\r\n            placeholder=\"Nuova password\"\r\n          />\r\n          <button\r\n            class=\"btn btn-primary mt-4\"\r\n            :disabled=\"isLoading\"\r\n            @click=\"updatePassword\"\r\n          >\r\n            Aggiorna Password\r\n          </button>\r\n        </div>\r\n  \r\n        <!-- Bottone per il login se non ci sono errori -->\r\n        <div class=\"btn-group mt-4\" v-if=\"!isLoading && !errorMessage && !isPasswordFieldVisible\">\r\n          <button class=\"btn btn-primary btn-next\" @click=\"goToLogin\">\r\n            Esegui il login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n    name: \"VerifyEmail\",\r\n    data() {\r\n      return {\r\n        verificationMessage: \"Verificando la tua email...\",\r\n        errorMessage: null,\r\n        isLoading: true,\r\n        isPasswordFieldVisible: false, // Stato per mostrare il campo password\r\n        newPassword: \"\", // Valore della nuova password\r\n      };\r\n    },\r\n    async mounted() {\r\n      const uid = this.$route.params.uid; // Assicurati che l'UID sia presente nell'URL\r\n      try {\r\n        const response = await axios.get(\r\n          `http://127.0.0.1:5000/verify-email/${uid}`\r\n        );\r\n  \r\n        // Imposta il messaggio di verifica basato sulla risposta del server\r\n        if (response.data.message === \"Email già verificata!\") {\r\n          this.verificationMessage = \"La tua email è già stata verificata!\";\r\n        } else if (response.data.message === \"Email verificata con successo!\") {\r\n          this.verificationMessage = \"Email verificata con successo!\";\r\n          this.isPasswordFieldVisible = true; // Mostra il campo password\r\n        }\r\n  \r\n        console.log(\"Risposta server --> \" + response.data.message);\r\n      } catch (error) {\r\n        this.errorMessage =\r\n          error.response?.data?.error || \"Errore durante la verifica dell'email.\";\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    methods: {\r\n      async updatePassword() {\r\n        if (!this.newPassword) {\r\n          this.errorMessage = \"La password non può essere vuota.\";\r\n          return;\r\n        }\r\n  \r\n        this.isLoading = true;\r\n        try {\r\n          const uid = this.$route.params.uid;\r\n          const response = await axios.post(\"http://127.0.0.1:5000/update-password\", {\r\n            uid,\r\n            newPassword: this.newPassword,\r\n          });\r\n  \r\n          this.verificationMessage = \"Password aggiornata con successo!\";\r\n          this.isPasswordFieldVisible = false;\r\n        } catch (error) {\r\n          this.errorMessage =\r\n            error.response?.data?.error || \"Errore durante l'aggiornamento della password.\";\r\n        } finally {\r\n          this.isLoading = false;\r\n        }\r\n      },\r\n      goToLogin() {\r\n        this.$router.push(\"/login\");\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .verify-email {\r\n    background: #ffffff; /* Sfondo bianco, simile alla pagina di login */\r\n    min-height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    box-shadow: 0 0px 0px rgba(0, 0, 0, 0); /* Rimuove ombre esterne */\r\n  }\r\n  \r\n  .container {\r\n    max-width: 80%;\r\n    padding: 40px;\r\n    border-radius: 15px;\r\n    background: #ffffff;\r\n    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1); /* Simile alla shadow del login */\r\n    margin-top: 100px;\r\n    height: auto;\r\n    text-align: center; /* Centra il testo */\r\n    flex-grow: 1; /* Permette al contenuto principale di occupare lo spazio rimanente */\r\n    margin-left: 20px; /* Margine sinistro per distanziare il contenuto dalla sidebar */\r\n  }\r\n  \r\n  h2 {\r\n    font-size: 18px; /* Uniforma il font size al login */\r\n    margin-bottom: 30px;\r\n  }\r\n  \r\n  p {\r\n    font-size: 14px;\r\n    color: #6c757d;\r\n  }\r\n  \r\n  .btn-group .btn {\r\n    width: 100%; /* Assicura che i bottoni occupino l'intera larghezza */\r\n    margin-top: 20px;\r\n    padding: 10px;\r\n  }\r\n  \r\n  .btn-primary {\r\n    background-color: #007bff;\r\n    color: white;\r\n    padding: 8px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    width: 80%;\r\n    max-width: 300px;\r\n    min-width: 200px;\r\n    font-size: 13px;\r\n    transition: background-color 0.3s ease;\r\n    text-align: center;\r\n    display: inline-block;\r\n  }\r\n  \r\n  .btn-primary:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  .sidebar {\r\n    top: 0;\r\n    width: 250px; /* Imposta la larghezza della sidebar */\r\n    height: 100vh; /* Imposta l'altezza della sidebar al 100% della viewport */\r\n    padding: 20px; /* Padding interno */\r\n    background: linear-gradient(180deg, #212529, #343a40);\r\n  }\r\n  \r\n  .sidebar .nav-link {\r\n    color: #cfd2d6;\r\n  }\r\n  \r\n  .sidebar .nav-link:hover {\r\n    background-color: #495057;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .nav-link {\r\n    padding: 10px 15px; /* Aggiunge padding ai link per migliorarne l'aspetto */\r\n  }\r\n  \r\n  @media (max-width: 767.98px) {\r\n    .navbar-brand {\r\n      font-size: 1.5rem;\r\n    }\r\n  \r\n    .sidebar {\r\n      display: none;\r\n    }\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAgB;;EACrBA,KAAK,EAAC;AAAM;;EAHxBC,GAAA;AAAA;;EAAAA,GAAA;AAAA;mBAAA;;EAAAA,GAAA;EA0BaD,KAAK,EAAC;;;uBAzBfE,mBAAA,CA+BM,OA/BNC,UA+BM,GA9BJC,mBAAA,CA6BM,OA7BNC,UA6BM,GA5BJD,mBAAA,CAA+C,MAA/CE,UAA+C,EAAAC,gBAAA,CAA3BC,KAAA,CAAAC,mBAAmB,kBAC9BD,KAAA,CAAAE,YAAY,I,cAArBR,mBAAA,CAA6C,KAJrDS,UAAA,EAAAJ,gBAAA,CAIkCC,KAAA,CAAAE,YAAY,oBAJ9CE,mBAAA,gBAMQA,mBAAA,0CAA6C,EAClCJ,KAAA,CAAAK,sBAAsB,I,cAAjCX,mBAAA,CAgBM,OAvBdY,UAAA,G,0BAQUV,mBAAA,CAA8D;IAAvDW,GAAG,EAAC;EAAc,GAAC,8BAA4B,sB,gBACtDX,mBAAA,CAME;IALAY,IAAI,EAAC,UAAU;IACfC,EAAE,EAAC,cAAc;IACjBjB,KAAK,EAAC,mBAAmB;IAZrC,uBAAAkB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAaqBX,KAAA,CAAAY,WAAW,GAAAD,MAAA;IACpBE,WAAW,EAAC;iDADHb,KAAA,CAAAY,WAAW,E,GAGtBhB,mBAAA,CAMS;IALPJ,KAAK,EAAC,sBAAsB;IAC3BsB,QAAQ,EAAEd,KAAA,CAAAe,SAAS;IACnBC,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KACvB,qBAED,iBAtBVG,UAAA,E,KAAAhB,mBAAA,gBAyBQA,mBAAA,gDAAmD,E,CAChBJ,KAAA,CAAAe,SAAS,KAAKf,KAAA,CAAAE,YAAY,KAAKF,KAAA,CAAAK,sBAAsB,I,cAAxFX,mBAAA,CAIM,OAJN2B,UAIM,GAHJzB,mBAAA,CAES;IAFDJ,KAAK,EAAC,0BAA0B;IAAEwB,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAI,SAAA,IAAAJ,QAAA,CAAAI,SAAA,IAAAL,IAAA,CAAS;KAAE,mBAE5D,E,KA7BVb,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}