{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-03afdc5f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"upload-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Carica Radiografia\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args))\n  }, null, 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.uploadFile && $options.uploadFile(...args))\n  }, \"Carica\"), $data.uploadSuccess ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"Caricamento completato con successo!\")) : _createCommentVNode(\"v-if\", true), $data.uploadError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString($data.uploadError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","type","onChange","_cache","args","$options","handleFileUpload","onClick","uploadFile","$data","uploadSuccess","_hoisted_3","_createCommentVNode","uploadError","_hoisted_4","_toDisplayString"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/UploadRadiographs.vue"],"sourcesContent":["<template>\n  <div class=\"upload-container\">\n    <h2>Carica Radiografia</h2>\n    <input type=\"file\" @change=\"handleFileUpload\" />\n    <button class=\"btn btn-primary\" @click=\"uploadFile\">Carica</button>\n    <p v-if=\"uploadSuccess\">Caricamento completato con successo!</p>\n    <p v-if=\"uploadError\">{{ uploadError }}</p>\n  </div>\n</template>\n\n<script>\nimport { uploadToS3 } from \"../services/apiService\";\n\nexport default {\n  name: \"UploadRadiograph\",\n  data() {\n    return {\n      file: null,\n      uploadSuccess: false,\n      uploadError: null,\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.file = event.target.files[0];\n    },\n    async uploadFile() {\n      if (!this.file) {\n        this.uploadError = \"Seleziona un file da caricare.\";\n        return;\n      }\n\n      try {\n        await uploadToS3(this.file, \"your-s3-bucket-name\");\n        this.uploadSuccess = true;\n        this.uploadError = null;\n      } catch (error) {\n        this.uploadSuccess = false;\n        this.uploadError = \"Errore durante il caricamento: \" + error.message;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.upload-container {\n  max-width: 600px;\n  margin: auto;\n  text-align: center;\n}\n\nbutton {\n  margin-top: 10px;\n}\n\np {\n  margin-top: 10px;\n  color: green;\n}\n\np.error {\n  color: red;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAkB;gEAC3BC,mBAAA,CAA2B,YAAvB,oBAAkB;;EAF1BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAMM,OANNC,UAMM,GALJC,UAA2B,EAC3BJ,mBAAA,CAAgD;IAAzCK,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;qCAC5CR,mBAAA,CAAmE;IAA3DD,KAAK,EAAC,iBAAiB;IAAEY,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAG,UAAA,IAAAH,QAAA,CAAAG,UAAA,IAAAJ,IAAA,CAAU;KAAE,QAAM,GACjDK,KAAA,CAAAC,aAAa,I,cAAtBZ,mBAAA,CAAgE,KALpEa,UAAA,EAK4B,sCAAoC,KALhEC,mBAAA,gBAMaH,KAAA,CAAAI,WAAW,I,cAApBf,mBAAA,CAA2C,KAN/CgB,UAAA,EAAAC,gBAAA,CAM6BN,KAAA,CAAAI,WAAW,oBANxCD,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}