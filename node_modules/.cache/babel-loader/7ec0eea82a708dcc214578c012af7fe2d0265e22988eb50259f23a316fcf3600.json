{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"verify-email\"\n};\nconst _hoisted_2 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_3 = {\n  class: \"mb-4\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = [\"disabled\"];\nconst _hoisted_7 = {\n  key: 2,\n  class: \"btn-group mt-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h2\", _hoisted_3, _toDisplayString($data.verificationMessage), 1 /* TEXT */), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Campo per inserire la nuova password \"), $data.isPasswordFieldVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"new-password\"\n  }, \"Inserisci la nuova password:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"new-password\",\n    class: \"form-control mt-3\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPassword = $event),\n    placeholder: \"Nuova password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPassword]]), _createElementVNode(\"button\", {\n    class: \"btn btn-primary mt-4\",\n    disabled: $data.isLoading,\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.updatePassword && $options.updatePassword(...args))\n  }, \" Aggiorna Password \", 8 /* PROPS */, _hoisted_6)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Bottone per il login se non ci sono errori \"), !$data.isLoading && !$data.errorMessage && !$data.isPasswordFieldVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary btn-next\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.goToLogin && $options.goToLogin(...args))\n  }, \" Esegui il login \")])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$data","verificationMessage","errorMessage","_hoisted_4","_createCommentVNode","isPasswordFieldVisible","_hoisted_5","for","type","id","_cache","$event","newPassword","placeholder","disabled","isLoading","onClick","args","$options","updatePassword","_hoisted_6","_hoisted_7","goToLogin"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\ResetPassword.vue"],"sourcesContent":["<template>\n  <div class=\"verify-email\">\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4\">{{ verificationMessage }}</h2>\n      <p v-if=\"errorMessage\">{{ errorMessage }}</p>\n\n      <!-- Campo per inserire la nuova password -->\n      <div v-if=\"isPasswordFieldVisible\">\n        <label for=\"new-password\">Inserisci la nuova password:</label>\n        <input\n          type=\"password\"\n          id=\"new-password\"\n          class=\"form-control mt-3\"\n          v-model=\"newPassword\"\n          placeholder=\"Nuova password\"\n        />\n        <button\n          class=\"btn btn-primary mt-4\"\n          :disabled=\"isLoading\"\n          @click=\"updatePassword\"\n        >\n          Aggiorna Password\n        </button>\n      </div>\n\n      <!-- Bottone per il login se non ci sono errori -->\n      <div\n        class=\"btn-group mt-4\"\n        v-if=\"!isLoading && !errorMessage && !isPasswordFieldVisible\"\n      >\n        <button class=\"btn btn-primary btn-next\" @click=\"goToLogin\">\n          Esegui il login\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"VerifyEmail\",\n  data() {\n    return {\n      verificationMessage: \"Verificando la tua email...\",\n      errorMessage: null,\n      isLoading: true,\n      isPasswordFieldVisible: false, // Stato per mostrare il campo password\n      newPassword: \"\", // Valore della nuova password\n    };\n  },\n  async mounted() {\n    const uid = this.$route.params.uid; // Assicurati che l'UID sia presente nell'URL\n    try {\n      const response = await axios.get(\n        `http://127.0.0.1:5000/verify-email/${uid}`\n      );\n\n      // Imposta il messaggio di verifica basato sulla risposta del server\n      if (response.data.message === \"Email già verificata!\") {\n        this.verificationMessage = \"La tua email è già stata verificata!\";\n      } else if (response.data.message === \"Email verificata con successo!\") {\n        this.verificationMessage = \"Email verificata con successo!\";\n        this.isPasswordFieldVisible = true; // Mostra il campo password\n      }\n\n      console.log(\"Risposta server --> \" + response.data.message);\n    } catch (error) {\n      this.errorMessage =\n        error.response?.data?.error || \"Errore durante la verifica dell'email.\";\n    } finally {\n      this.isLoading = false;\n    }\n  },\n  methods: {\n    async updatePassword() {\n      if (!this.newPassword) {\n        this.errorMessage = \"La password non può essere vuota.\";\n        return;\n      }\n\n      this.isLoading = true;\n      try {\n        const uid = this.$route.params.uid;\n        await axios.post(\"http://127.0.0.1:5000/update-password\", {\n          uid,\n          newPassword: this.newPassword,\n        });\n\n        this.verificationMessage = \"Password aggiornata con successo!\";\n        this.isPasswordFieldVisible = false;\n      } catch (error) {\n        this.errorMessage =\n          error.response?.data?.error ||\n          \"Errore durante l'aggiornamento della password.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    goToLogin() {\n      this.$router.push(\"/login\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n.verify-email {\n  background: #ffffff; /* Sfondo bianco, simile alla pagina di login */\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0); /* Rimuove ombre esterne */\n}\n\n.container {\n  max-width: 80%;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1); /* Simile alla shadow del login */\n  margin-top: 100px;\n  height: auto;\n  text-align: center; /* Centra il testo */\n  flex-grow: 1; /* Permette al contenuto principale di occupare lo spazio rimanente */\n  margin-left: 20px; /* Margine sinistro per distanziare il contenuto dalla sidebar */\n}\n\nh2 {\n  font-size: 18px; /* Uniforma il font size al login */\n  margin-bottom: 30px;\n}\n\np {\n  font-size: 14px;\n  color: #6c757d;\n}\n\n.btn-group .btn {\n  width: 100%; /* Assicura che i bottoni occupino l'intera larghezza */\n  margin-top: 20px;\n  padding: 10px;\n}\n\n.btn-primary {\n  background-color: #007bff;\n  color: white;\n  padding: 8px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 80%;\n  max-width: 300px;\n  min-width: 200px;\n  font-size: 13px;\n  transition: background-color 0.3s ease;\n  text-align: center;\n  display: inline-block;\n}\n\n.btn-primary:hover {\n  background-color: #0056b3;\n}\n\n.sidebar {\n  top: 0;\n  width: 250px; /* Imposta la larghezza della sidebar */\n  height: 100vh; /* Imposta l'altezza della sidebar al 100% della viewport */\n  padding: 20px; /* Padding interno */\n  background: linear-gradient(180deg, #212529, #343a40);\n}\n\n.sidebar .nav-link {\n  color: #cfd2d6;\n}\n\n.sidebar .nav-link:hover {\n  background-color: #495057;\n  border-radius: 5px;\n}\n\n.nav-link {\n  padding: 10px 15px; /* Aggiunge padding ai link per migliorarne l'aspetto */\n}\n\n@media (max-width: 767.98px) {\n  .navbar-brand {\n    font-size: 1.5rem;\n  }\n\n  .sidebar {\n    display: none;\n  }\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAgB;;EACrBA,KAAK,EAAC;AAAM;;EAHtBC,GAAA;AAAA;;EAAAA,GAAA;AAAA;mBAAA;;EAAAA,GAAA;EA2BQD,KAAK,EAAC;;;uBA1BZE,mBAAA,CAkCM,OAlCNC,UAkCM,GAjCJC,mBAAA,CAgCM,OAhCNC,UAgCM,GA/BJD,mBAAA,CAA+C,MAA/CE,UAA+C,EAAAC,gBAAA,CAA3BC,KAAA,CAAAC,mBAAmB,kBAC9BD,KAAA,CAAAE,YAAY,I,cAArBR,mBAAA,CAA6C,KAJnDS,UAAA,EAAAJ,gBAAA,CAIgCC,KAAA,CAAAE,YAAY,oBAJ5CE,mBAAA,gBAMMA,mBAAA,0CAA6C,EAClCJ,KAAA,CAAAK,sBAAsB,I,cAAjCX,mBAAA,CAgBM,OAvBZY,UAAA,G,0BAQQV,mBAAA,CAA8D;IAAvDW,GAAG,EAAC;EAAc,GAAC,8BAA4B,sB,gBACtDX,mBAAA,CAME;IALAY,IAAI,EAAC,UAAU;IACfC,EAAE,EAAC,cAAc;IACjBjB,KAAK,EAAC,mBAAmB;IAZnC,uBAAAkB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAamBX,KAAA,CAAAY,WAAW,GAAAD,MAAA;IACpBE,WAAW,EAAC;iDADHb,KAAA,CAAAY,WAAW,E,GAGtBhB,mBAAA,CAMS;IALPJ,KAAK,EAAC,sBAAsB;IAC3BsB,QAAQ,EAAEd,KAAA,CAAAe,SAAS;IACnBC,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KACvB,qBAED,iBAtBRG,UAAA,E,KAAAhB,mBAAA,gBAyBMA,mBAAA,gDAAmD,E,CAG1CJ,KAAA,CAAAe,SAAS,KAAKf,KAAA,CAAAE,YAAY,KAAKF,KAAA,CAAAK,sBAAsB,I,cAF9DX,mBAAA,CAOM,OAPN2B,UAOM,GAHJzB,mBAAA,CAES;IAFDJ,KAAK,EAAC,0BAA0B;IAAEwB,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAI,SAAA,IAAAJ,QAAA,CAAAI,SAAA,IAAAL,IAAA,CAAS;KAAE,mBAE5D,E,KAhCRb,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}