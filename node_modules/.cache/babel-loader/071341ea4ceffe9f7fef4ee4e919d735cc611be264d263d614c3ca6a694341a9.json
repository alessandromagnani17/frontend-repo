{"ast":null,"code":"import { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\nimport { auth } from \"@/firebase\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { sendPasswordResetEmail } from \"firebase/auth\";\nexport default {\n  name: \"UserLogin\",\n  setup() {\n    // Stato del form\n    const form = ref({\n      email: \"\",\n      password: \"\",\n      rememberMe: false\n    });\n\n    // Stato degli errori\n    const errors = ref({\n      email: \"\",\n      password: \"\",\n      general: \"\"\n    });\n    const router = useRouter();\n    const currentStep = ref(1);\n    const loading = ref(false);\n    const showPassword = ref(false);\n    const showMfaStep = ref(false); // Toggle MFA step visibility\n    const qrCodeUrl = ref(\"\"); // Store QR code URL\n    const session = ref(\"\"); // Store MFA session token\n    const mfaCode = ref(\"\"); // Store user input MFA code\n\n    // Funzione per passare allo step successivo\n    const goToNextStep = () => {\n      if (isStepValid(currentStep.value)) {\n        currentStep.value++;\n      }\n    };\n\n    // Funzione per tornare allo step precedente\n    const goToPreviousStep = () => {\n      currentStep.value--;\n    };\n\n    // Funzione per creare un account (stub)\n    const createAccount = () => {\n      router.push({\n        name: \"UserRegister\"\n      });\n    };\n\n    // Funzione per validare il form\n    const validateForm = () => {\n      errors.value = {\n        email: form.value.email ? \"\" : \"Email è richiesta\",\n        password: form.value.password ? \"\" : \"Password è richiesta\"\n      };\n      return Object.values(errors.value).every(error => !error);\n    };\n\n    // Funzione per validare lo step\n    const isStepValid = step => {\n      if (step === 1) {\n        return form.value.email;\n      } else if (step === 2) {\n        return form.value.password;\n      }\n      return false;\n    };\n    const sendPasswordResetEmailHandler = async () => {\n      try {\n        await sendPasswordResetEmail(auth, form.value.email); // Passa l'oggetto auth come primo argomento\n        alert(\"Un'email per reimpostare la password è stata inviata.\");\n      } catch (error) {\n        console.error(\"Errore durante l'invio dell'email di reset:\", error);\n        errors.value.general = \"Errore durante l'invio dell'email di reset.\";\n      }\n    };\n\n    // Funzione per mostrare/nascondere la password\n    const toggleShowPassword = () => {\n      showPassword.value = !showPassword.value;\n    };\n    const onSubmit = async () => {\n      console.log(\"Attempting login...\");\n      if (!validateForm()) return;\n      loading.value = true;\n      try {\n        const userCredential = await signInWithEmailAndPassword(auth, form.value.email, form.value.password);\n        const user = userCredential.user;\n        console.log(\"Login successful:\", user);\n\n        // Ottieni il token ID\n        const token = await user.getIdToken();\n\n        // Invia il token al backend\n        const response = await axios.post(\"http://127.0.0.1:5000/login\", {\n          idToken: token\n        });\n        if (response.data.message === \"Email not verified\") {\n          console.log(\"Email NON verificata\");\n          alert(\"La tua email non è stata verificata. Verifica la tua email prima di accedere.\");\n          return;\n        }\n        if (response.data.message === \"Login successful\") {\n          console.log(\"Setting local storage...\");\n          const userData = response.data.user;\n          console.log(\"User Data:  \", userData);\n          localStorage.setItem(\"authToken\", token);\n          localStorage.setItem(\"username\", user.email);\n\n          // Controlla e setta il ruolo e il doctorId se presenti\n          if (response.data.doctorId) {\n            console.log(\"Setting Doctor ID\");\n            localStorage.setItem(\"doctorId\", response.data.doctorId);\n          } else {\n            console.log(\"No Doctor ID found\");\n          }\n          if (response.data.role) {\n            console.log(\"Setting user role\");\n            localStorage.setItem(\"userRole\", response.data.role);\n          } else {\n            console.log(\"No role found\");\n          }\n          axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n          console.log(\"Redirecting to WelcomePage\");\n          localStorage.setItem(\"userData\", JSON.stringify(userData));\n          axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n          router.push({\n            name: \"WelcomePage\"\n          });\n        }\n      } catch (error) {\n        console.error(\"Errore durante il processo di login:\", error);\n        // Azzera gli errori generali\n        errors.value.general = \"\";\n\n        // Controllo per credenziali non valide\n        if (error.code === \"auth/wrong-password\") {\n          errors.value.general = \"Password errata. Riprova.\";\n        } else if (error.code === \"auth/user-not-found\") {\n          errors.value.general = \"Utente non trovato. Controlla l'email.\";\n        } else if (error.code === \"auth/invalid-credential\") {\n          console.log(\"Inviando l'email per decrementare i tentativi...\" + form.value.email);\n          try {\n            // Invia l'email al server per decrementare i tentativi\n            console.log(\"Email inviata al server:\", form.value.email);\n            const decrementResponse = await axios.post(\"http://127.0.0.1:5000/decrement-attempts\", {\n              email: form.value.email\n            });\n\n            // Aggiorna il numero di tentativi rimanenti\n            const attemptsRemaining = decrementResponse.data.loginAttemptsLeft;\n            errors.value.general = `Password errata. Hai ${attemptsRemaining} tentativi rimanenti.`;\n          } catch (decrementError) {\n            console.error(\"Errore durante il decremento dei tentativi:\", decrementError);\n            errors.value.general = \"Errore nel decremento dei tentativi.\";\n          }\n        } else if (error.code === \"auth/too-many-requests\") {\n          errors.value.general = \"Tentativi di accesso esauriti. Controlla la tua email per il link di reimpostazione della password.\";\n          await sendPasswordResetEmailHandler();\n        } else if (error.response.status === 403) {\n          errors.value.general = \"La tua email non è stata verificata. Verifica la tua email prima di accedere.\";\n        } else {\n          errors.value.general = \"Errore sconosciuto durante il login.\";\n        }\n        console.log(\"Messaggio di errore generale:\", errors.value.general);\n      } finally {\n        loading.value = false;\n      }\n    };\n    return {\n      form,\n      errors,\n      currentStep,\n      loading,\n      showPassword,\n      showMfaStep,\n      qrCodeUrl,\n      session,\n      mfaCode,\n      goToNextStep,\n      goToPreviousStep,\n      createAccount,\n      validateForm,\n      isStepValid,\n      toggleShowPassword,\n      onSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","axios","auth","signInWithEmailAndPassword","sendPasswordResetEmail","name","setup","form","email","password","rememberMe","errors","general","router","currentStep","loading","showPassword","showMfaStep","qrCodeUrl","session","mfaCode","goToNextStep","isStepValid","value","goToPreviousStep","createAccount","push","validateForm","Object","values","every","error","step","sendPasswordResetEmailHandler","alert","console","toggleShowPassword","onSubmit","log","userCredential","user","token","getIdToken","response","post","idToken","data","message","userData","localStorage","setItem","doctorId","role","defaults","headers","common","JSON","stringify","code","decrementResponse","attemptsRemaining","loginAttemptsLeft","decrementError","status"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/UserLogin.vue"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <div class=\"container mt-5\">\n      <div class=\"header\">\n        <button\n          v-if=\"currentStep > 1\"\n          class=\"back-button\"\n          @click=\"goToPreviousStep\"\n        >\n          <img src=\"@/assets/back-icon.svg\" alt=\"Indietro\" class=\"back-icon\" />\n        </button>\n      </div>\n\n      <span class=\"step-title\">Passaggio {{ currentStep }} di 2</span>\n      <h2 class=\"mb-4\">Accedi al tuo Account</h2>\n\n      <!-- Step 1: Login Form -->\n      <form @submit.prevent=\"onSubmit\" v-if=\"!showMfaStep\">\n        <!-- Step 1: Inserisci Email -->\n        <div v-if=\"currentStep === 1\">\n          <div class=\"mb-3\">\n            <label for=\"email\" class=\"form-label\">Email</label>\n            <input\n              id=\"email\"\n              v-model=\"form.email\"\n              type=\"email\"\n              class=\"form-control\"\n              :class=\"{ 'is-invalid': errors.email }\"\n              required\n            />\n            <div class=\"invalid-feedback\">{{ errors.email }}</div>\n          </div>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-next\"\n            @click=\"goToNextStep\"\n            :disabled=\"!isStepValid(currentStep)\"\n          >\n            Avanti\n          </button>\n\n          <div class=\"line-container\">\n            <hr class=\"line\" />\n            <span class=\"or-text\">oppure</span>\n            <hr class=\"line\" />\n          </div>\n\n          <router-link\n            to=\"/register\"\n            class=\"btn btn-light btn-create-account\"\n            @click=\"createAccount('doctor')\"\n          >\n            Registrati come Dottore\n          </router-link>\n\n          <router-link\n            to=\"/register\"\n            class=\"btn btn-light btn-create-account\"\n            @click=\"createAccount('patient')\"\n          >\n            Registrati come Paziente\n          </router-link>\n        </div>\n\n        <!-- Step 2: Inserisci Password -->\n        <div v-if=\"currentStep === 2\">\n          <div class=\"email-display\">\n            <span class=\"email-text\">{{ form.email }}</span>\n            <span class=\"change-text\" @click=\"goToPreviousStep\">Cambia</span>\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"password\" class=\"form-label\">Password</label>\n            <div class=\"input-group\">\n              <input\n                id=\"password\"\n                v-model=\"form.password\"\n                :type=\"showPassword ? 'text' : 'password'\"\n                class=\"form-control\"\n                :class=\"{ 'is-invalid': errors.password }\"\n                required\n              />\n              <button\n                type=\"button\"\n                class=\"btn eye-button\"\n                @click=\"toggleShowPassword\"\n              >\n                <img\n                  :src=\"\n                    showPassword\n                      ? require('@/assets/eye-off.svg')\n                      : require('@/assets/eye-on.svg')\n                  \"\n                  alt=\"Toggle Password Visibility\"\n                  class=\"eye-icon\"\n                />\n              </button>\n            </div>\n            <div v-if=\"errors.general\" class=\"text-danger mt-1\">\n              {{ errors.general }}\n            </div>\n          </div>\n\n          <div class=\"mb-3 form-check\">\n            <input\n              id=\"rememberMe\"\n              v-model=\"form.rememberMe\"\n              type=\"checkbox\"\n              class=\"form-check-input\"\n            />\n            <label for=\"rememberMe\" class=\"form-check-label\">Ricordami</label>\n          </div>\n\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-next\"\n            :disabled=\"loading || !isStepValid(currentStep)\"\n          >\n            <span v-if=\"loading\">Login...</span>\n            <span v-else>Accedi</span>\n          </button>\n\n          <div class=\"line-container\">\n            <hr class=\"line\" />\n            <span class=\"or-text\">oppure</span>\n            <hr class=\"line\" />\n          </div>\n\n          <router-link\n            to=\"/register\"\n            class=\"btn btn-light btn-create-account\"\n            @click=\"createAccount('doctor')\"\n          >\n            Registrati come Dottore\n          </router-link>\n\n          <router-link\n            to=\"/register\"\n            class=\"btn btn-light btn-create-account\"\n            @click=\"createAccount('patient')\"\n          >\n            Registrati come Paziente\n          </router-link>\n\n          <div v-if=\"errors.general\" class=\"invalid-feedback mt-3\">\n            {{ errors.general }}\n          </div>\n        </div>\n      </form>\n    </div>\n\n    <!-- Loading overlay -->\n    <div v-if=\"loading\" class=\"loading-overlay\">\n      <div class=\"loading-icon\">\n        <img src=\"@/assets/loading-icon.svg\" alt=\"Loading...\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\nimport { auth } from \"@/firebase\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { sendPasswordResetEmail } from \"firebase/auth\";\n\nexport default {\n  name: \"UserLogin\",\n  setup() {\n    // Stato del form\n    const form = ref({\n      email: \"\",\n      password: \"\",\n      rememberMe: false,\n    });\n\n    // Stato degli errori\n    const errors = ref({\n      email: \"\",\n      password: \"\",\n      general: \"\",\n    });\n\n    const router = useRouter();\n    const currentStep = ref(1);\n    const loading = ref(false);\n    const showPassword = ref(false);\n    const showMfaStep = ref(false); // Toggle MFA step visibility\n    const qrCodeUrl = ref(\"\"); // Store QR code URL\n    const session = ref(\"\"); // Store MFA session token\n    const mfaCode = ref(\"\"); // Store user input MFA code\n\n    // Funzione per passare allo step successivo\n    const goToNextStep = () => {\n      if (isStepValid(currentStep.value)) {\n        currentStep.value++;\n      }\n    };\n\n    // Funzione per tornare allo step precedente\n    const goToPreviousStep = () => {\n      currentStep.value--;\n    };\n\n    // Funzione per creare un account (stub)\n    const createAccount = () => {\n      router.push({ name: \"UserRegister\" });\n    };\n\n    // Funzione per validare il form\n    const validateForm = () => {\n      errors.value = {\n        email: form.value.email ? \"\" : \"Email è richiesta\",\n        password: form.value.password ? \"\" : \"Password è richiesta\",\n      };\n      return Object.values(errors.value).every((error) => !error);\n    };\n\n    // Funzione per validare lo step\n    const isStepValid = (step) => {\n      if (step === 1) {\n        return form.value.email;\n      } else if (step === 2) {\n        return form.value.password;\n      }\n      return false;\n    };\n\n    const sendPasswordResetEmailHandler = async () => {\n      try {\n        await sendPasswordResetEmail(auth, form.value.email); // Passa l'oggetto auth come primo argomento\n        alert(\"Un'email per reimpostare la password è stata inviata.\");\n      } catch (error) {\n        console.error(\"Errore durante l'invio dell'email di reset:\", error);\n        errors.value.general = \"Errore durante l'invio dell'email di reset.\";\n      }\n    };\n\n    // Funzione per mostrare/nascondere la password\n    const toggleShowPassword = () => {\n      showPassword.value = !showPassword.value;\n    };\n\n    const onSubmit = async () => {\n      console.log(\"Attempting login...\");\n      if (!validateForm()) return;\n      loading.value = true;\n\n      try {\n        const userCredential = await signInWithEmailAndPassword(\n          auth,\n          form.value.email,\n          form.value.password\n        );\n        const user = userCredential.user;\n\n        console.log(\"Login successful:\", user);\n\n        // Ottieni il token ID\n        const token = await user.getIdToken();\n\n        // Invia il token al backend\n        const response = await axios.post(\"http://127.0.0.1:5000/login\", {\n          idToken: token,\n        });\n\n        if (response.data.message === \"Email not verified\") {\n          console.log(\"Email NON verificata\");\n          alert(\n            \"La tua email non è stata verificata. Verifica la tua email prima di accedere.\"\n          );\n          return;\n        }\n\n        if (response.data.message === \"Login successful\") {\n          console.log(\"Setting local storage...\");\n          const userData = response.data.user;\n          console.log(\"User Data:  \", userData);\n          localStorage.setItem(\"authToken\", token);\n          localStorage.setItem(\"username\", user.email);\n\n          // Controlla e setta il ruolo e il doctorId se presenti\n          if (response.data.doctorId) {\n            console.log(\"Setting Doctor ID\");\n            localStorage.setItem(\"doctorId\", response.data.doctorId);\n          } else {\n            console.log(\"No Doctor ID found\");\n          }\n\n          if (response.data.role) {\n            console.log(\"Setting user role\");\n            localStorage.setItem(\"userRole\", response.data.role);\n          } else {\n            console.log(\"No role found\");\n          }\n\n          axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n          console.log(\"Redirecting to WelcomePage\");\n          localStorage.setItem(\"userData\", JSON.stringify(userData));\n\n          axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n          router.push({ name: \"WelcomePage\" });\n        }\n      } catch (error) {\n        console.error(\"Errore durante il processo di login:\", error);\n        // Azzera gli errori generali\n        errors.value.general = \"\";\n\n        // Controllo per credenziali non valide\n        if (error.code === \"auth/wrong-password\") {\n          errors.value.general = \"Password errata. Riprova.\";\n        } else if (error.code === \"auth/user-not-found\") {\n          errors.value.general = \"Utente non trovato. Controlla l'email.\";\n        } else if (error.code === \"auth/invalid-credential\") {\n          console.log(\n            \"Inviando l'email per decrementare i tentativi...\" +\n              form.value.email\n          );\n          try {\n            // Invia l'email al server per decrementare i tentativi\n            console.log(\"Email inviata al server:\", form.value.email);\n            const decrementResponse = await axios.post(\n              \"http://127.0.0.1:5000/decrement-attempts\",\n              {\n                email: form.value.email,\n              }\n            );\n\n            // Aggiorna il numero di tentativi rimanenti\n            const attemptsRemaining = decrementResponse.data.loginAttemptsLeft;\n            errors.value.general = `Password errata. Hai ${attemptsRemaining} tentativi rimanenti.`;\n          } catch (decrementError) {\n            console.error(\n              \"Errore durante il decremento dei tentativi:\",\n              decrementError\n            );\n            errors.value.general = \"Errore nel decremento dei tentativi.\";\n          }\n        } else if (error.code === \"auth/too-many-requests\") {\n          errors.value.general =\n            \"Tentativi di accesso esauriti. Controlla la tua email per il link di reimpostazione della password.\";\n          await sendPasswordResetEmailHandler();\n        } else if (error.response.status === 403) {\n          errors.value.general =\n            \"La tua email non è stata verificata. Verifica la tua email prima di accedere.\";\n        } else {\n          errors.value.general = \"Errore sconosciuto durante il login.\";\n        }\n\n        console.log(\"Messaggio di errore generale:\", errors.value.general);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    return {\n      form,\n      errors,\n      currentStep,\n      loading,\n      showPassword,\n      showMfaStep,\n      qrCodeUrl,\n      session,\n      mfaCode,\n      goToNextStep,\n      goToPreviousStep,\n      createAccount,\n      validateForm,\n      isStepValid,\n      toggleShowPassword,\n      onSubmit,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.login {\n  background: #ffffff; /* Sfondo bianco */\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0);\n}\n\n.container {\n  max-width: 400px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 100px;\n  height: auto;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.back-button {\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  margin-left: -10px;\n}\n\n.back-icon {\n  width: 30px;\n  height: 30px;\n}\n\n.step-title {\n  font-size: 10px;\n  margin-bottom: 10px;\n}\n\nh2 {\n  font-size: 18px;\n  margin-bottom: 30px;\n}\n\n.form-label {\n  font-size: 12px;\n}\n\n.form-control {\n  background: #f2f2f2;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 12px;\n}\n\n.form-check-label {\n  font-size: 12px; /* Dimensione del testo più piccola */\n}\n\n.form-check-input {\n  transform: scale(0.75); /* Riduce la dimensione della checkbox di poco */\n  margin-top: 5px; /* Sposta leggermente la checkbox verso il basso per allineamento */\n}\n\n.input-group {\n  position: relative;\n}\n\n.eye-button {\n  background: transparent;\n  border: 1px solid #ccc;\n  cursor: pointer;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  width: 46px;\n}\n\n.eye-icon {\n  width: 18px;\n  height: 18px;\n  margin: auto;\n}\n\n.btn-next {\n  width: 100%;\n  margin-top: 10px;\n  padding: 0.4rem;\n  cursor: pointer;\n}\n\n.line-container {\n  display: flex;\n  align-items: center;\n  margin: 1rem 0;\n}\n\n.line {\n  flex: 1;\n}\n\n.or-text {\n  margin: 0 1rem;\n  font-size: small;\n}\n\n.btn-create-account {\n  background: #d9d9d9; /* Colore grigio chiaro */\n  color: black; /* Colore del testo */\n  width: 100%;\n  margin-top: 15px; /* Spazio sopra il pulsante */\n  padding: 0.4rem; /* Ridotto per i pulsanti, più corto verticalmente */\n  font-size: 13px; /* Dimensione del testo più piccola */\n}\n\n.btn-next {\n  font-size: 13px; /* Dimensione del testo più piccola per il pulsante \"Avanti\" */\n}\n\n.email-display {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.email-text {\n  font-size: 14px; /* Dimensione testo per l'email */\n  color: black; /* Colore del testo */\n}\n\n.change-text {\n  font-size: 14px; /* Dimensione testo per \"Cambia\" */\n  color: black; /* Colore del testo */\n  text-decoration: underline; /* Sottolinea il testo */\n  cursor: pointer; /* Aggiunge il cursore pointer */\n}\n\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.loading-icon {\n  width: 50px;\n  height: 50px;\n}\n\n.text-danger {\n  font-size: 0.8rem; /* Font più piccolo (puoi modificarlo a piacere) */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}