{"ast":null,"code":"import { getPatientsFromDoctor, predictImage, uploadToDataset } from \"@/services/api-service\";\nexport default {\n  data() {\n    return {\n      selectedFile: null,\n      selectedFileName: null,\n      predictedClass: null,\n      imagePreview: null,\n      gradcamImage: null,\n      showNewPredictionButton: false,\n      showPredictButton: true,\n      showUploadSection: true,\n      patients: [],\n      selectedPatient: \"\",\n      selectedPatientInfo: {\n        name: \"\",\n        surname: \"\",\n        userId: \"\"\n      },\n      isLoading: true,\n      showMainImagePreview: true,\n      selectedSide: false,\n      // False = Left ||| True = Right\n      showKneeSide: false,\n      selectedRating: 0,\n      starEmpty: require(\"@/assets/star-empty.svg\"),\n      starFilled: require(\"@/assets/star-filled.svg\"),\n      showThankYouMessage: false,\n      starsHidden: false,\n      loadingPredict: false\n    };\n  },\n  async created() {\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\n    const userUid = userData.doctorID;\n    this.patients = await getPatientsFromDoctor(userUid);\n    this.isLoading = false;\n  },\n  methods: {\n    goToActivityCalendar() {\n      this.$router.push(\"/activity-calendar\"); // Reindirizza alla pagina del calendario\n    },\n    resetPrediction() {\n      this.selectedFile = null;\n      this.selectedFileName = null;\n      this.predictedClass = null;\n      this.imagePreview = null;\n      this.gradcamImage = null;\n      this.showNewPredictionButton = false;\n      this.showPredictButton = true;\n      this.showUploadSection = true;\n      this.showMainImagePreview = true;\n      this.selectedPatient = \"\";\n      this.selectedPatientInfo = {\n        name: \"\",\n        surname: \"\",\n        userId: \"\"\n      };\n      this.showKneeSide = false;\n      this.selectedSide = false;\n      this.showThankYouMessage = false; // Nascondi il messaggio di ringraziamento\n      this.starsHidden = false; // Mostra di nuovo le stelline\n      this.selectedRating = 0; // Reimposta il rating selezionato\n      if (this.$refs.fileInput) {\n        this.$refs.fileInput.value = \"\";\n      }\n    },\n    setSide(side) {\n      this.selectedSide = side;\n    },\n    selectFile() {\n      this.$refs.fileInput.click();\n    },\n    onFileChange(event) {\n      this.showKneeSide = true;\n      this.selectedFile = event.target.files[0];\n      this.selectedFileName = this.selectedFile.name;\n      this.imagePreview = URL.createObjectURL(this.selectedFile);\n    },\n    async submitImage() {\n      if (!this.selectedFile) return;\n      this.loadingPredict = true; // Avvia il caricamento\n      const formData = new FormData();\n      formData.append(\"file\", this.selectedFile);\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      formData.append(\"userData\", JSON.stringify(userData));\n      formData.append(\"selectedPatientID\", this.selectedPatient);\n      formData.append(\"selectedSide\", this.selectedSide ? \"Right\" : \"Left\");\n      try {\n        const response = await predictImage(formData);\n        this.predictedClassMessage = response.predicted_class;\n        // Estrazione numero dal messaggio\n        const classMatch = this.predictedClassMessage.match(/\\d+/);\n        this.predictedClass = classMatch ? parseInt(classMatch[0], 10) : null;\n        console.log(\"Predicted Class (number):\", this.predictedClass);\n        console.log(\"Predicted Class (message):\", this.predictedClassMessage);\n        this.gradcamImage = response.gradcam_image;\n        this.showNewPredictionButton = true;\n        this.showPredictButton = false;\n        this.showUploadSection = false;\n        this.showMainImagePreview = false;\n        this.showKneeSide = false;\n      } catch (error) {\n        console.error(\"Errore durante la previsione:\", error);\n      } finally {\n        this.loadingPredict = false; // Ferma il caricamento\n      }\n    },\n    onPatientChange() {\n      const patient = this.patients.find(p => p.userId === this.selectedPatient);\n      this.selectedPatientInfo = patient ? {\n        name: patient.name,\n        surname: patient.family_name,\n        userId: patient.userId\n      } : {\n        name: \"\",\n        surname: \"\",\n        userId: \"\"\n      };\n      this.showPredictButton = true;\n      this.showKneeSide = false;\n    },\n    changePatient() {\n      this.selectedPatient = \"\";\n      this.selectedPatientInfo = {\n        name: \"\",\n        surname: \"\",\n        userId: \"\"\n      };\n      this.selectedFile = null;\n      this.selectedFileName = null;\n      this.imagePreview = null;\n      if (this.$refs.fileInput) {\n        this.$refs.fileInput.value = \"\";\n      }\n      this.showPredictButton = false;\n      this.showUploadSection = true;\n    },\n    handleStarClick(index) {\n      this.selectedRating = index; // Imposta il rating selezionato\n\n      if (index === 5) {\n        // Carica la radiografia nella cartella \"dataset\"\n        const formData = new FormData();\n        formData.append(\"file\", this.selectedFile);\n        formData.append(\"patientID\", this.selectedPatient);\n        formData.append(\"side\", this.selectedSide ? \"Right\" : \"Left\");\n        uploadToDataset(formData).catch(error => console.error(\"Errore durante il caricamento del file:\", error));\n      }\n\n      // Nascondi le stelline con l'animazione\n      setTimeout(() => {\n        this.starsHidden = true;\n      }, 300);\n    },\n    showThankYou() {\n      this.showThankYouMessage = true;\n    },\n    // Funzione per ottenere l'immagine corretta in base al rating\n    getStarImage(index) {\n      // Se l'indice della stellina è minore o uguale al rating, è piena\n      return index <= this.selectedRating ? this.starFilled : this.starEmpty;\n    }\n  }\n};","map":{"version":3,"names":["getPatientsFromDoctor","predictImage","uploadToDataset","data","selectedFile","selectedFileName","predictedClass","imagePreview","gradcamImage","showNewPredictionButton","showPredictButton","showUploadSection","patients","selectedPatient","selectedPatientInfo","name","surname","userId","isLoading","showMainImagePreview","selectedSide","showKneeSide","selectedRating","starEmpty","require","starFilled","showThankYouMessage","starsHidden","loadingPredict","created","userData","JSON","parse","localStorage","getItem","userUid","doctorID","methods","goToActivityCalendar","$router","push","resetPrediction","$refs","fileInput","value","setSide","side","selectFile","click","onFileChange","event","target","files","URL","createObjectURL","submitImage","formData","FormData","append","stringify","response","predictedClassMessage","predicted_class","classMatch","match","parseInt","console","log","gradcam_image","error","onPatientChange","patient","find","p","family_name","changePatient","handleStarClick","index","catch","setTimeout","showThankYou","getStarImage"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\PredictRadiograph.vue"],"sourcesContent":["<template>\r\n  <div class=\"welcome\">\r\n    <div class=\"container mt-5\">\r\n      <h1 v-if=\"showUploadSection\" class=\"carica-radiografia\">\r\n        Carica una radiografia\r\n      </h1>\r\n      <div v-if=\"isLoading\" class=\"alert alert-info small-text\">\r\n        Caricamento...\r\n      </div>\r\n      <div v-else>\r\n        <div\r\n          v-if=\"patients.length === 0\"\r\n          class=\"alert alert-warning small-text\"\r\n        >\r\n          Non hai ancora nessun paziente associato.\r\n        </div>\r\n        <div v-else>\r\n          <div class=\"select-container mb-4\">\r\n            <select\r\n              v-if=\"patients.length > 0 && !selectedPatient\"\r\n              v-model=\"selectedPatient\"\r\n              @change=\"onPatientChange\"\r\n              class=\"form-select custom-select small-text\"\r\n            >\r\n              <option value=\"\" disabled selected>Seleziona un paziente</option>\r\n              <option\r\n                v-for=\"patient in patients\"\r\n                :key=\"patient.userId\"\r\n                :value=\"patient.userId\"\r\n              >\r\n                {{ patient.name }} {{ patient.family_name }} (ID:\r\n                {{ patient.userId }})\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div\r\n            v-if=\"selectedPatientInfo.name.length > 0 && showMainImagePreview\"\r\n            class=\"mt-2\"\r\n          >\r\n            <div class=\"patient-info-container small-text\">\r\n              <span>\r\n                Utente selezionato:\r\n                <strong>\r\n                  {{ selectedPatientInfo.name }}\r\n                  {{ selectedPatientInfo.surname }} <br />\r\n                </strong>\r\n                (ID: {{ selectedPatientInfo.userId }})\r\n              </span>\r\n              <!-- Pulsante Cambia -->\r\n              <span class=\"change-text\" @click=\"changePatient\">Cambia</span>\r\n            </div>\r\n          </div>\r\n          <div><h5></h5></div>\r\n          <div v-if=\"selectedPatient\">\r\n            <input\r\n              v-if=\"showUploadSection\"\r\n              type=\"file\"\r\n              ref=\"fileInput\"\r\n              @change=\"onFileChange\"\r\n              accept=\"image/*\"\r\n              style=\"display: none\"\r\n            />\r\n            <button\r\n              v-if=\"showUploadSection\"\r\n              @click=\"selectFile\"\r\n              class=\"btn btn-light btn-select\"\r\n            >\r\n              Seleziona file\r\n            </button>\r\n            <div\r\n              v-if=\"imagePreview && selectedPatient && showMainImagePreview\"\r\n              class=\"mt-3 img-preview-container\"\r\n            >\r\n              <img\r\n                :src=\"imagePreview\"\r\n                alt=\"Anteprima immagine\"\r\n                class=\"img-preview\"\r\n              />\r\n            </div>\r\n            <div v-if=\"showKneeSide\" class=\"button-cover\">\r\n              <div v-if=\"loadingPredict\" class=\"loading-overlay\"></div>\r\n\r\n              <div\r\n                class=\"buttonSide r\"\r\n                id=\"button-1\"\r\n                :class=\"{ active: selectedSide, inactive: !selectedSide }\"\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  v-model=\"selectedSide\"\r\n                  @change=\"updateSelectedSide\"\r\n                  class=\"checkbox\"\r\n                />\r\n                <div class=\"knobs\"></div>\r\n                <div class=\"layer\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"!showMainImagePreview\" class=\"mt-3\">\r\n        <h1>Risultati della predizione</h1>\r\n      </div>\r\n\r\n      <div v-if=\"imagePreview && selectedPatient\">\r\n        <button\r\n          v-if=\"showPredictButton\"\r\n          @click=\"submitImage\"\r\n          class=\"btn-upload\"\r\n          :disabled=\"loadingPredict\"\r\n        >\r\n          <span v-if=\"loadingPredict\">Caricamento...</span>\r\n          <span v-else>Predici osteoartrite</span>\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Loading overlay per predizione -->\r\n      <div v-if=\"loadingPredict\" class=\"loading-overlay\">\r\n        <div class=\"loading-icon\">\r\n          <img src=\"@/assets/loading-icon.svg\" alt=\"Loading...\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"predictedClass !== null\" class=\"mt-4\">\r\n        <div class=\"card prediction-card mb-3\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title small-text\">\r\n              Utente: {{ selectedPatientInfo.name }}\r\n              {{ selectedPatientInfo.surname }} <br />\r\n              (ID: {{ selectedPatientInfo.userId }})\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6 col-12\">\r\n            <div class=\"card\">\r\n              <img\r\n                :src=\"imagePreview\"\r\n                class=\"card-img-top\"\r\n                alt=\"Anteprima immagine\"\r\n              />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title small-text\">Radiografia Originale</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6 col-12\">\r\n            <div class=\"card\">\r\n              <img\r\n                :src=\"gradcamImage\"\r\n                class=\"card-img-top\"\r\n                alt=\"Grad-CAM Image\"\r\n              />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title small-text\">Applicazione Grad-CAM</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card prediction-card mb-3\">\r\n          <div class=\"card-body\">\r\n            <!-- Mostra il messaggio completo -->\r\n            <h5 class=\"card-title small-text\">\r\n              {{ predictedClassMessage }} ({{\r\n                selectedSide ? \"Ginocchio destro\" : \"Ginocchio sinistro\"\r\n              }})\r\n            </h5>\r\n            <!-- Mostra la scritta in rosso se il grado è 4 o 5 -->\r\n            <p\r\n              v-if=\"predictedClass === 4 || predictedClass === 5\"\r\n              class=\"text-danger\"\r\n            >\r\n              È necessaria un’operazione protesica per il paziente.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"line-container\">\r\n          <div class=\"line\"></div>\r\n        </div>\r\n        <div class=\"mt-3\">\r\n          <h5>Valuta la predizione</h5>\r\n        </div>\r\n\r\n        <!-- Stelle -->\r\n        <transition name=\"fade-out-stars\" @after-leave=\"showThankYou\">\r\n          <div class=\"stars\" v-if=\"!starsHidden\">\r\n            <img\r\n              v-for=\"index in 5\"\r\n              :key=\"index\"\r\n              :src=\"getStarImage(index)\"\r\n              @click=\"handleStarClick(index)\"\r\n              alt=\"Star\"\r\n              class=\"star\"\r\n            />\r\n          </div>\r\n        </transition>\r\n        <!-- Messaggio di ringraziamento -->\r\n        <transition name=\"fade-in-thank-you\">\r\n          <div v-if=\"showThankYouMessage\" class=\"small-text mt-2\">\r\n            Grazie per la recensione!\r\n          </div>\r\n        </transition>\r\n        <div\r\n          v-if=\"showNewPredictionButton\"\r\n          class=\"mt-4 d-flex flex-column flex-md-row justify-content-center align-items-center gap-2\"\r\n        >\r\n          <button\r\n            @click=\"resetPrediction\"\r\n            class=\"btn btn-light btn-new-prediction\"\r\n          >\r\n            Esegui nuova predizione\r\n          </button>\r\n          <!-- Pulsante Pianifica Operazione -->\r\n          <button\r\n            @click=\"goToActivityCalendar\"\r\n            class=\"btn btn-primary btn-upload\"\r\n          >\r\n            Pianifica Operazione\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getPatientsFromDoctor,\r\n  predictImage,\r\n  uploadToDataset,\r\n} from \"@/services/api-service\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedFile: null,\r\n      selectedFileName: null,\r\n      predictedClass: null,\r\n      imagePreview: null,\r\n      gradcamImage: null,\r\n      showNewPredictionButton: false,\r\n      showPredictButton: true,\r\n      showUploadSection: true,\r\n      patients: [],\r\n      selectedPatient: \"\",\r\n      selectedPatientInfo: { name: \"\", surname: \"\", userId: \"\" },\r\n      isLoading: true,\r\n      showMainImagePreview: true,\r\n      selectedSide: false, // False = Left ||| True = Right\r\n      showKneeSide: false,\r\n      selectedRating: 0,\r\n      starEmpty: require(\"@/assets/star-empty.svg\"),\r\n      starFilled: require(\"@/assets/star-filled.svg\"),\r\n      showThankYouMessage: false,\r\n      starsHidden: false,\r\n      loadingPredict: false,\r\n    };\r\n  },\r\n  async created() {\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    const userUid = userData.doctorID;\r\n    this.patients = await getPatientsFromDoctor(userUid);\r\n    this.isLoading = false;\r\n  },\r\n  methods: {\r\n    goToActivityCalendar() {\r\n      this.$router.push(\"/activity-calendar\"); // Reindirizza alla pagina del calendario\r\n    },\r\n    resetPrediction() {\r\n      this.selectedFile = null;\r\n      this.selectedFileName = null;\r\n      this.predictedClass = null;\r\n      this.imagePreview = null;\r\n      this.gradcamImage = null;\r\n      this.showNewPredictionButton = false;\r\n      this.showPredictButton = true;\r\n      this.showUploadSection = true;\r\n      this.showMainImagePreview = true;\r\n      this.selectedPatient = \"\";\r\n      this.selectedPatientInfo = { name: \"\", surname: \"\", userId: \"\" };\r\n      this.showKneeSide = false;\r\n      this.selectedSide = false;\r\n      this.showThankYouMessage = false; // Nascondi il messaggio di ringraziamento\r\n      this.starsHidden = false; // Mostra di nuovo le stelline\r\n      this.selectedRating = 0; // Reimposta il rating selezionato\r\n      if (this.$refs.fileInput) {\r\n        this.$refs.fileInput.value = \"\";\r\n      }\r\n    },\r\n    setSide(side) {\r\n      this.selectedSide = side;\r\n    },\r\n    selectFile() {\r\n      this.$refs.fileInput.click();\r\n    },\r\n    onFileChange(event) {\r\n      this.showKneeSide = true;\r\n      this.selectedFile = event.target.files[0];\r\n      this.selectedFileName = this.selectedFile.name;\r\n      this.imagePreview = URL.createObjectURL(this.selectedFile);\r\n    },\r\n    async submitImage() {\r\n      if (!this.selectedFile) return;\r\n\r\n      this.loadingPredict = true; // Avvia il caricamento\r\n      const formData = new FormData();\r\n      formData.append(\"file\", this.selectedFile);\r\n\r\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n      formData.append(\"userData\", JSON.stringify(userData));\r\n      formData.append(\"selectedPatientID\", this.selectedPatient);\r\n      formData.append(\"selectedSide\", this.selectedSide ? \"Right\" : \"Left\");\r\n\r\n      try {\r\n        const response = await predictImage(formData);\r\n\r\n        this.predictedClassMessage = response.predicted_class;\r\n        // Estrazione numero dal messaggio\r\n        const classMatch = this.predictedClassMessage.match(/\\d+/);\r\n        this.predictedClass = classMatch ? parseInt(classMatch[0], 10) : null;\r\n\r\n        console.log(\"Predicted Class (number):\", this.predictedClass);\r\n        console.log(\"Predicted Class (message):\", this.predictedClassMessage);\r\n\r\n        this.gradcamImage = response.gradcam_image;\r\n        this.showNewPredictionButton = true;\r\n        this.showPredictButton = false;\r\n        this.showUploadSection = false;\r\n        this.showMainImagePreview = false;\r\n        this.showKneeSide = false;\r\n      } catch (error) {\r\n        console.error(\"Errore durante la previsione:\", error);\r\n      } finally {\r\n        this.loadingPredict = false; // Ferma il caricamento\r\n      }\r\n    },\r\n    onPatientChange() {\r\n      const patient = this.patients.find(\r\n        (p) => p.userId === this.selectedPatient\r\n      );\r\n      this.selectedPatientInfo = patient\r\n        ? {\r\n            name: patient.name,\r\n            surname: patient.family_name,\r\n            userId: patient.userId,\r\n          }\r\n        : { name: \"\", surname: \"\", userId: \"\" };\r\n\r\n      this.showPredictButton = true;\r\n      this.showKneeSide = false;\r\n    },\r\n    changePatient() {\r\n      this.selectedPatient = \"\";\r\n      this.selectedPatientInfo = { name: \"\", surname: \"\", userId: \"\" };\r\n      this.selectedFile = null;\r\n      this.selectedFileName = null;\r\n      this.imagePreview = null;\r\n      if (this.$refs.fileInput) {\r\n        this.$refs.fileInput.value = \"\";\r\n      }\r\n      this.showPredictButton = false;\r\n      this.showUploadSection = true;\r\n    },\r\n    handleStarClick(index) {\r\n      this.selectedRating = index; // Imposta il rating selezionato\r\n\r\n      if (index === 5) {\r\n        // Carica la radiografia nella cartella \"dataset\"\r\n        const formData = new FormData();\r\n        formData.append(\"file\", this.selectedFile);\r\n        formData.append(\"patientID\", this.selectedPatient);\r\n        formData.append(\"side\", this.selectedSide ? \"Right\" : \"Left\");\r\n\r\n        uploadToDataset(formData).catch((error) =>\r\n          console.error(\"Errore durante il caricamento del file:\", error)\r\n        );\r\n      }\r\n\r\n      // Nascondi le stelline con l'animazione\r\n      setTimeout(() => {\r\n        this.starsHidden = true;\r\n      }, 300);\r\n    },\r\n    showThankYou() {\r\n      this.showThankYouMessage = true;\r\n    },\r\n    // Funzione per ottenere l'immagine corretta in base al rating\r\n    getStarImage(index) {\r\n      // Se l'indice della stellina è minore o uguale al rating, è piena\r\n      return index <= this.selectedRating ? this.starFilled : this.starEmpty;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.welcome {\r\n  background: #ffffff; /* Sfondo bianco */\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center; /* Centra verticalmente */\r\n  justify-content: center; /* Centra orizzontalmente */\r\n}\r\n\r\n.container {\r\n  max-width: 80%;\r\n  padding: 5%;\r\n  border-radius: 15px;\r\n  background: #ffffff;\r\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\r\n  margin-top: 10%;\r\n  height: auto;\r\n  text-align: center;\r\n  flex-grow: 1;\r\n}\r\n\r\nh1 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.img-preview-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.img-preview {\r\n  width: 50vw;\r\n  max-width: 100%;\r\n  height: auto;\r\n  max-height: 50vh;\r\n  object-fit: contain;\r\n  margin-top: 15px;\r\n}\r\n\r\n@media (max-width: 767px) {\r\n  .img-preview {\r\n    width: 60vw;\r\n    max-height: 50vh;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n  .img-preview-container {\r\n    padding: 10px;\r\n  }\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-bottom: 20px;\r\n  height: 10%;\r\n}\r\n\r\n.card {\r\n  flex: 1 1 45%;\r\n  margin: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-img-top {\r\n  border-radius: 0.5rem;\r\n  max-height: 50vh;\r\n  object-fit: cover;\r\n}\r\n\r\n.card-body {\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n}\r\n\r\n.patient-info-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 3vw;\r\n  width: 100%;\r\n}\r\n\r\n.change-text {\r\n  font-size: 14px;\r\n  color: black;\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-select {\r\n  background: #d9d9d9;\r\n  color: black;\r\n  width: 40%;\r\n  margin-top: 10px;\r\n  padding: 0.4rem;\r\n  font-size: 13px;\r\n}\r\n\r\n.btn-upload,\r\n.btn-new-prediction {\r\n  margin: 0; /* Rimuove eventuali margini inutili */\r\n  padding: 8px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  width: 40%; /* Imposta larghezza al 100% del contenitore */\r\n  max-width: 300px; /* Imposta una larghezza massima */\r\n  min-width: 100px; /* Imposta una larghezza minima */\r\n  font-size: 13px;\r\n  transition: background-color 0.3s ease;\r\n  text-align: center;\r\n}\r\n\r\n.btn-upload {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.btn-upload:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.btn-new-prediction {\r\n  background: #d9d9d9; /* Colore grigio chiaro */\r\n  color: black; /* Colore del testo */\r\n}\r\n\r\n.btn-new-prediction:hover {\r\n  background: #bfbfbf;\r\n}\r\n\r\n/* Aggiungi un po' di spazio tra i pulsanti */\r\n.gap-2 {\r\n  gap: 10px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  /* Per schermi piccoli, impila i pulsanti verticalmente */\r\n  .flex-md-row {\r\n    flex-direction: column;\r\n  }\r\n}\r\n\r\n.small-text {\r\n  font-size: 13px;\r\n}\r\n\r\n.select-container {\r\n  margin-top: 18px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.form-select {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n  transition: border-color 0.2s;\r\n}\r\n\r\n.form-select:focus {\r\n  border-color: #007bff;\r\n  outline: none;\r\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n.custom-select {\r\n  max-width: 80%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.button-cover {\r\n  height: 85%;\r\n  width: 40%; /* Puoi regolare la larghezza come desideri */\r\n  margin: 0px auto; /* Centrato orizzontalmente */\r\n  margin-top: 20px;\r\n  background-color: #fff;\r\n  display: block; /* Non usare flexbox qui, ma blocco per evitare allineamenti strani */\r\n}\r\n\r\n.buttonSide {\r\n  position: relative;\r\n  top: 50%;\r\n  width: 100%; /* Mantieni la larghezza al 100% del contenitore */\r\n  height: 36px;\r\n  margin: 0 auto; /* Questo forza il centramento orizzontale */\r\n  overflow: hidden;\r\n}\r\n\r\n.checkbox {\r\n  position: relative;\r\n  width: 350%; /* Imposta la larghezza del checkbox a 100% */\r\n  height: 60%;\r\n  padding: 0;\r\n  margin-bottom: 4vh;\r\n  margin-left: 5vh;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  z-index: 3;\r\n}\r\n\r\n.knobs {\r\n  z-index: 2;\r\n}\r\n\r\n.layer {\r\n  width: 100%;\r\n  background-color: #ebf7fc;\r\n  transition: 0.3s ease all;\r\n  z-index: 1;\r\n}\r\n\r\n#button-1 {\r\n  position: relative; /* Posizione relativa per il contenitore */\r\n  width: 100%; /* Si adatta alla larghezza del contenitore */\r\n  height: 100px; /* Imposta l'altezza del container */\r\n  display: flex;\r\n  justify-content: center; /* Centra orizzontalmente i pulsanti */\r\n  align-items: center; /* Centra verticalmente i pulsanti */\r\n  z-index: 11;\r\n}\r\n\r\n/* Stili esistenti per i pulsanti Left/Right */\r\n#button-1 .knobs:before,\r\n#button-1 .knobs:after {\r\n  position: absolute;\r\n  width: 60%; /* Inizialmente i pulsanti avranno una larghezza più ampia */\r\n  height: 30px;\r\n  color: white;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  line-height: 1;\r\n  padding: 9px 4px;\r\n  border-radius: 5px;\r\n  transition: 0.3s cubic-bezier(0.18, 0.89, 0.35, 1.15) all, opacity 0.3s ease,\r\n    z-index 0.3s ease, transform 0.3s ease;\r\n  left: 50%; /* Allinea al centro orizzontale */\r\n  transform: translateX(-50%); /* Centra perfettamente al centro */\r\n}\r\n\r\n#button-1 .knobs:before {\r\n  content: \"Left\";\r\n  top: 0; /* Pulsante Left in cima */\r\n  background-color: #03a9f4;\r\n  opacity: 1;\r\n  z-index: 2; /* Priorità superiore */\r\n  transform: scale(1); /* Pulsante Left alla dimensione normale */\r\n  left: 50%;\r\n  transform: translateX(-50%); /* Centra entrambi i pulsanti */\r\n}\r\n\r\n#button-1 .knobs:after {\r\n  content: \"Right\";\r\n  top: 30px; /* Pulsante Right sotto */\r\n  background-color: #f44336;\r\n  opacity: 0.5;\r\n  z-index: 1; /* Priorità inferiore */\r\n  transform: scale(0.8); /* Pulsante Right non selezionato più piccolo */\r\n  left: 50%; /* Allinea al centro orizzontale */\r\n  transform: translateX(-50%) scale(0.8); /* Centra e scala il pulsante */\r\n}\r\n\r\n/* Quando il checkbox è selezionato, cambia la posizione e la dimensione */\r\n#button-1 .checkbox:checked + .knobs:before {\r\n  top: 30px; /* Quando selezionato, si sposta in basso */\r\n  opacity: 0.5;\r\n  z-index: 1;\r\n  transform: translateX(-50%) scale(0.8); /* Il pulsante Left diventa più piccolo */\r\n}\r\n\r\n#button-1 .checkbox:checked + .knobs:after {\r\n  top: 0; /* Quando selezionato, il pulsante Right va sopra */\r\n  opacity: 1;\r\n  z-index: 2;\r\n  transform: translateX(-50%) scale(1); /* Il pulsante Right diventa più grande */\r\n}\r\n\r\n#button-1 .layer {\r\n  width: 100%;\r\n  background-color: #ebf7fc;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n#button-1 .checkbox:checked ~ .layer {\r\n  background-color: #fcebeb;\r\n}\r\n\r\n/* Media Queries per schermi più piccoli */\r\n@media (max-width: 767px) {\r\n  #button-1 .knobs:before,\r\n  #button-1 .knobs:after {\r\n    width: 80%; /* Più larghi su schermi piccoli per una buona visibilità */\r\n    font-size: 12px; /* Ridurre la dimensione del font */\r\n    padding: 6px 3px; /* Ridurre il padding per schermi stretti */\r\n  }\r\n\r\n  /* Posizionamento dei pulsanti su schermi piccoli */\r\n  #button-1 .knobs:before {\r\n    top: 0; /* Pulsante Left in cima */\r\n  }\r\n\r\n  #button-1 .knobs:after {\r\n    top: 60px; /* Pulsante Right un po' più sotto */\r\n  }\r\n\r\n  /* Quando il checkbox è selezionato, cambia la posizione e la dimensione */\r\n  #button-1 .checkbox:checked + .knobs:before {\r\n    top: 60px; /* \"Left\" scende sotto */\r\n    opacity: 0.5;\r\n    z-index: 1;\r\n    transform: translateX(-50%) scale(0.8); /* Diventa più piccolo */\r\n  }\r\n\r\n  #button-1 .checkbox:checked + .knobs:after {\r\n    top: 0; /* \"Right\" sale sopra */\r\n    opacity: 1;\r\n    z-index: 2;\r\n    transform: translateX(-50%) scale(1); /* Diventa più grande */\r\n  }\r\n\r\n  #button-1 .layer {\r\n    background-color: #fcebeb;\r\n  }\r\n}\r\n\r\n.loading-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(255, 255, 255, 0.6);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 9999; /* Assicurati che l'overlay sia sopra tutto */\r\n}\r\n\r\n.loading-icon {\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n.line-container {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 2rem 0;\r\n}\r\n\r\n.line {\r\n  width: 90%;\r\n  height: 1px;\r\n  background-color: #ccc;\r\n  margin: 0 auto;\r\n}\r\n\r\n.star-rating {\r\n  text-align: center;\r\n}\r\n\r\n.stars {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.star {\r\n  width: 30px; /* Riduci la larghezza */\r\n  height: 30px; /* Riduci l'altezza */\r\n  margin: 0 4px; /* Distanza tra le stelline */\r\n  cursor: pointer;\r\n}\r\n\r\n.fade-out-stars-enter-active,\r\n.fade-out-stars-leave-active {\r\n  transition: opacity 0.5s ease, transform 0.5s ease;\r\n}\r\n\r\n.fade-out-stars-enter-from,\r\n.fade-out-stars-leave-to {\r\n  opacity: 0;\r\n  transform: scale(0.8);\r\n}\r\n\r\n.fade-out-stars-leave-active {\r\n  opacity: 0;\r\n}\r\n\r\n.fade-in-thank-you-enter-active {\r\n  transition: opacity 0.8s ease;\r\n}\r\n.fade-in-thank-you-enter-from {\r\n  opacity: 0;\r\n}\r\n.fade-in-thank-you-enter-to {\r\n  opacity: 1;\r\n}\r\n\r\nh1.carica-radiografia {\r\n  font-size: 18px; /* Stessa dimensione del testo di \"Elenco Pazienti\" */\r\n  font-family: inherit; /* Assicura che usi lo stesso font ereditato dal contesto */\r\n  font-weight: normal; /* Mantenere il peso del font uguale */\r\n  margin-bottom: 20px; /* Margine inferiore uguale per allineamento */\r\n}\r\n\r\n.btn-change-patient {\r\n  background: #d9d9d9; /* Colore grigio chiaro */\r\n  color: black; /* Colore del testo */\r\n  width: 40%; /* Larghezza al 100% */\r\n  margin-top: 15px; /* Spazio sopra il pulsante */\r\n  padding: 0.4rem; /* Ridotto per i pulsanti, più corto verticalmente */\r\n  font-size: 13px; /* Dimensione del testo più piccola */\r\n  border: none; /* Nessun bordo */\r\n  border-radius: 5px; /* Angoli arrotondati */\r\n  cursor: pointer; /* Puntatore del mouse per il clic */\r\n  transition: background-color 0.3s ease; /* Transizione al passaggio del mouse */\r\n}\r\n\r\n.btn-change-patient:hover {\r\n  background-color: #bfbfbf; /* Colore grigio più scuro al passaggio del mouse */\r\n}\r\n</style>\r\n"],"mappings":"AAmOA,SACEA,qBAAqB,EACrBC,YAAY,EACZC,eAAe,QACV,wBAAwB;AAE/B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,IAAI;MAClBC,gBAAgB,EAAE,IAAI;MACtBC,cAAc,EAAE,IAAI;MACpBC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE,IAAI;MAClBC,uBAAuB,EAAE,KAAK;MAC9BC,iBAAiB,EAAE,IAAI;MACvBC,iBAAiB,EAAE,IAAI;MACvBC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,mBAAmB,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAC;MAC1DC,SAAS,EAAE,IAAI;MACfC,oBAAoB,EAAE,IAAI;MAC1BC,YAAY,EAAE,KAAK;MAAE;MACrBC,YAAY,EAAE,KAAK;MACnBC,cAAc,EAAE,CAAC;MACjBC,SAAS,EAAEC,OAAO,CAAC,yBAAyB,CAAC;MAC7CC,UAAU,EAAED,OAAO,CAAC,0BAA0B,CAAC;MAC/CE,mBAAmB,EAAE,KAAK;MAC1BC,WAAW,EAAE,KAAK;MAClBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC7D,MAAMC,OAAM,GAAIL,QAAQ,CAACM,QAAQ;IACjC,IAAI,CAACxB,QAAO,GAAI,MAAMZ,qBAAqB,CAACmC,OAAO,CAAC;IACpD,IAAI,CAACjB,SAAQ,GAAI,KAAK;EACxB,CAAC;EACDmB,OAAO,EAAE;IACPC,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,oBAAoB,CAAC,EAAE;IAC3C,CAAC;IACDC,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACrC,YAAW,GAAI,IAAI;MACxB,IAAI,CAACC,gBAAe,GAAI,IAAI;MAC5B,IAAI,CAACC,cAAa,GAAI,IAAI;MAC1B,IAAI,CAACC,YAAW,GAAI,IAAI;MACxB,IAAI,CAACC,YAAW,GAAI,IAAI;MACxB,IAAI,CAACC,uBAAsB,GAAI,KAAK;MACpC,IAAI,CAACC,iBAAgB,GAAI,IAAI;MAC7B,IAAI,CAACC,iBAAgB,GAAI,IAAI;MAC7B,IAAI,CAACQ,oBAAmB,GAAI,IAAI;MAChC,IAAI,CAACN,eAAc,GAAI,EAAE;MACzB,IAAI,CAACC,mBAAkB,GAAI;QAAEC,IAAI,EAAE,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAC;MAChE,IAAI,CAACI,YAAW,GAAI,KAAK;MACzB,IAAI,CAACD,YAAW,GAAI,KAAK;MACzB,IAAI,CAACM,mBAAkB,GAAI,KAAK,EAAE;MAClC,IAAI,CAACC,WAAU,GAAI,KAAK,EAAE;MAC1B,IAAI,CAACL,cAAa,GAAI,CAAC,EAAE;MACzB,IAAI,IAAI,CAACoB,KAAK,CAACC,SAAS,EAAE;QACxB,IAAI,CAACD,KAAK,CAACC,SAAS,CAACC,KAAI,GAAI,EAAE;MACjC;IACF,CAAC;IACDC,OAAOA,CAACC,IAAI,EAAE;MACZ,IAAI,CAAC1B,YAAW,GAAI0B,IAAI;IAC1B,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACL,KAAK,CAACC,SAAS,CAACK,KAAK,CAAC,CAAC;IAC9B,CAAC;IACDC,YAAYA,CAACC,KAAK,EAAE;MAClB,IAAI,CAAC7B,YAAW,GAAI,IAAI;MACxB,IAAI,CAACjB,YAAW,GAAI8C,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MACzC,IAAI,CAAC/C,gBAAe,GAAI,IAAI,CAACD,YAAY,CAACW,IAAI;MAC9C,IAAI,CAACR,YAAW,GAAI8C,GAAG,CAACC,eAAe,CAAC,IAAI,CAAClD,YAAY,CAAC;IAC5D,CAAC;IACD,MAAMmD,WAAWA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAACnD,YAAY,EAAE;MAExB,IAAI,CAACwB,cAAa,GAAI,IAAI,EAAE;MAC5B,MAAM4B,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACtD,YAAY,CAAC;MAE1C,MAAM0B,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;MAC7DsB,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE3B,IAAI,CAAC4B,SAAS,CAAC7B,QAAQ,CAAC,CAAC;MACrD0B,QAAQ,CAACE,MAAM,CAAC,mBAAmB,EAAE,IAAI,CAAC7C,eAAe,CAAC;MAC1D2C,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAE,IAAI,CAACtC,YAAW,GAAI,OAAM,GAAI,MAAM,CAAC;MAErE,IAAI;QACF,MAAMwC,QAAO,GAAI,MAAM3D,YAAY,CAACuD,QAAQ,CAAC;QAE7C,IAAI,CAACK,qBAAoB,GAAID,QAAQ,CAACE,eAAe;QACrD;QACA,MAAMC,UAAS,GAAI,IAAI,CAACF,qBAAqB,CAACG,KAAK,CAAC,KAAK,CAAC;QAC1D,IAAI,CAAC1D,cAAa,GAAIyD,UAAS,GAAIE,QAAQ,CAACF,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,IAAI;QAErEG,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAC7D,cAAc,CAAC;QAC7D4D,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAACN,qBAAqB,CAAC;QAErE,IAAI,CAACrD,YAAW,GAAIoD,QAAQ,CAACQ,aAAa;QAC1C,IAAI,CAAC3D,uBAAsB,GAAI,IAAI;QACnC,IAAI,CAACC,iBAAgB,GAAI,KAAK;QAC9B,IAAI,CAACC,iBAAgB,GAAI,KAAK;QAC9B,IAAI,CAACQ,oBAAmB,GAAI,KAAK;QACjC,IAAI,CAACE,YAAW,GAAI,KAAK;MAC3B,EAAE,OAAOgD,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,UAAU;QACR,IAAI,CAACzC,cAAa,GAAI,KAAK,EAAE;MAC/B;IACF,CAAC;IACD0C,eAAeA,CAAA,EAAG;MAChB,MAAMC,OAAM,GAAI,IAAI,CAAC3D,QAAQ,CAAC4D,IAAI,CAC/BC,CAAC,IAAKA,CAAC,CAACxD,MAAK,KAAM,IAAI,CAACJ,eAC3B,CAAC;MACD,IAAI,CAACC,mBAAkB,GAAIyD,OAAM,GAC7B;QACExD,IAAI,EAAEwD,OAAO,CAACxD,IAAI;QAClBC,OAAO,EAAEuD,OAAO,CAACG,WAAW;QAC5BzD,MAAM,EAAEsD,OAAO,CAACtD;MAClB,IACA;QAAEF,IAAI,EAAE,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAC;MAEzC,IAAI,CAACP,iBAAgB,GAAI,IAAI;MAC7B,IAAI,CAACW,YAAW,GAAI,KAAK;IAC3B,CAAC;IACDsD,aAAaA,CAAA,EAAG;MACd,IAAI,CAAC9D,eAAc,GAAI,EAAE;MACzB,IAAI,CAACC,mBAAkB,GAAI;QAAEC,IAAI,EAAE,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAC;MAChE,IAAI,CAACb,YAAW,GAAI,IAAI;MACxB,IAAI,CAACC,gBAAe,GAAI,IAAI;MAC5B,IAAI,CAACE,YAAW,GAAI,IAAI;MACxB,IAAI,IAAI,CAACmC,KAAK,CAACC,SAAS,EAAE;QACxB,IAAI,CAACD,KAAK,CAACC,SAAS,CAACC,KAAI,GAAI,EAAE;MACjC;MACA,IAAI,CAAClC,iBAAgB,GAAI,KAAK;MAC9B,IAAI,CAACC,iBAAgB,GAAI,IAAI;IAC/B,CAAC;IACDiE,eAAeA,CAACC,KAAK,EAAE;MACrB,IAAI,CAACvD,cAAa,GAAIuD,KAAK,EAAE;;MAE7B,IAAIA,KAAI,KAAM,CAAC,EAAE;QACf;QACA,MAAMrB,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACtD,YAAY,CAAC;QAC1CoD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC7C,eAAe,CAAC;QAClD2C,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACtC,YAAW,GAAI,OAAM,GAAI,MAAM,CAAC;QAE7DlB,eAAe,CAACsD,QAAQ,CAAC,CAACsB,KAAK,CAAET,KAAK,IACpCH,OAAO,CAACG,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAChE,CAAC;MACH;;MAEA;MACAU,UAAU,CAAC,MAAM;QACf,IAAI,CAACpD,WAAU,GAAI,IAAI;MACzB,CAAC,EAAE,GAAG,CAAC;IACT,CAAC;IACDqD,YAAYA,CAAA,EAAG;MACb,IAAI,CAACtD,mBAAkB,GAAI,IAAI;IACjC,CAAC;IACD;IACAuD,YAAYA,CAACJ,KAAK,EAAE;MAClB;MACA,OAAOA,KAAI,IAAK,IAAI,CAACvD,cAAa,GAAI,IAAI,CAACG,UAAS,GAAI,IAAI,CAACF,SAAS;IACxE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}