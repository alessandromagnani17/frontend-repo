{"ast":null,"code":"import EventBus from \"./eventBus\";\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      dropdownOpen: false,\n      navbarOpen: false,\n      authToken: null,\n      userRole: null,\n      userDataUid: null,\n      userDataName: null,\n      userDataSurname: null\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return !!this.authToken;\n    },\n    viewRadiographsRoute() {\n      if (this.userRole === \"patient\") {\n        localStorage.setItem(\"Name\", this.userDataName);\n        localStorage.setItem(\"Surname\", this.userDataSurname);\n        return {\n          path: \"/view-radiographs\",\n          query: {\n            uid: this.userDataUid\n          }\n        };\n      } else {\n        return {\n          path: \"/view-radiographs\"\n        };\n      }\n    }\n  },\n  methods: {\n    toggleNavbar() {\n      this.navbarOpen = !this.navbarOpen;\n    },\n    closeNavbar() {\n      this.navbarOpen = false;\n    },\n    closeNavbarOnClick(event) {\n      const isNavbar = event.target.closest(\".navbar\");\n      if (!isNavbar) {\n        this.closeNavbar();\n      }\n    },\n    toggleDropdown() {\n      console.log(this.dropdownOpen);\n      this.dropdownOpen = !this.dropdownOpen;\n    },\n    logout() {\n      console.log(\"[DEBUG] Executing logout...\");\n      localStorage.clear();\n      this.authToken = null;\n      this.userRole = null;\n      this.userDataUid = null;\n      EventBus.emit(\"auth-changed\");\n      this.$router.push(\"/\");\n    },\n    handleLogoClick() {\n      this.goToDashboard();\n      this.closeNavbar();\n    },\n    goToDashboard() {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      if (this.isLoggedIn) {\n        if (userData.role === \"doctor\") {\n          this.$router.push({\n            name: \"DoctorDashboard\"\n          });\n        } else if (userData.role === \"patient\") {\n          this.$router.push({\n            name: \"PatientDashboard\"\n          });\n        }\n      } else {\n        this.$router.push(\"/\");\n      }\n    },\n    updateAuthStatus() {\n      this.authToken = localStorage.getItem(\"authToken\");\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      this.userRole = userData?.role || null;\n      this.userDataUid = userData?.uid || null;\n      this.userDataName = userData?.name || null;\n      this.userDataSurname = userData?.family_name || null;\n      //console.log(\"[DEBUG] updateAuthStatus - authToken:\", this.authToken);\n      //console.log(\"[DEBUG] role:\", this.userRole);\n    }\n  },\n  mounted() {\n    this.updateAuthStatus(); // Inizializza authToken e userRole\n    EventBus.on(\"auth-changed\", this.updateAuthStatus);\n  },\n  beforeUnmount() {\n    EventBus.off(\"auth-changed\", this.updateAuthStatus);\n  }\n};","map":{"version":3,"names":["EventBus","name","data","dropdownOpen","navbarOpen","authToken","userRole","userDataUid","userDataName","userDataSurname","computed","isLoggedIn","viewRadiographsRoute","localStorage","setItem","path","query","uid","methods","toggleNavbar","closeNavbar","closeNavbarOnClick","event","isNavbar","target","closest","toggleDropdown","console","log","logout","clear","emit","$router","push","handleLogoClick","goToDashboard","userData","JSON","parse","getItem","role","updateAuthStatus","family_name","mounted","on","beforeUnmount","off"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\" @click=\"closeNavbarOnClick\">\r\n    <nav\r\n      v-bind:key=\"authToken\"\r\n      class=\"navbar navbar-expand-lg navbar-dark bg-primary shadow-lg sticky-top\"\r\n    >\r\n      <div class=\"container d-flex justify-content-between\">\r\n        <a class=\"navbar-brand\" href=\"#\" @click.prevent=\"handleLogoClick\">\r\n          Radiology Portal\r\n        </a>\r\n        <button\r\n          class=\"navbar-toggler\"\r\n          type=\"button\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"navbarOpen\"\r\n          aria-label=\"Toggle navigation\"\r\n          @click.stop=\"toggleNavbar\"\r\n        >\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div\r\n          id=\"navbarNav\"\r\n          class=\"collapse navbar-collapse\"\r\n          :class=\"{ show: navbarOpen }\"\r\n        >\r\n          <ul class=\"navbar-nav me-auto\">\r\n            <template v-if=\"isLoggedIn\">\r\n              <li v-if=\"userRole === 'doctor'\" class=\"nav-item\">\r\n                <router-link\r\n                  class=\"nav-link\"\r\n                  to=\"/predict\"\r\n                  @click=\"closeNavbar\"\r\n                >\r\n                  Predici Radiografie\r\n                </router-link>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <router-link\r\n                  class=\"nav-link\"\r\n                  :to=\"viewRadiographsRoute\"\r\n                  @click=\"closeNavbar\"\r\n                  >Visualizza Radiografie</router-link\r\n                >\r\n              </li>\r\n            </template>\r\n\r\n            <template v-else>\r\n              <li class=\"nav-item\">\r\n                <router-link\r\n                  class=\"nav-link\"\r\n                  to=\"/register\"\r\n                  @click=\"closeNavbar\"\r\n                >\r\n                  Registrati\r\n                </router-link>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <router-link class=\"nav-link\" to=\"/login\" @click=\"closeNavbar\">\r\n                  Login\r\n                </router-link>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n\r\n          <ul class=\"navbar-nav\">\r\n            <!-- Contenitore per il dropdown -->\r\n            <template v-if=\"isLoggedIn\">\r\n              <li class=\"nav-item dropdown\">\r\n                <a\r\n                  class=\"nav-link dropdown-toggle\"\r\n                  href=\"#\"\r\n                  role=\"button\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"dropdownOpen\"\r\n                  @click=\"toggleDropdown\"\r\n                >\r\n                  <i class=\"fas fa-user\"></i>\r\n                </a>\r\n                <div\r\n                  class=\"dropdown-menu\"\r\n                  :class=\"{ show: dropdownOpen }\"\r\n                  style=\"position: absolute; top: 100%; right: 0\"\r\n                >\r\n                  <router-link\r\n                    class=\"dropdown-item\"\r\n                    to=\"/profile\"\r\n                    @click=\"closeNavbar\"\r\n                    >Profilo</router-link\r\n                  >\r\n                  <router-link\r\n                    class=\"dropdown-item\"\r\n                    to=\"/settings\"\r\n                    @click=\"closeNavbar\"\r\n                    >Impostazioni</router-link\r\n                  >\r\n                  <a class=\"dropdown-item\" href=\"#\" @click.prevent=\"logout\"\r\n                    >Logout</a\r\n                  >\r\n                </div>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <main class=\"col-md-9\">\r\n          <router-view></router-view>\r\n          <!-- Visualizza il componente corretto in base alla rotta -->\r\n        </main>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport EventBus from \"./eventBus\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  data() {\r\n    return {\r\n      dropdownOpen: false,\r\n      navbarOpen: false,\r\n      authToken: null,\r\n      userRole: null,\r\n      userDataUid: null,\r\n      userDataName: null,\r\n      userDataSurname: null,\r\n    };\r\n  },\r\n  computed: {\r\n    isLoggedIn() {\r\n      return !!this.authToken;\r\n    },\r\n    viewRadiographsRoute() {\r\n      if (this.userRole === \"patient\") {\r\n        localStorage.setItem(\"Name\", this.userDataName);\r\n        localStorage.setItem(\"Surname\", this.userDataSurname);\r\n        return { path: \"/view-radiographs\", query: { uid: this.userDataUid } };\r\n      } else {\r\n        return { path: \"/view-radiographs\" };\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    toggleNavbar() {\r\n      this.navbarOpen = !this.navbarOpen;\r\n    },\r\n    closeNavbar() {\r\n      this.navbarOpen = false;\r\n    },\r\n    closeNavbarOnClick(event) {\r\n      const isNavbar = event.target.closest(\".navbar\");\r\n      if (!isNavbar) {\r\n        this.closeNavbar();\r\n      }\r\n    },\r\n    toggleDropdown() {\r\n      console.log(this.dropdownOpen);\r\n      this.dropdownOpen = !this.dropdownOpen;\r\n    },\r\n    logout() {\r\n      console.log(\"[DEBUG] Executing logout...\");\r\n      localStorage.clear();\r\n      this.authToken = null;\r\n      this.userRole = null;\r\n      this.userDataUid = null;\r\n      EventBus.emit(\"auth-changed\");\r\n      this.$router.push(\"/\");\r\n    },\r\n    handleLogoClick() {\r\n      this.goToDashboard();\r\n      this.closeNavbar();\r\n    },\r\n    goToDashboard() {\r\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n      if (this.isLoggedIn) {\r\n        if (userData.role === \"doctor\") {\r\n          this.$router.push({ name: \"DoctorDashboard\" });\r\n        } else if (userData.role === \"patient\") {\r\n          this.$router.push({ name: \"PatientDashboard\" });\r\n        }\r\n      } else {\r\n        this.$router.push(\"/\");\r\n      }\r\n    },\r\n    updateAuthStatus() {\r\n      this.authToken = localStorage.getItem(\"authToken\");\r\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n      this.userRole = userData?.role || null;\r\n      this.userDataUid = userData?.uid || null;\r\n      this.userDataName = userData?.name || null;\r\n      this.userDataSurname = userData?.family_name || null;\r\n      //console.log(\"[DEBUG] updateAuthStatus - authToken:\", this.authToken);\r\n      //console.log(\"[DEBUG] role:\", this.userRole);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.updateAuthStatus(); // Inizializza authToken e userRole\r\n    EventBus.on(\"auth-changed\", this.updateAuthStatus);\r\n  },\r\n  beforeUnmount() {\r\n    EventBus.off(\"auth-changed\", this.updateAuthStatus);\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\nbody {\r\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n  background-color: #f0f2f5;\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n#app {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.row {\r\n  display: flex; /* Attiva Flexbox */\r\n  height: auto; /* Rimuovi l'altezza fissa */\r\n  justify-content: center; /* Centra orizzontalmente */\r\n  align-items: center; /* Centra verticalmente */\r\n  height: 100vh; /* Imposta l'altezza della riga al 100% della viewport */\r\n}\r\n\r\nmain {\r\n  max-width: 900px; /* Imposta una larghezza massima per il contenuto */\r\n  width: 100%; /* Occupa il 100% della larghezza del suo contenitore */\r\n  padding: 20px; /* Aggiunge del padding interno */\r\n  background: #ffffff; /* Sfondo bianco per il main */\r\n}\r\n\r\n.navbar {\r\n  background-color: #007bff;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  transition: background-color 0.3s;\r\n  padding-left: 20px;\r\n}\r\n\r\n.navbar:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.navbar-brand {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: #ffffff;\r\n}\r\n\r\n.navbar-nav .nav-item {\r\n  margin-left: 15px; /* Regola questo valore per aumentare o diminuire il distanziamento */\r\n}\r\n\r\n.nav-link {\r\n  font-size: 1.2rem; /* Stile uniformato */\r\n  color: #ffffff;\r\n}\r\n\r\n.nav-link:hover {\r\n  color: #d4d4d4;\r\n}\r\n\r\n.navbar-toggler {\r\n  border-color: #ffffff;\r\n}\r\n\r\n.navbar-toggler-icon {\r\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23ffffff' viewBox='0 0 30 30'%3e%3cpath stroke='%23ffffff' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\");\r\n}\r\n\r\n.container-fluid {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  margin-left: 0px;\r\n  padding-left: 0px;\r\n}\r\n\r\n.dropdown-menu {\r\n  position: absolute;\r\n  background-color: #343a40;\r\n  border: none;\r\n  z-index: 1000;\r\n}\r\n\r\n.dropdown-item {\r\n  color: #cfd2d6;\r\n}\r\n\r\n.dropdown-item:hover {\r\n  background-color: #495057;\r\n  color: #ffffff;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}