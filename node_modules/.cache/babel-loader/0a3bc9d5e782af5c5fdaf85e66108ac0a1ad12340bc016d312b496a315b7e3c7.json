{"ast":null,"code":"export default {\n  props: {\n    month: Number,\n    year: Number,\n    daysInMonth: Array,\n    monthNames: Array,\n    dayNames: Array,\n    minDate: String,\n    operationIcon: String,\n    radiographIcon: String,\n    showDayDetails: Function,\n    changeMonth: Function,\n    selectedDay: Object\n  },\n  data() {\n    return {\n      // Ottieni la data di oggi in formato YYYY-MM-DD per il confronto\n      formattedToday: new Date().toISOString().split(\"T\")[0]\n    };\n  },\n  methods: {\n    selectDay(day) {\n      const formattedDate = `${day.year}-${String(day.month).padStart(2, \"0\")}-${String(day.date).padStart(2, \"0\")}`;\n      this.$emit(\"update-selected-day\", {\n        ...day,\n        formattedDate\n      });\n    },\n    isSelectedDay(day) {\n      return this.selectedDay && this.selectedDay.formattedDate === `${day.year}-${String(day.month).padStart(2, \"0\")}-${String(day.date).padStart(2, \"0\")}`;\n    },\n    generateTooltip(day) {\n      const operations = day.operations || [];\n      const numberOfOperations = operations.length;\n\n      // Verifica se è oggi\n      const isToday = `${day.year}-${String(day.month).padStart(2, \"0\")}-${String(day.date).padStart(2, \"0\")}` === this.formattedToday;\n      if (numberOfOperations === 0) {\n        return isToday ? \"Nessuna operazione programmata per oggi.\" : `Nessuna operazione programmata per ${this.dayNames[new Date(day.year, day.month - 1, day.date).getDay()]} ${day.date}.`;\n      }\n      const operationTimes = operations.map(op => {\n        const operationTime = new Date(op.operationDate);\n        const hours = String(operationTime.getHours()).padStart(2, \"0\");\n        const minutes = String(operationTime.getMinutes()).padStart(2, \"0\");\n        return `${hours}:${minutes}`;\n      }).sort();\n      let operationText;\n      if (numberOfOperations >= 3) {\n        operationText = `Hai ${numberOfOperations} operazion${numberOfOperations > 1 ? \"i\" : \"e\"} programmat${numberOfOperations > 1 ? \"e\" : \"a\"} per ${isToday ? \"oggi\" : `${this.dayNames[new Date(day.year, day.month - 1, day.date).getDay()]} ${day.date}`} alle ${operationTimes.slice(0, -1).join(\", alle \")} e alle ${operationTimes[operationTimes.length - 1]}`;\n      } else {\n        operationText = `Hai ${numberOfOperations} operazion${numberOfOperations > 1 ? \"i\" : \"e\"} programmat${numberOfOperations > 1 ? \"e\" : \"a\"} per ${isToday ? \"oggi\" : `${this.dayNames[new Date(day.year, day.month - 1, day.date).getDay()]} ${day.date}`} alle ${operationTimes.join(\" e alle \")}`;\n      }\n      return operationText;\n    }\n  }\n};","map":{"version":3,"names":["props","month","Number","year","daysInMonth","Array","monthNames","dayNames","minDate","String","operationIcon","radiographIcon","showDayDetails","Function","changeMonth","selectedDay","Object","data","formattedToday","Date","toISOString","split","methods","selectDay","day","formattedDate","padStart","date","$emit","isSelectedDay","generateTooltip","operations","numberOfOperations","length","isToday","getDay","operationTimes","map","op","operationTime","operationDate","hours","getHours","minutes","getMinutes","sort","operationText","slice","join"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/ScheduleCalendar.vue"],"sourcesContent":["<template>\n  <div class=\"calendar\">\n    <div class=\"calendar-header\">\n      <button class=\"month-button\" @click=\"changeMonth(-1)\">&#8249;</button>\n      <span>{{ monthNames[month] }} {{ year }}</span>\n      <button class=\"month-button\" @click=\"changeMonth(1)\">&#8250;</button>\n    </div>\n\n    <!-- Riga per i nomi dei giorni -->\n    <div class=\"calendar-day-names\">\n      <div v-for=\"dayName in dayNames\" :key=\"dayName\" class=\"day-name\">\n        {{ dayName }}\n      </div>\n    </div>\n\n    <div class=\"calendar-grid\">\n      <div\n        v-for=\"day in daysInMonth\"\n        :key=\"`${day.year}-${day.month}-${day.date}`\"\n        :class=\"[\n          'calendar-day',\n          {\n            disabled: day.isDisabled,\n            today:\n              `${day.year}-${String(day.month).padStart(2, '0')}-${String(\n                day.date\n              ).padStart(2, '0')}` === formattedToday,\n            selected: isSelectedDay(day),\n          },\n        ]\"\n        @click=\"!day.isDisabled && selectDay(day)\"\n        :title=\"generateTooltip(day)\"\n      >\n        <!-- Data -->\n        <div class=\"date\">{{ day.date }}</div>\n\n        <!-- Icone Operazioni -->\n        <div class=\"icons\">\n          <div class=\"icon-row operations\">\n            <img\n              v-for=\"(operation, index) in day.operations\"\n              :key=\"'operation-' + index + '-' + day.date\"\n              :src=\"operationIcon\"\n              alt=\"Operazione\"\n              class=\"icon\"\n            />\n          </div>\n\n          <!-- Icone Radiografie -->\n          <div class=\"icon-row radiographs\">\n            <img\n              v-for=\"(radiograph, index) in day.radiographs\"\n              :key=\"'radiograph-' + index + '-' + day.date\"\n              :src=\"radiographIcon\"\n              alt=\"Radiografia\"\n              class=\"icon\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    month: Number,\n    year: Number,\n    daysInMonth: Array,\n    monthNames: Array,\n    dayNames: Array,\n    minDate: String,\n    operationIcon: String,\n    radiographIcon: String,\n    showDayDetails: Function,\n    changeMonth: Function,\n    selectedDay: Object,\n  },\n  data() {\n    return {\n      // Ottieni la data di oggi in formato YYYY-MM-DD per il confronto\n      formattedToday: new Date().toISOString().split(\"T\")[0],\n    };\n  },\n  methods: {\n    selectDay(day) {\n      const formattedDate = `${day.year}-${String(day.month).padStart(\n        2,\n        \"0\"\n      )}-${String(day.date).padStart(2, \"0\")}`;\n      this.$emit(\"update-selected-day\", { ...day, formattedDate });\n    },\n    isSelectedDay(day) {\n      return (\n        this.selectedDay &&\n        this.selectedDay.formattedDate ===\n          `${day.year}-${String(day.month).padStart(2, \"0\")}-${String(\n            day.date\n          ).padStart(2, \"0\")}`\n      );\n    },\n    generateTooltip(day) {\n      const operations = day.operations || [];\n      const numberOfOperations = operations.length;\n\n      // Verifica se è oggi\n      const isToday =\n        `${day.year}-${String(day.month).padStart(2, \"0\")}-${String(\n          day.date\n        ).padStart(2, \"0\")}` === this.formattedToday;\n\n      if (numberOfOperations === 0) {\n        return isToday\n          ? \"Nessuna operazione programmata per oggi.\"\n          : `Nessuna operazione programmata per ${\n              this.dayNames[\n                new Date(day.year, day.month - 1, day.date).getDay()\n              ]\n            } ${day.date}.`;\n      }\n\n      const operationTimes = operations\n        .map((op) => {\n          const operationTime = new Date(op.operationDate);\n          const hours = String(operationTime.getHours()).padStart(2, \"0\");\n          const minutes = String(operationTime.getMinutes()).padStart(2, \"0\");\n          return `${hours}:${minutes}`;\n        })\n        .sort();\n\n      let operationText;\n      if (numberOfOperations >= 3) {\n        operationText = `Hai ${numberOfOperations} operazion${\n          numberOfOperations > 1 ? \"i\" : \"e\"\n        } programmat${numberOfOperations > 1 ? \"e\" : \"a\"} per ${\n          isToday\n            ? \"oggi\"\n            : `${\n                this.dayNames[\n                  new Date(day.year, day.month - 1, day.date).getDay()\n                ]\n              } ${day.date}`\n        } alle ${operationTimes.slice(0, -1).join(\", alle \")} e alle ${\n          operationTimes[operationTimes.length - 1]\n        }`;\n      } else {\n        operationText = `Hai ${numberOfOperations} operazion${\n          numberOfOperations > 1 ? \"i\" : \"e\"\n        } programmat${numberOfOperations > 1 ? \"e\" : \"a\"} per ${\n          isToday\n            ? \"oggi\"\n            : `${\n                this.dayNames[\n                  new Date(day.year, day.month - 1, day.date).getDay()\n                ]\n              } ${day.date}`\n        } alle ${operationTimes.join(\" e alle \")}`;\n      }\n      return operationText;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.schedule-calendar {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.calendar-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 1em;\n  margin-bottom: 10px;\n}\n\n.month-button {\n  background: none;\n  border: none;\n  padding: 5px;\n  cursor: pointer;\n  font-size: 1.5em;\n  color: #007bff;\n  transition: color 0.3s ease;\n}\n\n.month-button:hover {\n  color: #0056b3;\n}\n\n.calendar-grid {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 10px;\n  margin-top: 10px;\n}\n\n.calendar-day {\n  position: relative;\n  padding: 10px;\n  border: 1px solid #ddd;\n  height: 70px;\n  overflow: hidden;\n  cursor: pointer;\n}\n\n.calendar-day.disabled {\n  opacity: 0.5;\n  color: #ccc;\n  pointer-events: none;\n  background-color: #f9f9f9;\n}\n\n.calendar-day.today {\n  background-color: #f9f4f4;\n  border: 2px solid #ffa8a8db;\n  border-radius: 5px;\n}\n\n.calendar-day.selected {\n  border-radius: 5px;\n  border: 2px solid #7bbbffe7;\n}\n\n.calendar-day.today.selected {\n  background-color: #ffebeb;\n  border: 2px solid #7bbbffe7;\n}\n\n.calendar-day-names {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  background-color: #f0f0f0;\n  padding: 10px 0;\n  font-weight: bold;\n  color: #555;\n  text-align: center;\n  border-bottom: 1px solid #ddd;\n}\n\n.day-name {\n  text-transform: uppercase;\n  font-size: 0.9em;\n}\n\n.icon-row {\n  display: flex;\n  justify-content: center;\n  gap: 2px;\n}\n\n.operations {\n  min-height: 7px;\n  margin-bottom: 3px;\n}\n\n.icon {\n  width: 7px;\n  height: 7px;\n}\n\n/* Tooltip */\n.tooltip {\n  position: absolute;\n  top: -25px; /* Posiziona il tooltip sopra la data */\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #333;\n  color: white;\n  padding: 5px;\n  border-radius: 5px;\n  font-size: 12px;\n  z-index: 10;\n  visibility: visible;\n  opacity: 0.9;\n}\n</style>\n"],"mappings":"AAiEA,eAAe;EACbA,KAAK,EAAE;IACLC,KAAK,EAAEC,MAAM;IACbC,IAAI,EAAED,MAAM;IACZE,WAAW,EAAEC,KAAK;IAClBC,UAAU,EAAED,KAAK;IACjBE,QAAQ,EAAEF,KAAK;IACfG,OAAO,EAAEC,MAAM;IACfC,aAAa,EAAED,MAAM;IACrBE,cAAc,EAAEF,MAAM;IACtBG,cAAc,EAAEC,QAAQ;IACxBC,WAAW,EAAED,QAAQ;IACrBE,WAAW,EAAEC;EACf,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,cAAc,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACvD,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAACC,GAAG,EAAE;MACb,MAAMC,aAAY,GAAI,GAAGD,GAAG,CAACrB,IAAI,IAAIM,MAAM,CAACe,GAAG,CAACvB,KAAK,CAAC,CAACyB,QAAQ,CAC7D,CAAC,EACD,GACF,CAAC,IAAIjB,MAAM,CAACe,GAAG,CAACG,IAAI,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;MACxC,IAAI,CAACE,KAAK,CAAC,qBAAqB,EAAE;QAAE,GAAGJ,GAAG;QAAEC;MAAc,CAAC,CAAC;IAC9D,CAAC;IACDI,aAAaA,CAACL,GAAG,EAAE;MACjB,OACE,IAAI,CAACT,WAAU,IACf,IAAI,CAACA,WAAW,CAACU,aAAY,KAC3B,GAAGD,GAAG,CAACrB,IAAI,IAAIM,MAAM,CAACe,GAAG,CAACvB,KAAK,CAAC,CAACyB,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIjB,MAAM,CACzDe,GAAG,CAACG,IACN,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC;IAEzB,CAAC;IACDI,eAAeA,CAACN,GAAG,EAAE;MACnB,MAAMO,UAAS,GAAIP,GAAG,CAACO,UAAS,IAAK,EAAE;MACvC,MAAMC,kBAAiB,GAAID,UAAU,CAACE,MAAM;;MAE5C;MACA,MAAMC,OAAM,GACV,GAAGV,GAAG,CAACrB,IAAI,IAAIM,MAAM,CAACe,GAAG,CAACvB,KAAK,CAAC,CAACyB,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIjB,MAAM,CACzDe,GAAG,CAACG,IACN,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,KAAM,IAAI,CAACR,cAAc;MAE9C,IAAIc,kBAAiB,KAAM,CAAC,EAAE;QAC5B,OAAOE,OAAM,GACT,0CAAyC,GACzC,sCACE,IAAI,CAAC3B,QAAQ,CACX,IAAIY,IAAI,CAACK,GAAG,CAACrB,IAAI,EAAEqB,GAAG,CAACvB,KAAI,GAAI,CAAC,EAAEuB,GAAG,CAACG,IAAI,CAAC,CAACQ,MAAM,CAAC,EACrD,IACEX,GAAG,CAACG,IAAI,GAAG;MACrB;MAEA,MAAMS,cAAa,GAAIL,UAAS,CAC7BM,GAAG,CAAEC,EAAE,IAAK;QACX,MAAMC,aAAY,GAAI,IAAIpB,IAAI,CAACmB,EAAE,CAACE,aAAa,CAAC;QAChD,MAAMC,KAAI,GAAIhC,MAAM,CAAC8B,aAAa,CAACG,QAAQ,CAAC,CAAC,CAAC,CAAChB,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAC/D,MAAMiB,OAAM,GAAIlC,MAAM,CAAC8B,aAAa,CAACK,UAAU,CAAC,CAAC,CAAC,CAAClB,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QACnE,OAAO,GAAGe,KAAK,IAAIE,OAAO,EAAE;MAC9B,CAAC,EACAE,IAAI,CAAC,CAAC;MAET,IAAIC,aAAa;MACjB,IAAId,kBAAiB,IAAK,CAAC,EAAE;QAC3Bc,aAAY,GAAI,OAAOd,kBAAkB,aACvCA,kBAAiB,GAAI,IAAI,GAAE,GAAI,GAAE,cACrBA,kBAAiB,GAAI,IAAI,GAAE,GAAI,GAAG,QAC9CE,OAAM,GACF,MAAK,GACL,GACE,IAAI,CAAC3B,QAAQ,CACX,IAAIY,IAAI,CAACK,GAAG,CAACrB,IAAI,EAAEqB,GAAG,CAACvB,KAAI,GAAI,CAAC,EAAEuB,GAAG,CAACG,IAAI,CAAC,CAACQ,MAAM,CAAC,EACrD,IACEX,GAAG,CAACG,IAAI,EAAC,SACVS,cAAc,CAACW,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,SAAS,CAAC,WAClDZ,cAAc,CAACA,cAAc,CAACH,MAAK,GAAI,CAAC,GACxC;MACJ,OAAO;QACLa,aAAY,GAAI,OAAOd,kBAAkB,aACvCA,kBAAiB,GAAI,IAAI,GAAE,GAAI,GAAE,cACrBA,kBAAiB,GAAI,IAAI,GAAE,GAAI,GAAG,QAC9CE,OAAM,GACF,MAAK,GACL,GACE,IAAI,CAAC3B,QAAQ,CACX,IAAIY,IAAI,CAACK,GAAG,CAACrB,IAAI,EAAEqB,GAAG,CAACvB,KAAI,GAAI,CAAC,EAAEuB,GAAG,CAACG,IAAI,CAAC,CAACQ,MAAM,CAAC,EACrD,IACEX,GAAG,CAACG,IAAI,EAAC,SACVS,cAAc,CAACY,IAAI,CAAC,UAAU,CAAC,EAAE;MAC5C;MACA,OAAOF,aAAa;IACtB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}