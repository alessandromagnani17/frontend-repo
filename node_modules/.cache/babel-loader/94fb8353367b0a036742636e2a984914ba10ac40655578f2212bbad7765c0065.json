{"ast":null,"code":"import { getRadiographyInformation } from \"@/services/api-service\";\nexport default {\n  data() {\n    return {\n      patient_id: \"\",\n      index: \"\",\n      radiographyInfo: {\n        name: \"\",\n        surname: \"\",\n        birthdate: \"\",\n        tax_code: \"\",\n        address: \"\",\n        cap_code: \"\",\n        gender: \"\",\n        userId: \"\",\n        radiography_id: \"\",\n        date: \"\",\n        prediction: \"\",\n        side: \"\",\n        confidence: \"\",\n        doctorLoaded: \"\",\n        doctorUid: \"\",\n        doctorID: \"\"\n      },\n      info_txt: \"\"\n    };\n  },\n  async created() {\n    this.patient_id = this.$route.query.patient_id;\n    this.index = this.$route.query.index;\n    const radiographyInfoJson = await getRadiographyInformation(this.patient_id, this.index);\n    this.radiographyInfo = radiographyInfoJson;\n    const or = localStorage.getItem(\"selected_original_img\");\n    const gd = localStorage.getItem(\"selected_gradcam_img\");\n    console.log(\"OR: \" + or + \" GD: \" + gd);\n    console.log(\"LEGGO --> \", this.radiographyInfo);\n  },\n  methods: {}\n};","map":{"version":3,"names":["getRadiographyInformation","data","patient_id","index","radiographyInfo","name","surname","birthdate","tax_code","address","cap_code","gender","userId","radiography_id","date","prediction","side","confidence","doctorLoaded","doctorUid","doctorID","info_txt","created","$route","query","radiographyInfoJson","or","localStorage","getItem","gd","console","log","methods"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\RadiographyDetail.vue"],"sourcesContent":["<template>\n  <div class=\"welcome\">\n    <div class=\"container mt-5\">\n      <h5><strong>Visualizzazione radiografia</strong></h5>\n      <div class=\"card prediction-card mb-3\">\n        <div class=\"card-body\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getRadiographyInformation } from \"@/services/api-service\";\n\nexport default {\n  data() {\n    return {\n      patient_id: \"\",\n      index: \"\",\n      radiographyInfo: {\n        name: \"\",\n        surname: \"\",\n        birthdate: \"\",\n        tax_code: \"\",\n        address: \"\",\n        cap_code: \"\",\n        gender: \"\",\n        userId: \"\",\n        radiography_id: \"\",\n        date: \"\",\n        prediction: \"\",\n        side: \"\",\n        confidence: \"\",\n        doctorLoaded: \"\",\n        doctorUid: \"\",\n        doctorID: \"\",\n      },\n      info_txt: \"\",\n    };\n  },\n  async created() {\n    this.patient_id = this.$route.query.patient_id;\n    this.index = this.$route.query.index;\n    const radiographyInfoJson = await getRadiographyInformation(\n      this.patient_id,\n      this.index\n    );\n    this.radiographyInfo = radiographyInfoJson;\n    const or = localStorage.getItem(\"selected_original_img\");\n    const gd = localStorage.getItem(\"selected_gradcam_img\");\n    console.log(\"OR: \" + or + \" GD: \" + gd);\n    console.log(\"LEGGO --> \", this.radiographyInfo);\n  },\n  methods: {},\n};\n</script>\n\n<style scoped>\n.welcome {\n  background: #ffffff; /* Sfondo bianco */\n  min-height: 100vh;\n  display: flex;\n  align-items: center; /* Centra verticalmente */\n  justify-content: center; /* Centra orizzontalmente */\n}\n\n.container {\n  max-width: 90%; /* Modifica qui per utilizzare una percentuale */\n  padding: 5%; /* Usa percentuali per il padding */\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 10%; /* Usa percentuali per il margine superiore */\n  height: auto;\n  text-align: center;\n  flex-grow: 1;\n}\n</style>\n"],"mappings":"AAYA,SAASA,yBAAwB,QAAS,wBAAwB;AAElE,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE,EAAE;MACTC,eAAe,EAAE;QACfC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE,EAAE;QACXC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE,EAAE;QACVC,cAAc,EAAE,EAAE;QAClBC,IAAI,EAAE,EAAE;QACRC,UAAU,EAAE,EAAE;QACdC,IAAI,EAAE,EAAE;QACRC,UAAU,EAAE,EAAE;QACdC,YAAY,EAAE,EAAE;QAChBC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE;MACZ,CAAC;MACDC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI,CAACpB,UAAS,GAAI,IAAI,CAACqB,MAAM,CAACC,KAAK,CAACtB,UAAU;IAC9C,IAAI,CAACC,KAAI,GAAI,IAAI,CAACoB,MAAM,CAACC,KAAK,CAACrB,KAAK;IACpC,MAAMsB,mBAAkB,GAAI,MAAMzB,yBAAyB,CACzD,IAAI,CAACE,UAAU,EACf,IAAI,CAACC,KACP,CAAC;IACD,IAAI,CAACC,eAAc,GAAIqB,mBAAmB;IAC1C,MAAMC,EAAC,GAAIC,YAAY,CAACC,OAAO,CAAC,uBAAuB,CAAC;IACxD,MAAMC,EAAC,GAAIF,YAAY,CAACC,OAAO,CAAC,sBAAsB,CAAC;IACvDE,OAAO,CAACC,GAAG,CAAC,MAAK,GAAIL,EAAC,GAAI,OAAM,GAAIG,EAAE,CAAC;IACvCC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC3B,eAAe,CAAC;EACjD,CAAC;EACD4B,OAAO,EAAE,CAAC;AACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}