{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Carica Radiografia\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.onFileChange && $options.onFileChange(...args))\n  }, null, 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.upload && $options.upload(...args))\n  }, \"Carica\")]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","type","onChange","_cache","args","$options","onFileChange","onClick","upload"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\UploadRadiographs.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Carica Radiografia</h2>\r\n    <input type=\"file\" @change=\"onFileChange\" />\r\n    <button @click=\"upload\">Carica</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { uploadRadiograph, getPatients } from \"../services/api-service\"; // Importa le funzioni necessarie\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      file: null,\r\n      patients: [],\r\n    };\r\n  },\r\n  async created() {\r\n    const doctorId = this.$store.state.user.id; // ID del dottore loggato\r\n    this.patients = await getPatients(doctorId); // Ottieni la lista dei pazienti\r\n  },\r\n  methods: {\r\n    onFileChange(event) {\r\n      this.file = event.target.files[0];\r\n    },\r\n    async upload() {\r\n      if (!this.file) {\r\n        alert(\"Per favore seleziona un file.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const patientId = this.$props.patientId; // Assicurati che patientId sia passato come prop\r\n        const response = await uploadRadiograph(patientId, this.file);\r\n        this.$emit(\"uploadSuccess\", response); // Notifica il successo del caricamento\r\n      } catch (error) {\r\n        console.error(error.message);\r\n        alert(\"Errore nel caricamento della radiografia.\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";gCAEIA,mBAAA,CAA2B,YAAvB,oBAAkB;;uBADxBC,mBAAA,CAIM,cAHJC,UAA2B,EAC3BF,mBAAA,CAA4C;IAArCG,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;qCACxCN,mBAAA,CAAuC;IAA9BS,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAG,MAAA,IAAAH,QAAA,CAAAG,MAAA,IAAAJ,IAAA,CAAM;KAAE,QAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}