{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"calendar\"\n};\nconst _hoisted_2 = {\n  class: \"calendar-header\"\n};\nconst _hoisted_3 = {\n  class: \"calendar-day-names\"\n};\nconst _hoisted_4 = {\n  class: \"calendar-grid\"\n};\nconst _hoisted_5 = [\"onClick\", \"title\"];\nconst _hoisted_6 = {\n  class: \"date\"\n};\nconst _hoisted_7 = {\n  class: \"icon-row operations-radiographs\"\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: \"month-button\",\n    onClick: _cache[0] || (_cache[0] = $event => $props.changeMonth(-1))\n  }, \"‹\"), _createElementVNode(\"span\", null, _toDisplayString($props.monthNames[$props.month]) + \" \" + _toDisplayString($props.year), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"month-button\",\n    onClick: _cache[1] || (_cache[1] = $event => $props.changeMonth(1))\n  }, \"›\")]), _createCommentVNode(\" Riga per i nomi dei giorni \"), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.dayNames, dayName => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: dayName,\n      class: \"day-name\"\n    }, _toDisplayString(dayName), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.daysInMonth, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: `${day.year}-${day.month}-${day.date}`,\n      class: _normalizeClass(['calendar-day', {\n        disabled: day.isDisabled,\n        today: `${day.year}-${String(day.month).padStart(2, '0')}-${String(day.date).padStart(2, '0')}` === $props.minDate,\n        selected: $options.isSelectedDay(day)\n      }]),\n      onClick: $event => !day.isDisabled && $options.selectDay(day),\n      title: $options.generateTooltip(day)\n    }, [_createCommentVNode(\" Data \"), _createElementVNode(\"div\", _hoisted_6, _toDisplayString(day.date), 1 /* TEXT */), _createCommentVNode(\" Icone Operazioni e Radiografie nella stessa riga \"), _createElementVNode(\"div\", _hoisted_7, [_createCommentVNode(\" Icone Operazioni \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(day.operations, operation => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: 'operation-' + operation.id,\n        class: \"icon\"\n      }, [_createElementVNode(\"img\", {\n        src: $props.operationIcon,\n        alt: \"Operazione\"\n      }, null, 8 /* PROPS */, _hoisted_8)]);\n    }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Icone Radiografie \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(day.radiographs, radiograph => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: 'radiograph-' + radiograph.id,\n        class: \"icon\"\n      }, [_createElementVNode(\"img\", {\n        src: $props.radiographIcon,\n        alt: \"Radiografia\"\n      }, null, 8 /* PROPS */, _hoisted_9)]);\n    }), 128 /* KEYED_FRAGMENT */))])], 10 /* CLASS, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","$event","$props","changeMonth","_toDisplayString","monthNames","month","year","_createCommentVNode","_hoisted_3","_Fragment","_renderList","dayNames","dayName","key","_hoisted_4","daysInMonth","day","date","_normalizeClass","isDisabled","String","padStart","minDate","$options","isSelectedDay","selectDay","title","generateTooltip","_hoisted_6","_hoisted_7","operations","operation","id","src","operationIcon","alt","_hoisted_8","radiographs","radiograph","radiographIcon","_hoisted_9","_hoisted_5"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/ScheduleCalendar.vue"],"sourcesContent":["<template>\n  <div class=\"calendar\">\n    <div class=\"calendar-header\">\n      <button class=\"month-button\" @click=\"changeMonth(-1)\">&#8249;</button>\n      <span>{{ monthNames[month] }} {{ year }}</span>\n      <button class=\"month-button\" @click=\"changeMonth(1)\">&#8250;</button>\n    </div>\n\n    <!-- Riga per i nomi dei giorni -->\n    <div class=\"calendar-day-names\">\n      <div v-for=\"dayName in dayNames\" :key=\"dayName\" class=\"day-name\">\n        {{ dayName }}\n      </div>\n    </div>\n\n    <div class=\"calendar-grid\">\n      <div\n        v-for=\"day in daysInMonth\"\n        :key=\"`${day.year}-${day.month}-${day.date}`\"\n        :class=\"[\n          'calendar-day',\n          {\n            disabled: day.isDisabled,\n            today:\n              `${day.year}-${String(day.month).padStart(2, '0')}-${String(\n                day.date\n              ).padStart(2, '0')}` === minDate,\n            selected: isSelectedDay(day),\n          },\n        ]\"\n        @click=\"!day.isDisabled && selectDay(day)\"\n        :title=\"generateTooltip(day)\"\n      >\n        <!-- Data -->\n        <div class=\"date\">{{ day.date }}</div>\n\n        <!-- Icone Operazioni e Radiografie nella stessa riga -->\n        <div class=\"icon-row operations-radiographs\">\n          <!-- Icone Operazioni -->\n          <div\n            v-for=\"operation in day.operations\"\n            :key=\"'operation-' + operation.id\"\n            class=\"icon\"\n          >\n            <img :src=\"operationIcon\" alt=\"Operazione\" />\n          </div>\n          <!-- Icone Radiografie -->\n          <div\n            v-for=\"radiograph in day.radiographs\"\n            :key=\"'radiograph-' + radiograph.id\"\n            class=\"icon\"\n          >\n            <img :src=\"radiographIcon\" alt=\"Radiografia\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    month: Number,\n    year: Number,\n    daysInMonth: Array,\n    monthNames: Array,\n    dayNames: Array,\n    minDate: String,\n    operationIcon: String,\n    radiographIcon: String,\n    showDayDetails: Function,\n    changeMonth: Function,\n    selectedDay: Object,\n  },\n  methods: {\n    selectDay(day) {\n      const formattedDate = `${day.year}-${String(day.month).padStart(\n        2,\n        \"0\"\n      )}-${String(day.date).padStart(2, \"0\")}`;\n      this.$emit(\"update-selected-day\", { ...day, formattedDate });\n    },\n    isSelectedDay(day) {\n      return (\n        this.selectedDay &&\n        this.selectedDay.formattedDate ===\n          `${day.year}-${String(day.month).padStart(2, \"0\")}-${String(\n            day.date\n          ).padStart(2, \"0\")}`\n      );\n    },\n    generateTooltip(day) {\n      const operations = day.operations || [];\n      const numberOfOperations = operations.length;\n      if (numberOfOperations === 0) {\n        return `Nessuna operazione programmata per oggi.`;\n      }\n\n      const operationTimes = operations\n        .map((op) => {\n          const operationTime = new Date(op.operationDate);\n          const hours = String(operationTime.getHours()).padStart(2, \"0\");\n          const minutes = String(operationTime.getMinutes()).padStart(2, \"0\");\n          return `${hours}:${minutes}`;\n        })\n        .sort();\n\n      let operationText;\n      if (numberOfOperations >= 3) {\n        operationText = `Hai ${numberOfOperations} operazion${\n          numberOfOperations > 1 ? \"i\" : \"e\"\n        } programmat${\n          numberOfOperations > 1 ? \"e\" : \"a\"\n        } per oggi alle ${operationTimes.slice(0, -1).join(\", alle \")} e alle ${\n          operationTimes[operationTimes.length - 1]\n        }`;\n      } else {\n        operationText = `Hai ${numberOfOperations} operazion${\n          numberOfOperations > 1 ? \"i\" : \"e\"\n        } programmat${\n          numberOfOperations > 1 ? \"e\" : \"a\"\n        } per oggi alle ${operationTimes.join(\" e alle \")}`;\n      }\n\n      return operationText;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.schedule-calendar {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.calendar-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 1em;\n  margin-bottom: 10px;\n}\n\n.month-button {\n  background: none;\n  border: none;\n  padding: 5px;\n  cursor: pointer;\n  font-size: 1.5em;\n  color: #007bff;\n  transition: color 0.3s ease;\n}\n\n.month-button:hover {\n  color: #0056b3;\n}\n\n.calendar-grid {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 10px;\n  margin-top: 10px;\n}\n\n.calendar-day {\n  position: relative;\n  padding: 10px;\n  border: 1px solid #ddd;\n  height: 70px;\n  overflow: hidden;\n  cursor: pointer;\n}\n\n.calendar-day.disabled {\n  opacity: 0.5;\n  color: #ccc;\n  pointer-events: none;\n  background-color: #f9f9f9;\n}\n\n.calendar-day.today {\n  background-color: #f9f4f4;\n  border: 2px solid #ffa8a8db;\n  border-radius: 5px;\n}\n\n.calendar-day.selected {\n  border-radius: 5px;\n  border: 2px solid #7bbbffe7;\n}\n\n.calendar-day.today.selected {\n  background-color: #ffebeb;\n  border: 2px solid #7bbbffe7;\n}\n\n.calendar-day-names {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  background-color: #f0f0f0;\n  padding: 10px 0;\n  font-weight: bold;\n  color: #555;\n  text-align: center;\n  border-bottom: 1px solid #ddd;\n}\n\n.day-name {\n  text-transform: uppercase;\n  font-size: 0.9em;\n}\n\n.icon-row {\n  display: flex;\n  justify-content: center;\n  gap: 2px;\n}\n\n.operations {\n  min-height: 7px;\n  margin-bottom: 3px;\n}\n\n.icon {\n  width: 7px;\n  height: 7px;\n}\n\n/* Tooltip */\n.tooltip {\n  position: absolute;\n  top: -25px; /* Posiziona il tooltip sopra la data */\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #333;\n  color: white;\n  padding: 5px;\n  border-radius: 5px;\n  font-size: 12px;\n  z-index: 10;\n  visibility: visible;\n  opacity: 0.9;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}