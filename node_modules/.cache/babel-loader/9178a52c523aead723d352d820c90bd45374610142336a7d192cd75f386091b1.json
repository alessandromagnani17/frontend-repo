{"ast":null,"code":"import EventBus from \"./eventBus\";\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      dropdownOpen: false,\n      navbarOpen: false,\n      authToken: localStorage.getItem(\"authToken\") // Gestisce lo stato del token per la reattività\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return !!this.authToken;\n    }\n  },\n  methods: {\n    toggleNavbar() {\n      this.navbarOpen = !this.navbarOpen;\n    },\n    closeNavbar() {\n      this.navbarOpen = false;\n    },\n    closeNavbarOnClick(event) {\n      const isNavbar = event.target.closest(\".navbar\");\n      if (!isNavbar) {\n        this.closeNavbar();\n      }\n    },\n    toggleDropdown() {\n      this.dropdownOpen = !this.dropdownOpen;\n    },\n    login() {\n      const token = \"yourAuthToken\"; // Sostituisci con il token reale\n      console.log(\"Esegui il login...\");\n      localStorage.setItem(\"authToken\", token);\n      this.authToken = token; // Aggiorna authToken per rendere reattivo isLoggedIn\n      console.log(\"Token salvato:\", token);\n      EventBus.emit(\"auth-changed\"); // Emit evento per il cambiamento di stato\n      this.$router.push(\"/dashboard\"); // Naviga automaticamente dopo il login\n    },\n    logout() {\n      console.log(\"Esegui il logout...\");\n      localStorage.clear();\n      this.authToken = null; // Aggiorna authToken per rendere reattivo isLoggedIn\n      EventBus.emit(\"auth-changed\"); // Emit evento per il cambiamento di stato\n      alert(\"Logout avvenuto con successo\"); // Aggiunto l'alert\n      this.$router.push(\"/\");\n    },\n    handleLogoClick() {\n      const authToken = localStorage.getItem(\"authToken\");\n      if (authToken) {\n        this.$router.push({\n          name: \"WelcomePage\"\n        });\n      } else {\n        this.$router.push(\"/\");\n      }\n    },\n    handleHomeClick() {\n      this.goToDashboard(); // Chiama la tua funzione\n      this.closeNavbar(); // Chiude la navbar\n    },\n    goToDashboard() {\n      console.log(\"Navigating to Dashboard...\");\n      const authToken = localStorage.getItem(\"authToken\");\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      if (authToken) {\n        if (userData.role === \"doctor\") {\n          this.$router.push({\n            name: \"DoctorDashboard\"\n          });\n        } else if (userData.role === \"patient\") {\n          this.$router.push({\n            name: \"PatientDashboard\"\n          });\n        }\n      } else {\n        this.$router.push(\"/\");\n      }\n    },\n    updateAuthStatus() {\n      this.authToken = localStorage.getItem(\"authToken\"); // Aggiorna lo stato del token per il cambiamento reattivo\n    }\n  },\n  mounted() {\n    EventBus.on(\"auth-changed\", this.updateAuthStatus); // Ascolta l'evento\n  },\n  beforeUnmount() {\n    EventBus.off(\"auth-changed\", this.updateAuthStatus); // Rimuovi l'ascoltatore\n  }\n};","map":{"version":3,"names":["EventBus","name","data","dropdownOpen","navbarOpen","authToken","localStorage","getItem","computed","isLoggedIn","methods","toggleNavbar","closeNavbar","closeNavbarOnClick","event","isNavbar","target","closest","toggleDropdown","login","token","console","log","setItem","emit","$router","push","logout","clear","alert","handleLogoClick","handleHomeClick","goToDashboard","userData","JSON","parse","role","updateAuthStatus","mounted","on","beforeUnmount","off"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" @click=\"closeNavbarOnClick\">\n    <nav\n      class=\"navbar navbar-expand-lg navbar-dark bg-primary shadow-lg sticky-top\"\n    >\n      <div class=\"container\">\n        <a class=\"navbar-brand\" href=\"#\" @click.prevent=\"handleLogoClick\"\n          >Radiology Portal</a\n        >\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"navbarOpen\"\n          aria-label=\"Toggle navigation\"\n          @click.stop=\"toggleNavbar\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div\n          id=\"navbarNav\"\n          class=\"collapse navbar-collapse\"\n          :class=\"{ show: navbarOpen }\"\n        >\n          <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item\" v-if=\"!isLoggedIn\">\n              <a class=\"nav-link\" href=\"#\" @click.prevent=\"handleHomeClick\"\n                >Home</a\n              >\n            </li>\n            <li class=\"nav-item\" v-if=\"!isLoggedIn\">\n              <router-link class=\"nav-link\" to=\"/register\" @click=\"closeNavbar\"\n                >Registrati</router-link\n              >\n            </li>\n            <li class=\"nav-item\" v-if=\"!isLoggedIn\">\n              <router-link class=\"nav-link\" to=\"/login\" @click=\"closeNavbar\"\n                >Login</router-link\n              >\n            </li>\n            <li class=\"nav-item\" v-if=\"isLoggedIn\">\n              <a class=\"nav-link\" href=\"#\" @click.prevent=\"handleHomeClick\"\n                >Home</a\n              >\n            </li>\n            <li class=\"nav-item\" v-if=\"isLoggedIn\">\n              <router-link\n                class=\"nav-link\"\n                to=\"/manage-patients\"\n                @click=\"closeNavbar\"\n                >Gestisci Pazienti</router-link\n              >\n            </li>\n            <li class=\"nav-item\" v-if=\"isLoggedIn\">\n              <router-link\n                class=\"nav-link\"\n                to=\"/view-radiographs\"\n                @click=\"closeNavbar\"\n                >Visualizza Radiografie</router-link\n              >\n            </li>\n            <li class=\"nav-item\" v-if=\"isLoggedIn\">\n              <router-link\n                class=\"nav-link\"\n                to=\"/predict-radiograph\"\n                @click=\"closeNavbar\"\n                >Predici Radiografie</router-link\n              >\n            </li>\n            <li\n              class=\"nav-item dropdown\"\n              v-if=\"isLoggedIn\"\n              @click=\"toggleDropdown\"\n            >\n              <a\n                class=\"nav-link dropdown-toggle\"\n                href=\"#\"\n                role=\"button\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"dropdownOpen\"\n              >\n                <i class=\"fas fa-user\"></i>\n              </a>\n              <div\n                class=\"dropdown-menu\"\n                :class=\"{ show: dropdownOpen }\"\n                style=\"position: absolute; top: 100%; left: 0\"\n              >\n                <router-link\n                  class=\"dropdown-item\"\n                  to=\"/profile\"\n                  @click=\"closeNavbar\"\n                  >Profilo</router-link\n                >\n                <router-link\n                  class=\"dropdown-item\"\n                  to=\"/settings\"\n                  @click=\"closeNavbar\"\n                  >Impostazioni</router-link\n                >\n                <a class=\"dropdown-item\" href=\"#\" @click.prevent=\"logout\"\n                  >Logout</a\n                >\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <main class=\"col-md-9\">\n          <router-view></router-view>\n          <!-- Visualizza il componente corretto in base alla rotta -->\n        </main>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport EventBus from \"./eventBus\";\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      dropdownOpen: false,\n      navbarOpen: false,\n      authToken: localStorage.getItem(\"authToken\"), // Gestisce lo stato del token per la reattività\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return !!this.authToken;\n    },\n  },\n  methods: {\n    toggleNavbar() {\n      this.navbarOpen = !this.navbarOpen;\n    },\n    closeNavbar() {\n      this.navbarOpen = false;\n    },\n    closeNavbarOnClick(event) {\n      const isNavbar = event.target.closest(\".navbar\");\n      if (!isNavbar) {\n        this.closeNavbar();\n      }\n    },\n    toggleDropdown() {\n      this.dropdownOpen = !this.dropdownOpen;\n    },\n    login() {\n      const token = \"yourAuthToken\"; // Sostituisci con il token reale\n      console.log(\"Esegui il login...\");\n      localStorage.setItem(\"authToken\", token);\n      this.authToken = token; // Aggiorna authToken per rendere reattivo isLoggedIn\n      console.log(\"Token salvato:\", token);\n      EventBus.emit(\"auth-changed\"); // Emit evento per il cambiamento di stato\n      this.$router.push(\"/dashboard\"); // Naviga automaticamente dopo il login\n    },\n    logout() {\n      console.log(\"Esegui il logout...\");\n      localStorage.clear();\n      this.authToken = null; // Aggiorna authToken per rendere reattivo isLoggedIn\n      EventBus.emit(\"auth-changed\"); // Emit evento per il cambiamento di stato\n      alert(\"Logout avvenuto con successo\"); // Aggiunto l'alert\n      this.$router.push(\"/\");\n    },\n    handleLogoClick() {\n      const authToken = localStorage.getItem(\"authToken\");\n      if (authToken) {\n        this.$router.push({ name: \"WelcomePage\" });\n      } else {\n        this.$router.push(\"/\");\n      }\n    },\n    handleHomeClick() {\n      this.goToDashboard(); // Chiama la tua funzione\n      this.closeNavbar(); // Chiude la navbar\n    },\n    goToDashboard() {\n      console.log(\"Navigating to Dashboard...\");\n      const authToken = localStorage.getItem(\"authToken\");\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n\n      if (authToken) {\n        if (userData.role === \"doctor\") {\n          this.$router.push({ name: \"DoctorDashboard\" });\n        } else if (userData.role === \"patient\") {\n          this.$router.push({ name: \"PatientDashboard\" });\n        }\n      } else {\n        this.$router.push(\"/\");\n      }\n    },\n    updateAuthStatus() {\n      this.authToken = localStorage.getItem(\"authToken\"); // Aggiorna lo stato del token per il cambiamento reattivo\n    },\n  },\n  mounted() {\n    EventBus.on(\"auth-changed\", this.updateAuthStatus); // Ascolta l'evento\n  },\n  beforeUnmount() {\n    EventBus.off(\"auth-changed\", this.updateAuthStatus); // Rimuovi l'ascoltatore\n  },\n};\n</script>\n\n<style>\nbody {\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n  background-color: #f0f2f5;\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.row {\n  display: flex; /* Attiva Flexbox */\n  height: auto; /* Rimuovi l'altezza fissa */\n  justify-content: center; /* Centra orizzontalmente */\n  align-items: center; /* Centra verticalmente */\n  height: 100vh; /* Imposta l'altezza della riga al 100% della viewport */\n}\n\nmain {\n  max-width: 900px; /* Imposta una larghezza massima per il contenuto */\n  width: 100%; /* Occupa il 100% della larghezza del suo contenitore */\n  padding: 20px; /* Aggiunge del padding interno */\n  background: #ffffff; /* Sfondo bianco per il main */\n}\n\n.navbar {\n  background-color: #007bff;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  transition: background-color 0.3s;\n  padding-left: 20px;\n}\n\n.navbar:hover {\n  background-color: #0056b3;\n}\n\n.navbar-brand {\n  font-size: 2rem;\n  font-weight: bold;\n  color: #ffffff;\n}\n\n.navbar-nav .nav-item {\n  margin-left: 15px; /* Regola questo valore per aumentare o diminuire il distanziamento */\n}\n\n.nav-link {\n  font-size: 1.2rem; /* Stile uniformato */\n  color: #ffffff;\n}\n\n.nav-link:hover {\n  color: #d4d4d4;\n}\n\n.navbar-toggler {\n  border-color: #ffffff;\n}\n\n.navbar-toggler-icon {\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23ffffff' viewBox='0 0 30 30'%3e%3cpath stroke='%23ffffff' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\");\n}\n\n.container-fluid {\n  max-width: 1200px;\n  margin: 0 auto;\n  margin-left: 0px;\n  padding-left: 0px;\n}\n\n.dropdown-menu {\n  position: absolute;\n  background-color: #343a40;\n  border: none;\n  z-index: 1000;\n}\n\n.dropdown-item {\n  color: #cfd2d6;\n}\n\n.dropdown-item:hover {\n  background-color: #495057;\n  color: #ffffff;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}