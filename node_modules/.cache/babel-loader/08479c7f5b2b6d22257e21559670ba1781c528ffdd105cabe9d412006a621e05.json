{"ast":null,"code":"import axios from \"axios\";\nimport { getPatientsFromDoctor } from \"@/services/api-service\";\nimport EventBus from \"@/eventBus\";\nexport default {\n  data() {\n    return {\n      selectedFile: null,\n      selectedFileName: null,\n      predictedClass: null,\n      imagePreview: null,\n      gradcamImage: null,\n      showNewPredictionButton: false,\n      showPredictButton: true,\n      showUploadSection: true,\n      patients: [],\n      selectedPatient: \"\",\n      selectedPatientInfo: {\n        name: \"\",\n        surname: \"\",\n        userId: \"\"\n      },\n      isLoading: true,\n      showMainImagePreview: true,\n      selectedSide: false,\n      // False = Left ||| True = Right\n      showKneeSide: false,\n      selectedRating: 0,\n      starEmpty: require(\"@/assets/star-empty.svg\"),\n      starFilled: require(\"@/assets/star-filled.svg\"),\n      showThankYouMessage: false,\n      starsHidden: false,\n      loadingPredict: false\n    };\n  },\n  async created() {\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\n    const userUid = userData.doctorID;\n    this.patients = await getPatientsFromDoctor(userUid);\n    this.isLoading = false;\n  },\n  methods: {\n    resetPrediction() {\n      this.selectedFile = null;\n      this.selectedFileName = null;\n      this.predictedClass = null;\n      this.imagePreview = null;\n      this.gradcamImage = null;\n      this.showNewPredictionButton = false;\n      this.showPredictButton = true;\n      this.showUploadSection = true;\n      this.showMainImagePreview = true;\n      this.selectedPatient = \"\";\n      this.selectedPatientInfo = {\n        name: \"\",\n        surname: \"\",\n        userId: \"\"\n      };\n      this.showKneeSide = false;\n      this.selectedSide = false;\n      this.showThankYouMessage = false; // Nascondi il messaggio di ringraziamento\n      this.starsHidden = false; // Mostra di nuovo le stelline\n      this.selectedRating = 0; // Reimposta il rating selezionato\n      if (this.$refs.fileInput) {\n        this.$refs.fileInput.value = \"\";\n      }\n    },\n    setSide(side) {\n      this.selectedSide = side;\n    },\n    selectFile() {\n      this.$refs.fileInput.click();\n    },\n    onFileChange(event) {\n      this.showKneeSide = true;\n      this.selectedFile = event.target.files[0];\n      this.selectedFileName = this.selectedFile.name;\n      this.imagePreview = URL.createObjectURL(this.selectedFile);\n    },\n    async submitImage() {\n      if (!this.selectedFile) return;\n\n      // In PredictRadiograph.vue\n      EventBus.emit(\"test-event\", {\n        message: \"Test evento!\"\n      });\n\n      // Emetti l'evento per iniziare il caricamento\n      console.log(\"Inizio caricamento...\"); // Aggiungi un log per verificare se questa parte viene eseguita\n      EventBus.emit(\"loading-start\"); // Emissione dell'evento\n      this.loadingPredict = true; // Avvia il caricamento\n      const formData = new FormData();\n      formData.append(\"file\", this.selectedFile);\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      formData.append(\"userData\", JSON.stringify(userData));\n      formData.append(\"selectedPatientID\", this.selectedPatient);\n      formData.append(\"selectedSide\", this.selectedSide ? \"Right\" : \"Left\");\n      try {\n        const response = await axios.post(\"http://127.0.0.1:5000/predict\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        this.predictedClassMessage = response.data.predicted_class;\n\n        // Estrazione numero dal messaggio\n        const classMatch = this.predictedClassMessage.match(/\\d+/);\n        this.predictedClass = classMatch ? parseInt(classMatch[0], 10) : null;\n        console.log(\"Predicted Class (number):\", this.predictedClass);\n        console.log(\"Predicted Class (message):\", this.predictedClassMessage);\n        this.gradcamImage = response.data.gradcam_image;\n        this.showNewPredictionButton = true;\n        this.showPredictButton = false;\n        this.showUploadSection = false;\n        this.showMainImagePreview = false;\n        this.showKneeSide = false;\n      } catch (error) {\n        console.error(\"Error predicting image:\", error);\n      } finally {\n        // Emetti l'evento per fermare il caricamento\n        console.log(\"Fine caricamento...\"); // Aggiungi un log prima di fermare il caricamento\n\n        EventBus.emit(\"loading-end\");\n        this.loadingPredict = false; // Ferma il caricamento\n      }\n    },\n    onPatientChange() {\n      const patient = this.patients.find(p => p.userId === this.selectedPatient);\n      this.selectedPatientInfo = patient ? {\n        name: patient.name,\n        surname: patient.family_name,\n        userId: patient.userId\n      } : {\n        name: \"\",\n        surname: \"\",\n        userId: \"\"\n      }; // Se non trovato, resetta a valori vuoti\n\n      this.showPredictButton = true;\n      this.showKneeSide = false;\n    },\n    changePatient() {\n      this.selectedPatient = \"\";\n      this.selectedPatientInfo = {\n        name: \"\",\n        surname: \"\",\n        userId: \"\"\n      };\n      this.selectedFile = null;\n      this.selectedFileName = null;\n      this.imagePreview = null;\n      if (this.$refs.fileInput) {\n        this.$refs.fileInput.value = \"\";\n      }\n      this.showPredictButton = false;\n      this.showUploadSection = true;\n    },\n    handleStarClick(index) {\n      this.selectedRating = index; // Imposta il rating selezionato\n\n      if (index === 5) {\n        // Carica la radiografia nella cartella \"dataset\"\n        const formData = new FormData();\n        formData.append(\"file\", this.selectedFile);\n        formData.append(\"patientID\", this.selectedPatient);\n        formData.append(\"side\", this.selectedSide ? \"Right\" : \"Left\");\n        axios.post(\"http://127.0.0.1:5000/upload-to-dataset\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        }).then(() => {\n          console.log(\"File caricato con successo nella cartella dataset.\");\n        }).catch(error => {\n          console.error(\"Errore durante il caricamento del file:\", error);\n        });\n      }\n\n      // Nascondi le stelline con l'animazione\n      setTimeout(() => {\n        this.starsHidden = true;\n      }, 300);\n    },\n    showThankYou() {\n      this.showThankYouMessage = true;\n    },\n    // Funzione per ottenere l'immagine corretta in base al rating\n    getStarImage(index) {\n      // Se l'indice della stellina è minore o uguale al rating, è piena\n      return index <= this.selectedRating ? this.starFilled : this.starEmpty;\n    }\n  }\n};","map":{"version":3,"names":["axios","getPatientsFromDoctor","EventBus","data","selectedFile","selectedFileName","predictedClass","imagePreview","gradcamImage","showNewPredictionButton","showPredictButton","showUploadSection","patients","selectedPatient","selectedPatientInfo","name","surname","userId","isLoading","showMainImagePreview","selectedSide","showKneeSide","selectedRating","starEmpty","require","starFilled","showThankYouMessage","starsHidden","loadingPredict","created","userData","JSON","parse","localStorage","getItem","userUid","doctorID","methods","resetPrediction","$refs","fileInput","value","setSide","side","selectFile","click","onFileChange","event","target","files","URL","createObjectURL","submitImage","emit","message","console","log","formData","FormData","append","stringify","response","post","headers","predictedClassMessage","predicted_class","classMatch","match","parseInt","gradcam_image","error","onPatientChange","patient","find","p","family_name","changePatient","handleStarClick","index","then","catch","setTimeout","showThankYou","getStarImage"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/PredictRadiograph.vue"],"sourcesContent":["<template>\n  <div class=\"welcome\">\n    <div class=\"container mt-5\">\n      <h1 v-if=\"showUploadSection\" class=\"carica-radiografia\">\n        Carica una radiografia\n      </h1>\n      <div v-if=\"isLoading\" class=\"alert alert-info small-text\">\n        Caricamento...\n      </div>\n      <div v-else>\n        <div\n          v-if=\"patients.length === 0\"\n          class=\"alert alert-warning small-text\"\n        >\n          Non hai ancora nessun paziente associato.\n        </div>\n        <div v-else>\n          <div class=\"select-container mb-4\">\n            <select\n              v-if=\"patients.length > 0 && !selectedPatient\"\n              v-model=\"selectedPatient\"\n              @change=\"onPatientChange\"\n              class=\"form-select custom-select small-text\"\n            >\n              <option value=\"\" disabled selected>Seleziona un paziente</option>\n              <option\n                v-for=\"patient in patients\"\n                :key=\"patient.userId\"\n                :value=\"patient.userId\"\n              >\n                {{ patient.name }} {{ patient.family_name }} (ID:\n                {{ patient.userId }})\n              </option>\n            </select>\n          </div>\n          <div\n            v-if=\"selectedPatientInfo.name.length > 0 && showMainImagePreview\"\n            class=\"mt-2\"\n          >\n            <div class=\"patient-info-container small-text\">\n              <span>\n                Utente selezionato:\n                <strong>\n                  {{ selectedPatientInfo.name }}\n                  {{ selectedPatientInfo.surname }} <br />\n                </strong>\n                (ID: {{ selectedPatientInfo.userId }})\n              </span>\n              <!-- Pulsante Cambia -->\n              <span class=\"change-text\" @click=\"changePatient\">Cambia</span>\n            </div>\n          </div>\n          <div><h5></h5></div>\n          <div v-if=\"selectedPatient\">\n            <input\n              v-if=\"showUploadSection\"\n              type=\"file\"\n              ref=\"fileInput\"\n              @change=\"onFileChange\"\n              accept=\"image/*\"\n              style=\"display: none\"\n            />\n            <button\n              v-if=\"showUploadSection\"\n              @click=\"selectFile\"\n              class=\"btn btn-light btn-select\"\n            >\n              Seleziona file\n            </button>\n            <div\n              v-if=\"imagePreview && selectedPatient && showMainImagePreview\"\n              class=\"mt-3 img-preview-container\"\n            >\n              <img\n                :src=\"imagePreview\"\n                alt=\"Anteprima immagine\"\n                class=\"img-preview\"\n              />\n            </div>\n            <div v-if=\"showKneeSide\" class=\"button-cover\">\n              <div v-if=\"loadingPredict\" class=\"loading-overlay\"></div>\n\n              <div\n                class=\"buttonSide r\"\n                id=\"button-1\"\n                :class=\"{ active: selectedSide, inactive: !selectedSide }\"\n              >\n                <input\n                  type=\"checkbox\"\n                  v-model=\"selectedSide\"\n                  @change=\"updateSelectedSide\"\n                  class=\"checkbox\"\n                />\n                <div class=\"knobs\"></div>\n                <div class=\"layer\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-if=\"!showMainImagePreview\" class=\"mt-3\">\n        <h1>Risultati della predizione</h1>\n      </div>\n\n      <div v-if=\"imagePreview && selectedPatient\">\n        <button\n          v-if=\"showPredictButton\"\n          @click=\"submitImage\"\n          class=\"btn-upload\"\n          :disabled=\"loadingPredict\"\n        >\n          <span v-if=\"loadingPredict\">Caricamento...</span>\n          <span v-else>Predici osteoartrite</span>\n        </button>\n      </div>\n\n      <!-- Loading overlay per predizione -->\n      <div v-if=\"loadingPredict\" class=\"loading-overlay\">\n        <div class=\"loading-icon\">\n          <img src=\"@/assets/loading-icon.svg\" alt=\"Loading...\" />\n        </div>\n      </div>\n\n      <div v-if=\"predictedClass !== null\" class=\"mt-4\">\n        <div class=\"card prediction-card mb-3\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title small-text\">\n              Utente: {{ selectedPatientInfo.name }}\n              {{ selectedPatientInfo.surname }} <br />\n              (ID: {{ selectedPatientInfo.userId }})\n            </h5>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6 col-12\">\n            <div class=\"card\">\n              <img\n                :src=\"imagePreview\"\n                class=\"card-img-top\"\n                alt=\"Anteprima immagine\"\n              />\n              <div class=\"card-body\">\n                <h5 class=\"card-title small-text\">Radiografia Originale</h5>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-md-6 col-12\">\n            <div class=\"card\">\n              <img\n                :src=\"gradcamImage\"\n                class=\"card-img-top\"\n                alt=\"Grad-CAM Image\"\n              />\n              <div class=\"card-body\">\n                <h5 class=\"card-title small-text\">Applicazione Grad-CAM</h5>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"card prediction-card mb-3\">\n          <div class=\"card-body\">\n            <!-- Mostra il messaggio completo -->\n            <h5 class=\"card-title small-text\">\n              {{ predictedClassMessage }} ({{\n                selectedSide ? \"Ginocchio destro\" : \"Ginocchio sinistro\"\n              }})\n            </h5>\n            <!-- Mostra la scritta in rosso se il grado è 4 o 5 -->\n            <p\n              v-if=\"predictedClass === 4 || predictedClass === 5\"\n              class=\"text-danger\"\n            >\n              È necessaria un’operazione protesica per il paziente.\n            </p>\n          </div>\n        </div>\n\n        <div class=\"line-container\">\n          <div class=\"line\"></div>\n        </div>\n        <div class=\"mt-3\">\n          <h5>Valuta la predizione</h5>\n        </div>\n\n        <!-- Stelle -->\n        <transition name=\"fade-out-stars\" @after-leave=\"showThankYou\">\n          <div class=\"stars\" v-if=\"!starsHidden\">\n            <img\n              v-for=\"index in 5\"\n              :key=\"index\"\n              :src=\"getStarImage(index)\"\n              @click=\"handleStarClick(index)\"\n              alt=\"Star\"\n              class=\"star\"\n            />\n          </div>\n        </transition>\n        <!-- Messaggio di ringraziamento -->\n        <transition name=\"fade-in-thank-you\">\n          <div v-if=\"showThankYouMessage\" class=\"small-text mt-2\">\n            Grazie per la recensione!\n          </div>\n        </transition>\n        <div\n          v-if=\"showNewPredictionButton\"\n          class=\"mt-4 d-flex flex-column flex-md-row justify-content-center align-items-center gap-2\"\n        >\n          <button\n            @click=\"resetPrediction\"\n            class=\"btn btn-light btn-new-prediction\"\n          >\n            Esegui nuova predizione\n          </button>\n          <!-- Pulsante Pianifica Operazione -->\n          <button @click=\"scheduleOperation\" class=\"btn btn-primary btn-upload\">\n            Pianifica Operazione\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { getPatientsFromDoctor } from \"@/services/api-service\";\nimport EventBus from \"@/eventBus\";\n\nexport default {\n  data() {\n    return {\n      selectedFile: null,\n      selectedFileName: null,\n      predictedClass: null,\n      imagePreview: null,\n      gradcamImage: null,\n      showNewPredictionButton: false,\n      showPredictButton: true,\n      showUploadSection: true,\n      patients: [],\n      selectedPatient: \"\",\n      selectedPatientInfo: { name: \"\", surname: \"\", userId: \"\" },\n      isLoading: true,\n      showMainImagePreview: true,\n      selectedSide: false, // False = Left ||| True = Right\n      showKneeSide: false,\n      selectedRating: 0,\n      starEmpty: require(\"@/assets/star-empty.svg\"),\n      starFilled: require(\"@/assets/star-filled.svg\"),\n      showThankYouMessage: false,\n      starsHidden: false,\n      loadingPredict: false,\n    };\n  },\n  async created() {\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\n    const userUid = userData.doctorID;\n    this.patients = await getPatientsFromDoctor(userUid);\n    this.isLoading = false;\n  },\n  methods: {\n    resetPrediction() {\n      this.selectedFile = null;\n      this.selectedFileName = null;\n      this.predictedClass = null;\n      this.imagePreview = null;\n      this.gradcamImage = null;\n      this.showNewPredictionButton = false;\n      this.showPredictButton = true;\n      this.showUploadSection = true;\n      this.showMainImagePreview = true;\n      this.selectedPatient = \"\";\n      this.selectedPatientInfo = { name: \"\", surname: \"\", userId: \"\" };\n      this.showKneeSide = false;\n      this.selectedSide = false;\n      this.showThankYouMessage = false; // Nascondi il messaggio di ringraziamento\n      this.starsHidden = false; // Mostra di nuovo le stelline\n      this.selectedRating = 0; // Reimposta il rating selezionato\n      if (this.$refs.fileInput) {\n        this.$refs.fileInput.value = \"\";\n      }\n    },\n    setSide(side) {\n      this.selectedSide = side;\n    },\n    selectFile() {\n      this.$refs.fileInput.click();\n    },\n    onFileChange(event) {\n      this.showKneeSide = true;\n      this.selectedFile = event.target.files[0];\n      this.selectedFileName = this.selectedFile.name;\n      this.imagePreview = URL.createObjectURL(this.selectedFile);\n    },\n    async submitImage() {\n      if (!this.selectedFile) return;\n\n      // In PredictRadiograph.vue\n      EventBus.emit(\"test-event\", { message: \"Test evento!\" });\n\n      // Emetti l'evento per iniziare il caricamento\n      console.log(\"Inizio caricamento...\"); // Aggiungi un log per verificare se questa parte viene eseguita\n      EventBus.emit(\"loading-start\"); // Emissione dell'evento\n      this.loadingPredict = true; // Avvia il caricamento\n      const formData = new FormData();\n      formData.append(\"file\", this.selectedFile);\n\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      formData.append(\"userData\", JSON.stringify(userData));\n      formData.append(\"selectedPatientID\", this.selectedPatient);\n      formData.append(\"selectedSide\", this.selectedSide ? \"Right\" : \"Left\");\n\n      try {\n        const response = await axios.post(\n          \"http://127.0.0.1:5000/predict\",\n          formData,\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n\n        this.predictedClassMessage = response.data.predicted_class;\n\n        // Estrazione numero dal messaggio\n        const classMatch = this.predictedClassMessage.match(/\\d+/);\n        this.predictedClass = classMatch ? parseInt(classMatch[0], 10) : null;\n\n        console.log(\"Predicted Class (number):\", this.predictedClass);\n        console.log(\"Predicted Class (message):\", this.predictedClassMessage);\n\n        this.gradcamImage = response.data.gradcam_image;\n        this.showNewPredictionButton = true;\n        this.showPredictButton = false;\n        this.showUploadSection = false;\n        this.showMainImagePreview = false;\n        this.showKneeSide = false;\n      } catch (error) {\n        console.error(\"Error predicting image:\", error);\n      } finally {\n        // Emetti l'evento per fermare il caricamento\n        console.log(\"Fine caricamento...\"); // Aggiungi un log prima di fermare il caricamento\n\n        EventBus.emit(\"loading-end\");\n        this.loadingPredict = false; // Ferma il caricamento\n      }\n    },\n    onPatientChange() {\n      const patient = this.patients.find(\n        (p) => p.userId === this.selectedPatient\n      );\n      this.selectedPatientInfo = patient\n        ? {\n            name: patient.name,\n            surname: patient.family_name,\n            userId: patient.userId,\n          }\n        : { name: \"\", surname: \"\", userId: \"\" }; // Se non trovato, resetta a valori vuoti\n\n      this.showPredictButton = true;\n      this.showKneeSide = false;\n    },\n    changePatient() {\n      this.selectedPatient = \"\";\n      this.selectedPatientInfo = { name: \"\", surname: \"\", userId: \"\" };\n      this.selectedFile = null;\n      this.selectedFileName = null;\n      this.imagePreview = null;\n      if (this.$refs.fileInput) {\n        this.$refs.fileInput.value = \"\";\n      }\n      this.showPredictButton = false;\n      this.showUploadSection = true;\n    },\n    handleStarClick(index) {\n      this.selectedRating = index; // Imposta il rating selezionato\n\n      if (index === 5) {\n        // Carica la radiografia nella cartella \"dataset\"\n        const formData = new FormData();\n        formData.append(\"file\", this.selectedFile);\n        formData.append(\"patientID\", this.selectedPatient);\n        formData.append(\"side\", this.selectedSide ? \"Right\" : \"Left\");\n\n        axios\n          .post(\"http://127.0.0.1:5000/upload-to-dataset\", formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          })\n          .then(() => {\n            console.log(\"File caricato con successo nella cartella dataset.\");\n          })\n          .catch((error) => {\n            console.error(\"Errore durante il caricamento del file:\", error);\n          });\n      }\n\n      // Nascondi le stelline con l'animazione\n      setTimeout(() => {\n        this.starsHidden = true;\n      }, 300);\n    },\n    showThankYou() {\n      this.showThankYouMessage = true;\n    },\n    // Funzione per ottenere l'immagine corretta in base al rating\n    getStarImage(index) {\n      // Se l'indice della stellina è minore o uguale al rating, è piena\n      return index <= this.selectedRating ? this.starFilled : this.starEmpty;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.welcome {\n  background: #ffffff; /* Sfondo bianco */\n  min-height: 100vh;\n  display: flex;\n  align-items: center; /* Centra verticalmente */\n  justify-content: center; /* Centra orizzontalmente */\n}\n\n.container {\n  max-width: 80%;\n  padding: 5%;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 10%;\n  height: auto;\n  text-align: center;\n  flex-grow: 1;\n}\n\nh1 {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\n.img-preview-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n\n.img-preview {\n  width: 50vw;\n  max-width: 100%;\n  height: auto;\n  max-height: 50vh;\n  object-fit: contain;\n  margin-top: 15px;\n}\n\n@media (max-width: 767px) {\n  .img-preview {\n    width: 60vw;\n    max-height: 50vh;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n  .img-preview-container {\n    padding: 10px;\n  }\n}\n\n.row {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 20px;\n  height: 10%;\n}\n\n.card {\n  flex: 1 1 45%;\n  margin: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.card-img-top {\n  border-radius: 0.5rem;\n  max-height: 50vh;\n  object-fit: cover;\n}\n\n.card-body {\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n}\n\n.patient-info-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 3vw;\n  width: 100%;\n}\n\n.change-text {\n  font-size: 14px;\n  color: black;\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n.btn-select {\n  background: #d9d9d9;\n  color: black;\n  width: 40%;\n  margin-top: 10px;\n  padding: 0.4rem;\n  font-size: 13px;\n}\n\n.btn-upload,\n.btn-new-prediction {\n  margin: 0; /* Rimuove eventuali margini inutili */\n  padding: 8px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 40%; /* Imposta larghezza al 100% del contenitore */\n  max-width: 300px; /* Imposta una larghezza massima */\n  min-width: 100px; /* Imposta una larghezza minima */\n  font-size: 13px;\n  transition: background-color 0.3s ease;\n  text-align: center;\n}\n\n.btn-upload {\n  background-color: #007bff;\n  color: white;\n}\n\n.btn-upload:hover {\n  background-color: #0056b3;\n}\n\n.btn-new-prediction {\n  background: #d9d9d9; /* Colore grigio chiaro */\n  color: black; /* Colore del testo */\n}\n\n.btn-new-prediction:hover {\n  background: #bfbfbf;\n}\n\n/* Aggiungi un po' di spazio tra i pulsanti */\n.gap-2 {\n  gap: 10px;\n}\n\n@media (max-width: 768px) {\n  /* Per schermi piccoli, impila i pulsanti verticalmente */\n  .flex-md-row {\n    flex-direction: column;\n  }\n}\n\n.small-text {\n  font-size: 13px;\n}\n\n.select-container {\n  margin-top: 18px;\n  margin-bottom: 10px;\n}\n\n.form-select {\n  display: block;\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ced4da;\n  border-radius: 5px;\n  background-color: #fff;\n  transition: border-color 0.2s;\n}\n\n.form-select:focus {\n  border-color: #007bff;\n  outline: none;\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\n}\n\n.custom-select {\n  max-width: 80%;\n  margin: 0 auto;\n}\n\n.button-cover {\n  height: 85%;\n  width: 40%; /* Puoi regolare la larghezza come desideri */\n  margin: 0px auto; /* Centrato orizzontalmente */\n  margin-top: 20px;\n  background-color: #fff;\n  display: block; /* Non usare flexbox qui, ma blocco per evitare allineamenti strani */\n}\n\n.buttonSide {\n  position: relative;\n  top: 50%;\n  width: 100%; /* Mantieni la larghezza al 100% del contenitore */\n  height: 36px;\n  margin: 0 auto; /* Questo forza il centramento orizzontale */\n  overflow: hidden;\n}\n\n.checkbox {\n  position: relative;\n  width: 350%; /* Imposta la larghezza del checkbox a 100% */\n  height: 60%;\n  padding: 0;\n  margin-bottom: 4vh;\n  margin-left: 5vh;\n  opacity: 0;\n  cursor: pointer;\n  z-index: 3;\n}\n\n.knobs {\n  z-index: 2;\n}\n\n.layer {\n  width: 100%;\n  background-color: #ebf7fc;\n  transition: 0.3s ease all;\n  z-index: 1;\n}\n\n#button-1 {\n  position: relative; /* Posizione relativa per il contenitore */\n  width: 100%; /* Si adatta alla larghezza del contenitore */\n  height: 100px; /* Imposta l'altezza del container */\n  display: flex;\n  justify-content: center; /* Centra orizzontalmente i pulsanti */\n  align-items: center; /* Centra verticalmente i pulsanti */\n  z-index: 11;\n}\n\n/* Stili esistenti per i pulsanti Left/Right */\n#button-1 .knobs:before,\n#button-1 .knobs:after {\n  position: absolute;\n  width: 60%; /* Inizialmente i pulsanti avranno una larghezza più ampia */\n  height: 30px;\n  color: white;\n  font-size: 14px;\n  font-weight: bold;\n  text-align: center;\n  line-height: 1;\n  padding: 9px 4px;\n  border-radius: 5px;\n  transition: 0.3s cubic-bezier(0.18, 0.89, 0.35, 1.15) all, opacity 0.3s ease,\n    z-index 0.3s ease, transform 0.3s ease;\n  left: 50%; /* Allinea al centro orizzontale */\n  transform: translateX(-50%); /* Centra perfettamente al centro */\n}\n\n#button-1 .knobs:before {\n  content: \"Left\";\n  top: 0; /* Pulsante Left in cima */\n  background-color: #03a9f4;\n  opacity: 1;\n  z-index: 2; /* Priorità superiore */\n  transform: scale(1); /* Pulsante Left alla dimensione normale */\n  left: 50%;\n  transform: translateX(-50%); /* Centra entrambi i pulsanti */\n}\n\n#button-1 .knobs:after {\n  content: \"Right\";\n  top: 30px; /* Pulsante Right sotto */\n  background-color: #f44336;\n  opacity: 0.5;\n  z-index: 1; /* Priorità inferiore */\n  transform: scale(0.8); /* Pulsante Right non selezionato più piccolo */\n  left: 50%; /* Allinea al centro orizzontale */\n  transform: translateX(-50%) scale(0.8); /* Centra e scala il pulsante */\n}\n\n/* Quando il checkbox è selezionato, cambia la posizione e la dimensione */\n#button-1 .checkbox:checked + .knobs:before {\n  top: 30px; /* Quando selezionato, si sposta in basso */\n  opacity: 0.5;\n  z-index: 1;\n  transform: translateX(-50%) scale(0.8); /* Il pulsante Left diventa più piccolo */\n}\n\n#button-1 .checkbox:checked + .knobs:after {\n  top: 0; /* Quando selezionato, il pulsante Right va sopra */\n  opacity: 1;\n  z-index: 2;\n  transform: translateX(-50%) scale(1); /* Il pulsante Right diventa più grande */\n}\n\n#button-1 .layer {\n  width: 100%;\n  background-color: #ebf7fc;\n  transition: background-color 0.3s ease;\n}\n\n#button-1 .checkbox:checked ~ .layer {\n  background-color: #fcebeb;\n}\n\n/* Media Queries per schermi più piccoli */\n@media (max-width: 767px) {\n  #button-1 .knobs:before,\n  #button-1 .knobs:after {\n    width: 80%; /* Più larghi su schermi piccoli per una buona visibilità */\n    font-size: 12px; /* Ridurre la dimensione del font */\n    padding: 6px 3px; /* Ridurre il padding per schermi stretti */\n  }\n\n  /* Posizionamento dei pulsanti su schermi piccoli */\n  #button-1 .knobs:before {\n    top: 0; /* Pulsante Left in cima */\n  }\n\n  #button-1 .knobs:after {\n    top: 60px; /* Pulsante Right un po' più sotto */\n  }\n\n  /* Quando il checkbox è selezionato, cambia la posizione e la dimensione */\n  #button-1 .checkbox:checked + .knobs:before {\n    top: 60px; /* \"Left\" scende sotto */\n    opacity: 0.5;\n    z-index: 1;\n    transform: translateX(-50%) scale(0.8); /* Diventa più piccolo */\n  }\n\n  #button-1 .checkbox:checked + .knobs:after {\n    top: 0; /* \"Right\" sale sopra */\n    opacity: 1;\n    z-index: 2;\n    transform: translateX(-50%) scale(1); /* Diventa più grande */\n  }\n\n  #button-1 .layer {\n    background-color: #fcebeb;\n  }\n}\n\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.6);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999; /* Assicurati che l'overlay sia sopra tutto */\n}\n\n.loading-icon {\n  width: 50px;\n  height: 50px;\n}\n\n.line-container {\n  display: flex;\n  align-items: center;\n  margin: 2rem 0;\n}\n\n.line {\n  width: 90%;\n  height: 1px;\n  background-color: #ccc;\n  margin: 0 auto;\n}\n\n.star-rating {\n  text-align: center;\n}\n\n.stars {\n  display: flex;\n  justify-content: center;\n}\n\n.star {\n  width: 30px; /* Riduci la larghezza */\n  height: 30px; /* Riduci l'altezza */\n  margin: 0 4px; /* Distanza tra le stelline */\n  cursor: pointer;\n}\n\n.fade-out-stars-enter-active,\n.fade-out-stars-leave-active {\n  transition: opacity 0.5s ease, transform 0.5s ease;\n}\n\n.fade-out-stars-enter-from,\n.fade-out-stars-leave-to {\n  opacity: 0;\n  transform: scale(0.8);\n}\n\n.fade-out-stars-leave-active {\n  opacity: 0;\n}\n\n.fade-in-thank-you-enter-active {\n  transition: opacity 0.8s ease;\n}\n.fade-in-thank-you-enter-from {\n  opacity: 0;\n}\n.fade-in-thank-you-enter-to {\n  opacity: 1;\n}\n\nh5.carica-radiografia {\n  font-size: 18px; /* Stessa dimensione del testo di \"Elenco Pazienti\" */\n  font-family: inherit; /* Assicura che usi lo stesso font ereditato dal contesto */\n  font-weight: normal; /* Mantenere il peso del font uguale */\n  margin-bottom: 20px; /* Margine inferiore uguale per allineamento */\n}\n\n.btn-change-patient {\n  background: #d9d9d9; /* Colore grigio chiaro */\n  color: black; /* Colore del testo */\n  width: 40%; /* Larghezza al 100% */\n  margin-top: 15px; /* Spazio sopra il pulsante */\n  padding: 0.4rem; /* Ridotto per i pulsanti, più corto verticalmente */\n  font-size: 13px; /* Dimensione del testo più piccola */\n  border: none; /* Nessun bordo */\n  border-radius: 5px; /* Angoli arrotondati */\n  cursor: pointer; /* Puntatore del mouse per il clic */\n  transition: background-color 0.3s ease; /* Transizione al passaggio del mouse */\n}\n\n.btn-change-patient:hover {\n  background-color: #bfbfbf; /* Colore grigio più scuro al passaggio del mouse */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}