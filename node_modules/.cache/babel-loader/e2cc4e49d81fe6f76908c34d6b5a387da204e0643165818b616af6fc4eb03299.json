{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nimport _imports_0 from '@/assets/modify.svg';\nconst _hoisted_1 = {\n  class: \"profile\"\n};\nconst _hoisted_2 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_3 = {\n  class: \"user-info\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = [\"onUpdate:modelValue\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"Benvenuto nel tuo Profilo!\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.displayFields, (value, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: key,\n      class: \"user-item\"\n    }, [_createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, _toDisplayString(value.label) + \":\", 1 /* TEXT */), !$data.editingField[key] ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString($data.userData[key]), 1 /* TEXT */)) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 1,\n      type: \"text\",\n      \"onUpdate:modelValue\": $event => $data.editableValues[key] = $event,\n      class: \"edit-input\"\n    }, null, 8 /* PROPS */, _hoisted_5)), [[_vModelText, $data.editableValues[key]]]), !$data.editingField[key] ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 2,\n      class: \"btn-edit\",\n      onClick: $event => $options.startEditing(key)\n    }, [...(_cache[0] || (_cache[0] = [_createElementVNode(\"img\", {\n      src: _imports_0,\n      alt: \"Modifica\",\n      class: \"edit-icon\"\n    }, null, -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_6)) : (_openBlock(), _createElementBlock(\"button\", {\n      key: 3,\n      class: \"btn-save\",\n      onClick: $event => $options.saveField(key)\n    }, \" Salva \", 8 /* PROPS */, _hoisted_7))])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_imports_0","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","displayFields","value","_toDisplayString","label","editingField","_hoisted_4","userData","type","$event","editableValues","_hoisted_5","onClick","$options","startEditing","src","alt","_hoisted_6","saveField","_hoisted_7"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\views\\ProfilePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile\">\r\n    <div class=\"container mt-5\">\r\n      <h1>Benvenuto nel tuo Profilo!</h1>\r\n      <div class=\"user-info\">\r\n        <div v-for=\"(value, key) in displayFields\" :key=\"key\" class=\"user-item\">\r\n          <p>\r\n            <strong>{{ value.label }}:</strong>\r\n            <span v-if=\"!editingField[key]\">{{ userData[key] }}</span>\r\n            <input\r\n              v-else\r\n              type=\"text\"\r\n              v-model=\"editableValues[key]\"\r\n              class=\"edit-input\"\r\n            />\r\n            <button\r\n              v-if=\"!editingField[key]\"\r\n              class=\"btn-edit\"\r\n              @click=\"startEditing(key)\"\r\n            >\r\n              <img src=\"@/assets/modify.svg\" alt=\"Modifica\" class=\"edit-icon\" />\r\n            </button>\r\n            <button v-else class=\"btn-save\" @click=\"saveField(key)\">\r\n              Salva\r\n            </button>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getUserData, updateUserData } from \"@/services/api-service\";\r\n\r\nexport default {\r\n  name: \"ProfilePage\",\r\n  data() {\r\n    return {\r\n      userData: {},\r\n      editingField: {},\r\n      editableValues: {},\r\n      displayFields: {\r\n        name: { label: \"Nome\" },\r\n        family_name: { label: \"Cognome\" },\r\n        username: { label: \"Username\" },\r\n        email: { label: \"Email\" },\r\n        birthdate: { label: \"Data di Nascita\" },\r\n        phone_number: { label: \"Telefono\" },\r\n        address: { label: \"Indirizzo\" },\r\n        cap_code: { label: \"CAP\" },\r\n        gender: { label: \"Genere\" },\r\n        tax_code: { label: \"Codice Fiscale\" },\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    this.loadUserData();\r\n  },\r\n  methods: {\r\n    async loadUserData() {\r\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n      const userId = userData?.userId;\r\n      if (!userId) {\r\n        console.error(\"ID utente non definito\");\r\n        alert(\"Errore: ID utente non trovato nel localStorage\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        console.log(\"Richiesta dati per userId:\", userId);\r\n        const data = await getUserData(userId);\r\n        if (!data) {\r\n          alert(\"Nessun dato utente ricevuto dal server\");\r\n          return;\r\n        }\r\n        this.userData = data;\r\n        console.log(\"Dati utente ricevuti:\", data);\r\n        this.resetEditableValues();\r\n      } catch (error) {\r\n        console.error(\r\n          \"Errore dettagliato:\",\r\n          error.response?.data || error.message\r\n        );\r\n        alert(\r\n          `Errore durante il caricamento dei dati utente: ${\r\n            error.response?.data?.error || error.message\r\n          }`\r\n        );\r\n      }\r\n    },\r\n    resetEditableValues() {\r\n      Object.keys(this.displayFields).forEach((key) => {\r\n        this.editableValues[key] = this.userData[key];\r\n        this.editingField[key] = false;\r\n      });\r\n    },\r\n    startEditing(field) {\r\n      this.editingField[field] = true;\r\n    },\r\n    async saveField(field) {\r\n      const newValue = this.editableValues[field];\r\n      if (newValue !== this.userData[field]) {\r\n        try {\r\n          await this.updateUserData(field, newValue);\r\n          alert(\"Informazione aggiornata con successo!\");\r\n          this.loadUserData();\r\n        } catch (error) {\r\n          alert(\"Si è verificato un errore durante l'aggiornamento.\");\r\n        }\r\n      }\r\n      this.editingField[field] = false;\r\n    },\r\n    async updateUserData(field, value) {\r\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n      const userId = userData?.userId;\r\n      if (!userId) {\r\n        alert(\"Si è verificato un errore, l'ID utente non è disponibile.\");\r\n        return;\r\n      }\r\n\r\n      await updateUserData(userId, field, value);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 600px;\r\n  padding: 40px;\r\n  border-radius: 15px;\r\n  background: #ffffff;\r\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\r\n  margin-top: 100px;\r\n  height: auto;\r\n  text-align: left;\r\n}\r\n\r\nh1 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.user-info {\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.user-item {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.user-item strong {\r\n  margin-right: 5px;\r\n}\r\n\r\n.btn-edit {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-left: 5px;\r\n}\r\n\r\n.edit-icon {\r\n  width: 30px;\r\n  height: 30px;\r\n  margin-left: 5px;\r\n  vertical-align: middle;\r\n}\r\n\r\n.edit-input {\r\n  padding: 5px;\r\n  font-size: 14px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.btn-save {\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 0.3rem;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  min-width: 80px;\r\n}\r\n\r\n.btn-save:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":";OAoBmBA,UAAyB;;EAnBrCC,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAgB;;EAEpBA,KAAK,EAAC;AAAW;;EAJ5BC,GAAA;AAAA;mBAAA;mBAAA;mBAAA;;uBACEC,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,mBAAA,CA0BM,OA1BNC,UA0BM,G,0BAzBJD,mBAAA,CAAmC,YAA/B,4BAA0B,sBAC9BA,mBAAA,CAuBM,OAvBNE,UAuBM,I,kBAtBJJ,mBAAA,CAqBMK,SAAA,QA1BdC,WAAA,CAKoCC,KAAA,CAAAC,aAAa,EALjD,CAKqBC,KAAK,EAAEV,GAAG;yBAAvBC,mBAAA,CAqBM;MArBsCD,GAAG,EAAEA,GAAG;MAAED,KAAK,EAAC;QAC1DI,mBAAA,CAmBI,YAlBFA,mBAAA,CAAmC,gBAAAQ,gBAAA,CAAxBD,KAAK,CAACE,KAAK,IAAG,GAAC,iB,CACbJ,KAAA,CAAAK,YAAY,CAACb,GAAG,K,cAA7BC,mBAAA,CAA0D,QARtEa,UAAA,EAAAH,gBAAA,CAQ+CH,KAAA,CAAAO,QAAQ,CAACf,GAAG,qB,+BAC/CC,mBAAA,CAKE;MAddD,GAAA;MAWcgB,IAAI,EAAC,MAAM;MAXzB,uBAAAC,MAAA,IAYuBT,KAAA,CAAAU,cAAc,CAAClB,GAAG,IAAAiB,MAAA;MAC3BlB,KAAK,EAAC;4BAbpBoB,UAAA,K,cAYuBX,KAAA,CAAAU,cAAc,CAAClB,GAAG,G,IAIpBQ,KAAA,CAAAK,YAAY,CAACb,GAAG,K,cADzBC,mBAAA,CAMS;MArBrBD,GAAA;MAiBcD,KAAK,EAAC,UAAU;MACfqB,OAAK,EAAAH,MAAA,IAAEI,QAAA,CAAAC,YAAY,CAACtB,GAAG;uCAExBG,mBAAA,CAAkE;MAA7DoB,GAAyB,EAAzBzB,UAAyB;MAAC0B,GAAG,EAAC,UAAU;MAACzB,KAAK,EAAC;mDApBlE0B,UAAA,M,cAsBYxB,mBAAA,CAES;MAxBrBD,GAAA;MAsB2BD,KAAK,EAAC,UAAU;MAAEqB,OAAK,EAAAH,MAAA,IAAEI,QAAA,CAAAK,SAAS,CAAC1B,GAAG;OAAG,SAExD,iBAxBZ2B,UAAA,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}