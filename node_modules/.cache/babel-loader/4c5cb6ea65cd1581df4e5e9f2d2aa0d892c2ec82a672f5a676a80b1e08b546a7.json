{"ast":null,"code":"import PatientRadiographs from \"./PatientRadiographs.vue\";\nimport UploadRadiograph from \"./UploadRadiographs.vue\";\nimport { ref, onMounted } from \"vue\";\nimport { getPatientInfo, getRadiographs } from \"../services/api-service\";\nexport default {\n  components: {\n    PatientRadiographs,\n    UploadRadiograph\n  },\n  setup() {\n    const patient = ref(null);\n    const radiographs = ref([]);\n    const userId = localStorage.getItem(\"userId\"); // Presumendo che userId sia memorizzato in localStorage\n\n    onMounted(async () => {\n      if (userId) {\n        try {\n          // Recupera le informazioni del paziente\n          patient.value = await getPatientInfo(userId);\n          // Carica le radiografie per il paziente\n          radiographs.value = await getRadiographs(userId);\n        } catch (error) {\n          console.error(\"Errore nel caricamento delle informazioni del paziente:\", error);\n        }\n      } else {\n        console.error(\"Nessun userId trovato nel localStorage.\");\n      }\n    });\n    const handleUploadSuccess = async () => {\n      try {\n        radiographs.value = await getRadiographs(userId); // Ricarica le radiografie dopo un upload\n      } catch (error) {\n        console.error(\"Errore nel ricaricare le radiografie:\", error);\n      }\n    };\n    return {\n      patient,\n      radiographs,\n      handleUploadSuccess\n    };\n  }\n};","map":{"version":3,"names":["PatientRadiographs","UploadRadiograph","ref","onMounted","getPatientInfo","getRadiographs","components","setup","patient","radiographs","userId","localStorage","getItem","value","error","console","handleUploadSuccess"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/PatientDashboard.vue"],"sourcesContent":["<template>\n    <div class=\"dashboard\">\n      <div class=\"container\">\n        <div class=\"header\">\n          <h1>Le mie Radiografie</h1>\n        </div>\n  \n        <div v-if=\"patient\">\n          <h2>Dettagli Paziente</h2>\n          <div class=\"patient-details\">\n            <p><strong>Nome:</strong> {{ patient.name }}</p>\n            <p><strong>Cognome:</strong> {{ patient.family_name }}</p>\n            <p><strong>Email:</strong> {{ patient.email }}</p>\n            <p><strong>Data di nascita:</strong> {{ patient.birthdate }}</p>\n            <p><strong>Numero di telefono:</strong> {{ patient.phone_number }}</p>\n            <p><strong>Indirizzo:</strong> {{ patient.address }}</p>\n          </div>\n  \n          <div class=\"upload-section\">\n            <UploadRadiograph\n              @uploadSuccess=\"handleUploadSuccess\"\n              :patientId=\"patient.userId\"\n            />\n          </div>\n  \n          <div class=\"radiographs-section\">\n            <PatientRadiographs\n              :radiographs=\"radiographs\"\n              :patientId=\"patient.userId\"\n              :patientName=\"patient.name\"\n            />\n          </div>\n        </div>\n        <div v-else>\n          <p class=\"loading\">Caricamento informazioni paziente...</p>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import PatientRadiographs from \"./PatientRadiographs.vue\";\n  import UploadRadiograph from \"./UploadRadiographs.vue\";\n  import { ref, onMounted } from \"vue\";\n  import { getPatientInfo, getRadiographs } from \"../services/api-service\";\n  \n  export default {\n    components: {\n      PatientRadiographs,\n      UploadRadiograph,\n    },\n    setup() {\n      const patient = ref(null);\n      const radiographs = ref([]);\n      const userId = localStorage.getItem(\"userId\"); // Presumendo che userId sia memorizzato in localStorage\n  \n      onMounted(async () => {\n        if (userId) {\n          try {\n            // Recupera le informazioni del paziente\n            patient.value = await getPatientInfo(userId);\n            // Carica le radiografie per il paziente\n            radiographs.value = await getRadiographs(userId);\n          } catch (error) {\n            console.error(\n              \"Errore nel caricamento delle informazioni del paziente:\",\n              error\n            );\n          }\n        } else {\n          console.error(\"Nessun userId trovato nel localStorage.\");\n        }\n      });\n  \n      const handleUploadSuccess = async () => {\n        try {\n          radiographs.value = await getRadiographs(userId); // Ricarica le radiografie dopo un upload\n        } catch (error) {\n          console.error(\"Errore nel ricaricare le radiografie:\", error);\n        }\n      };\n  \n      return {\n        patient,\n        radiographs,\n        handleUploadSuccess,\n      };\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .dashboard {\n    background: #ffffff;\n    min-height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  \n  .container {\n    max-width: 600px;\n    padding: 40px;\n    border-radius: 15px;\n    background: #ffffff;\n    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n    margin-top: 100px;\n    width: 100%;\n  }\n  \n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n  }\n  \n  h1 {\n    font-size: 24px;\n    margin-bottom: 20px;\n  }\n  \n  h2 {\n    font-size: 18px;\n    margin-bottom: 20px;\n  }\n  \n  .patient-details p {\n    font-size: 14px;\n    margin-bottom: 10px;\n  }\n  \n  .upload-section,\n  .radiographs-section {\n    margin-top: 30px;\n  }\n  \n  .loading {\n    font-size: 14px;\n    color: #999;\n  }\n  </style>\n  "],"mappings":"AAyCE,OAAOA,kBAAiB,MAAO,0BAA0B;AACzD,OAAOC,gBAAe,MAAO,yBAAyB;AACtD,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,cAAc,EAAEC,cAAa,QAAS,yBAAyB;AAExE,eAAe;EACbC,UAAU,EAAE;IACVN,kBAAkB;IAClBC;EACF,CAAC;EACDM,KAAKA,CAAA,EAAG;IACN,MAAMC,OAAM,GAAIN,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMO,WAAU,GAAIP,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMQ,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;;IAE/CT,SAAS,CAAC,YAAY;MACpB,IAAIO,MAAM,EAAE;QACV,IAAI;UACF;UACAF,OAAO,CAACK,KAAI,GAAI,MAAMT,cAAc,CAACM,MAAM,CAAC;UAC5C;UACAD,WAAW,CAACI,KAAI,GAAI,MAAMR,cAAc,CAACK,MAAM,CAAC;QAClD,EAAE,OAAOI,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CACX,yDAAyD,EACzDA,KACF,CAAC;QACH;MACF,OAAO;QACLC,OAAO,CAACD,KAAK,CAAC,yCAAyC,CAAC;MAC1D;IACF,CAAC,CAAC;IAEF,MAAME,mBAAkB,GAAI,MAAAA,CAAA,KAAY;MACtC,IAAI;QACFP,WAAW,CAACI,KAAI,GAAI,MAAMR,cAAc,CAACK,MAAM,CAAC,EAAE;MACpD,EAAE,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D;IACF,CAAC;IAED,OAAO;MACLN,OAAO;MACPC,WAAW;MACXO;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}