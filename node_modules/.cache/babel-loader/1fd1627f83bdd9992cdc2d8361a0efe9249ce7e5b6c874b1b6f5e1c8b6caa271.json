{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.onFileChange && $options.onFileChange(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.submitImage && $options.submitImage(...args))\n  }, \"Predict\"), $data.predictedClass !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \" Predicted Class: \" + _toDisplayString($data.predictedClass), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","type","onChange","_cache","args","$options","onFileChange","accept","onClick","submitImage","$data","predictedClass","_hoisted_1","_toDisplayString","_createCommentVNode"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\PredictRadiography.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <input type=\"file\" @change=\"onFileChange\" accept=\"image/*\" />\r\n      <button @click=\"submitImage\">Predict</button>\r\n      <div v-if=\"predictedClass !== null\">\r\n        Predicted Class: {{ predictedClass }}\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        selectedFile: null,\r\n        predictedClass: null,\r\n      };\r\n    },\r\n    methods: {\r\n      onFileChange(event) {\r\n        this.selectedFile = event.target.files[0];\r\n      },\r\n      async submitImage() {\r\n        if (!this.selectedFile) return;\r\n  \r\n        const formData = new FormData();\r\n        formData.append('file', this.selectedFile);\r\n  \r\n        try {\r\n          const response = await axios.post('http://127.0.0.1:5000/predict', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          });\r\n  \r\n          this.predictedClass = response.data.predicted_class;\r\n        } catch (error) {\r\n          console.error('Error predicting image:', error);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CAMM,cALJC,mBAAA,CAA6D;IAAtDC,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IAAEG,MAAM,EAAC;qCACjDP,mBAAA,CAA6C;IAApCQ,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAI,WAAA,IAAAJ,QAAA,CAAAI,WAAA,IAAAL,IAAA,CAAW;KAAE,SAAO,GACzBM,KAAA,CAAAC,cAAc,a,cAAzBZ,mBAAA,CAEM,OANZa,UAAA,EAI0C,oBACjB,GAAAC,gBAAA,CAAGH,KAAA,CAAAC,cAAc,oBAL1CG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}