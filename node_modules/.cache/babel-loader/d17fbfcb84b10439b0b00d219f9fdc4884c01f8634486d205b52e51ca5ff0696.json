{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nimport _imports_0 from '@/assets/modify.svg';\nconst _hoisted_1 = {\n  class: \"profile\"\n};\nconst _hoisted_2 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_3 = {\n  class: \"user-info\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = [\"onUpdate:modelValue\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", {\n    class: \"mb-4\"\n  }, \"Benvenuto nel tuo Profilo!\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.displayFields, (value, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: key,\n      class: \"user-item\"\n    }, [_createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, _toDisplayString(value.label) + \":\", 1 /* TEXT */), !$data.editingField[key] ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString($data.userData[key]), 1 /* TEXT */)) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 1,\n      type: \"text\",\n      \"onUpdate:modelValue\": $event => $data.editableValues[key] = $event,\n      class: \"edit-input\"\n    }, null, 8 /* PROPS */, _hoisted_5)), [[_vModelText, $data.editableValues[key]]])]), !$data.editingField[key] ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      class: \"btn-edit\",\n      onClick: $event => $options.startEditing(key)\n    }, [...(_cache[0] || (_cache[0] = [_createElementVNode(\"img\", {\n      src: _imports_0,\n      alt: \"Modifica\",\n      class: \"edit-icon\"\n    }, null, -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_6)) : (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      class: \"btn-save\",\n      onClick: $event => $options.saveField(key)\n    }, \"Salva\", 8 /* PROPS */, _hoisted_7))]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_imports_0","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","displayFields","value","_toDisplayString","label","editingField","_hoisted_4","userData","type","$event","editableValues","_hoisted_5","onClick","$options","startEditing","src","alt","_hoisted_6","saveField","_hoisted_7"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/views/ProfilePage.vue"],"sourcesContent":["<template>\n  <div class=\"profile\">\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4\">Benvenuto nel tuo Profilo!</h2>\n      <div class=\"user-info\">\n        <div v-for=\"(value, key) in displayFields\" :key=\"key\" class=\"user-item\">\n          <p>\n            <strong>{{ value.label }}:</strong>\n            <span v-if=\"!editingField[key]\">{{ userData[key] }}</span>\n            <input\n              v-else\n              type=\"text\"\n              v-model=\"editableValues[key]\"\n              class=\"edit-input\"\n            />\n          </p>\n          <button\n            v-if=\"!editingField[key]\"\n            class=\"btn-edit\"\n            @click=\"startEditing(key)\"\n          >\n            <img src=\"@/assets/modify.svg\" alt=\"Modifica\" class=\"edit-icon\" />\n          </button>\n          <button v-else class=\"btn-save\" @click=\"saveField(key)\">Salva</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ProfilePage\",\n  data() {\n    return {\n      userData: {},\n      editingField: {},\n      editableValues: {},\n      displayFields: {\n        name: { label: \"Nome\" },\n        family_name: { label: \"Cognome\" },\n        username: { label: \"Username\" },\n        email: { label: \"Email\" },\n        birthdate: { label: \"Data di Nascita\" },\n        phone_number: { label: \"Telefono\" },\n        address: { label: \"Indirizzo\" },\n        cap_code: { label: \"CAP\" },\n        gender: { label: \"Genere\" },\n        tax_code: { label: \"Codice Fiscale\" },\n      },\n    };\n  },\n  mounted() {\n    this.loadUserData();\n  },\n  methods: {\n    loadUserData() {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const userId = userData?.userId;\n      if (!userId) {\n        console.error(\"ID utente non definito\");\n        return;\n      }\n\n      fetch(`http://localhost:5000/get_user/${userId}`)\n        .then((response) =>\n          response.ok\n            ? response.json()\n            : Promise.reject(\"Errore nel recupero dei dati utente\")\n        )\n        .then((data) => {\n          this.userData = data;\n          this.resetEditableValues();\n        })\n        .catch((error) => {\n          console.error(\"Errore:\", error);\n          alert(\n            \"Si è verificato un errore durante il caricamento dei dati utente.\"\n          );\n        });\n    },\n    resetEditableValues() {\n      // Imposta editableValues e editingField\n      Object.keys(this.displayFields).forEach((key) => {\n        this.editableValues[key] = this.userData[key];\n        this.editingField[key] = false;\n      });\n    },\n    startEditing(field) {\n      this.editingField[field] = true;\n    },\n    saveField(field) {\n      const newValue = this.editableValues[field];\n      if (newValue !== this.userData[field]) {\n        this.updateUserData(field, newValue);\n      }\n      this.editingField[field] = false;\n    },\n    updateUserData(field, value) {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const userId = userData?.userId;\n      if (!userId) {\n        alert(\"Si è verificato un errore, l'ID utente non è disponibile.\");\n        return;\n      }\n\n      fetch(\"http://localhost:5000/update_user\", {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ userId, [field]: value }),\n      })\n        .then((response) => {\n          if (!response.ok) throw new Error(\"Errore nel salvataggio dei dati\");\n          alert(\"Informazione aggiornata con successo!\");\n          this.loadUserData();\n        })\n        .catch((error) => {\n          console.error(\"Errore:\", error);\n          alert(\"Si è verificato un errore durante l'aggiornamento.\");\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  max-width: 600px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 100px;\n  height: auto;\n  text-align: left;\n}\n\nh2 {\n  font-size: 20px;\n  margin-bottom: 20px;\n}\n\n.user-info {\n  font-size: 14px;\n  line-height: 1.5;\n}\n\n.user-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n}\n\n.btn-edit,\n.btn-save {\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  margin-left: 10px;\n}\n\n.edit-icon {\n  width: 30px;\n  height: 30px;\n}\n\n.edit-input {\n  padding: 5px;\n  font-size: 14px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n}\n\n.btn-save {\n  background-color: #007bff;\n  color: white;\n  padding: 5px 10px;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.btn-save:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":";OAqBiBA,UAAyB;;EApBnCC,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAgB;;EAEpBA,KAAK,EAAC;AAAW;;EAJ5BC,GAAA;AAAA;mBAAA;mBAAA;mBAAA;;uBACEC,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJC,mBAAA,CAwBM,OAxBNC,UAwBM,G,0BAvBJD,mBAAA,CAAgD;IAA5CJ,KAAK,EAAC;EAAM,GAAC,4BAA0B,sBAC3CI,mBAAA,CAqBM,OArBNE,UAqBM,I,kBApBJJ,mBAAA,CAmBMK,SAAA,QAxBdC,WAAA,CAKoCC,KAAA,CAAAC,aAAa,EALjD,CAKqBC,KAAK,EAAEV,GAAG;yBAAvBC,mBAAA,CAmBM;MAnBsCD,GAAG,EAAEA,GAAG;MAAED,KAAK,EAAC;QAC1DI,mBAAA,CASI,YARFA,mBAAA,CAAmC,gBAAAQ,gBAAA,CAAxBD,KAAK,CAACE,KAAK,IAAG,GAAC,iB,CACbJ,KAAA,CAAAK,YAAY,CAACb,GAAG,K,cAA7BC,mBAAA,CAA0D,QARtEa,UAAA,EAAAH,gBAAA,CAQ+CH,KAAA,CAAAO,QAAQ,CAACf,GAAG,qB,+BAC/CC,mBAAA,CAKE;MAddD,GAAA;MAWcgB,IAAI,EAAC,MAAM;MAXzB,uBAAAC,MAAA,IAYuBT,KAAA,CAAAU,cAAc,CAAClB,GAAG,IAAAiB,MAAA;MAC3BlB,KAAK,EAAC;4BAbpBoB,UAAA,K,cAYuBX,KAAA,CAAAU,cAAc,CAAClB,GAAG,G,MAKtBQ,KAAA,CAAAK,YAAY,CAACb,GAAG,K,cADzBC,mBAAA,CAMS;MAtBnBD,GAAA;MAkBYD,KAAK,EAAC,UAAU;MACfqB,OAAK,EAAAH,MAAA,IAAEI,QAAA,CAAAC,YAAY,CAACtB,GAAG;uCAExBG,mBAAA,CAAkE;MAA7DoB,GAAyB,EAAzBzB,UAAyB;MAAC0B,GAAG,EAAC,UAAU;MAACzB,KAAK,EAAC;mDArBhE0B,UAAA,M,cAuBUxB,mBAAA,CAAsE;MAvBhFD,GAAA;MAuByBD,KAAK,EAAC,UAAU;MAAEqB,OAAK,EAAAH,MAAA,IAAEI,QAAA,CAAAK,SAAS,CAAC1B,GAAG;OAAG,OAAK,iBAvBvE2B,UAAA,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}