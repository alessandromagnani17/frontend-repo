{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelDynamic as _vModelDynamic, withModifiers as _withModifiers, normalizeClass as _normalizeClass, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"reset-password\"\n};\nconst _hoisted_2 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"mb-4\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"mb-4\"\n};\nconst _hoisted_5 = {\n  key: 2,\n  class: \"text-danger\"\n};\nconst _hoisted_6 = {\n  key: 3\n};\nconst _hoisted_7 = {\n  class: \"input-group mt-3\"\n};\nconst _hoisted_8 = [\"type\"];\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = {\n  key: 0,\n  class: \"text-danger\"\n};\nconst _hoisted_11 = [\"disabled\"];\nconst _hoisted_12 = {\n  key: 4,\n  class: \"btn-group mt-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Titolo \"), !$data.successMessage ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_3, \"Reimposta la tua password\")) : _createCommentVNode(\"v-if\", true), $data.successMessage ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_4, _toDisplayString($data.successMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Messaggio di errore \"), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Campo per inserire la nuova password \"), !$data.successMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"new-password\"\n  }, \"Inserisci la nuova password:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"input\", {\n    id: \"new-password\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPassword = $event),\n    type: _ctx.showPassword ? 'text' : 'password',\n    class: _normalizeClass([\"form-control password-input\", {\n      'is-invalid': !_ctx.isPasswordValid && _ctx.passwordInputTouched\n    }]),\n    required: \"\",\n    onInput: _cache[1] || (_cache[1] = (...args) => _ctx.validatePassword && _ctx.validatePassword(...args)),\n    onPaste: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"])),\n    placeholder: \"Nuova password\"\n  }, null, 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_8), [[_vModelDynamic, $data.newPassword]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn eye-button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.toggleShowPassword && _ctx.toggleShowPassword(...args))\n  }, [_createElementVNode(\"img\", {\n    src: _ctx.showPassword ? require('@/assets/eye-off.svg') : require('@/assets/eye-on.svg'),\n    alt: \"Toggle Password Visibility\",\n    class: \"eye-icon\"\n  }, null, 8 /* PROPS */, _hoisted_9)])]), !_ctx.isPasswordValid && _ctx.passwordInputTouched ? (_openBlock(), _createElementBlock(\"small\", _hoisted_10, \" La password deve contenere almeno 8 caratteri, una lettera maiuscola, una minuscola e un numero. \")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    class: \"btn btn-primary mt-4\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.updatePassword && $options.updatePassword(...args)),\n    disabled: !_ctx.isPasswordValid\n  }, \" Aggiorna Password \", 8 /* PROPS */, _hoisted_11)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Bottone per il login dopo successo \"), $data.successMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary btn-next\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.goToLogin && $options.goToLogin(...args))\n  }, \" Esegui il login \")])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","$data","successMessage","_hoisted_3","_hoisted_4","_toDisplayString","errorMessage","_hoisted_5","_hoisted_6","for","_hoisted_7","id","_cache","$event","newPassword","type","_ctx","showPassword","_normalizeClass","isPasswordValid","passwordInputTouched","required","onInput","args","validatePassword","onPaste","_withModifiers","placeholder","_hoisted_8","onClick","toggleShowPassword","src","require","alt","_hoisted_9","_hoisted_10","$options","updatePassword","disabled","_hoisted_11","_hoisted_12","goToLogin"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\ResetPassword.vue"],"sourcesContent":["<template>\n    <div class=\"reset-password\">\n      <div class=\"container mt-5\">\n        <!-- Titolo -->\n        <h2 class=\"mb-4\" v-if=\"!successMessage\">Reimposta la tua password</h2>\n        <h2 class=\"mb-4\" v-if=\"successMessage\">{{ successMessage }}</h2>\n  \n        <!-- Messaggio di errore -->\n        <p v-if=\"errorMessage\" class=\"text-danger\">{{ errorMessage }}</p>\n  \n        <!-- Campo per inserire la nuova password -->\n        <div v-if=\"!successMessage\">\n          <label for=\"new-password\">Inserisci la nuova password:</label>\n          <div class=\"input-group mt-3\">\n            <input\n              id=\"new-password\"\n              v-model=\"newPassword\"\n              :type=\"showPassword ? 'text' : 'password'\"\n              class=\"form-control password-input\"\n              :class=\"{\n                'is-invalid': !isPasswordValid && passwordInputTouched,\n              }\"\n              required\n              @input=\"validatePassword\"\n              @paste.prevent\n              placeholder=\"Nuova password\"\n            />\n            <button\n              type=\"button\"\n              class=\"btn eye-button\"\n              @click=\"toggleShowPassword\"\n            >\n              <img\n                :src=\"\n                  showPassword\n                    ? require('@/assets/eye-off.svg')\n                    : require('@/assets/eye-on.svg')\n                \"\n                alt=\"Toggle Password Visibility\"\n                class=\"eye-icon\"\n              />\n            </button>\n          </div>\n          <small v-if=\"!isPasswordValid && passwordInputTouched\" class=\"text-danger\">\n            La password deve contenere almeno 8 caratteri, una lettera maiuscola, una minuscola e un numero.\n          </small>\n          <button\n            class=\"btn btn-primary mt-4\"\n            @click=\"updatePassword\"\n            :disabled=\"!isPasswordValid\"\n          >\n            Aggiorna Password\n          </button>\n        </div>\n  \n        <!-- Bottone per il login dopo successo -->\n        <div class=\"btn-group mt-4\" v-if=\"successMessage\">\n          <button class=\"btn btn-primary btn-next\" @click=\"goToLogin\">\n            Esegui il login\n          </button>\n        </div>\n      </div>\n    </div>\n  </template>  \n\n<script>\nimport { resetPassword } from \"@/services/api-service\";\n\nexport default {\n  name: \"ResetPassword\",\n  data() {\n    return {\n      verificationMessage: \"Reimposta la tua password\",\n      successMessage: null, // Messaggio di successo\n      errorMessage: null, // Messaggio di errore\n      isLoading: false,\n      newPassword: \"\", // Valore della nuova password\n    };\n  },\n  methods: {\n    async updatePassword() {\n      if (!this.newPassword) {\n        this.errorMessage = \"La password non può essere vuota.\";\n        return;\n      }\n\n      console.log(\"Nuova psw: \" + this.newPassword);\n\n      try {\n        const response = await resetPassword(\n          this.$route.params.uid,\n          this.newPassword\n        );\n\n        // Imposta il messaggio di successo\n        this.successMessage =\n          \"La tua password è stata aggiornata con successo!\";\n        this.errorMessage = null; // Resetta l'errore in caso di successo\n        console.log(\"Risposta server --> \" + response.data.message);\n      } catch (error) {\n        this.errorMessage =\n          error.response?.data?.error ||\n          \"Errore durante l'aggiornamento della password.\";\n        this.successMessage = null; // Resetta il messaggio di successo in caso di errore\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    goToLogin() {\n      this.$router.push(\"/login\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n.reset-password {\n  background: #ffffff; /* Sfondo bianco, simile alla pagina di login */\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0); /* Rimuove ombre esterne */\n}\n\n.container {\n  max-width: 80%;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1); /* Simile alla shadow del login */\n  margin-top: 100px;\n  height: auto;\n  text-align: center; /* Centra il testo */\n  flex-grow: 1; /* Permette al contenuto principale di occupare lo spazio rimanente */\n  margin-left: 20px; /* Margine sinistro per distanziare il contenuto dalla sidebar */\n}\n\nh2 {\n  font-size: 18px; /* Uniforma il font size al login */\n  margin-bottom: 30px;\n}\n\np {\n  font-size: 14px;\n  color: #6c757d;\n}\n\n.btn-group .btn {\n  width: 100%; /* Assicura che i bottoni occupino l'intera larghezza */\n  margin-top: 20px;\n  padding: 10px;\n}\n\n.btn-primary {\n  background-color: #007bff;\n  color: white;\n  padding: 8px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 80%;\n  max-width: 300px;\n  min-width: 200px;\n  font-size: 13px;\n  transition: background-color 0.3s ease;\n  text-align: center;\n  display: inline-block;\n}\n\n.btn-primary:hover {\n  background-color: #0056b3;\n}\n\n.sidebar {\n  top: 0;\n  width: 250px; /* Imposta la larghezza della sidebar */\n  height: 100vh; /* Imposta l'altezza della sidebar al 100% della viewport */\n  padding: 20px; /* Padding interno */\n  background: linear-gradient(180deg, #212529, #343a40);\n}\n\n.sidebar .nav-link {\n  color: #cfd2d6;\n}\n\n.sidebar .nav-link:hover {\n  background-color: #495057;\n  border-radius: 5px;\n}\n\n.nav-link {\n  padding: 10px 15px; /* Aggiunge padding ai link per migliorarne l'aspetto */\n}\n\n@media (max-width: 767.98px) {\n  .navbar-brand {\n    font-size: 1.5rem;\n  }\n\n  .sidebar {\n    display: none;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}