{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      currentStep: 1,\n      loading: false,\n      showPassword: false,\n      showConfirmPassword: false,\n      showPasswordError: false,\n      isHover: false,\n      showDisabledIcon: false,\n      errors: {},\n      confirmPasswordTouched: false,\n      passwordInputTouched: false,\n      isDoctorRole: false,\n      doctors: [],\n      form: {\n        nome: \"\",\n        cognome: \"\",\n        gender: \"\",\n        data: \"\",\n        address: \"\",\n        cap_code: \"\",\n        tax_code: \"\",\n        telefono: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        role: \"\",\n        doctorID: \"\"\n      }\n    };\n  },\n  created() {\n    this.role = localStorage.getItem(\"userRole\") || \"\";\n    this.isDoctorRole = this.role === \"doctor\"; // Imposta isDoctorRole in base al ruolo\n\n    if (this.isDoctorRole) {\n      this.form.role = \"doctor\"; // Imposta il role a 'doctor' se l'utente è un dottore\n    } else {\n      this.form.role = \"patient\"; // Imposta il role a 'patient' se è un paziente\n      this.fetchDoctors();\n    }\n  },\n  computed: {\n    // Computed property per la validazione della password\n    isPasswordValid() {\n      const password = this.form.password || \"\";\n      const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,}$/;\n      return regex.test(password);\n    }\n  },\n  methods: {\n    goToHome() {\n      this.currentStep = 1;\n      this.successMessage = \"\";\n      this.form = {\n        nome: \"\",\n        cognome: \"\",\n        gender: \"\",\n        data: \"\",\n        address: \"\",\n        cap_code: \"\",\n        tax_code: \"\",\n        telefono: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      };\n      this.$router.push(\"/welcome\");\n    },\n    fetchDoctors() {\n      console.log(\"Sono dentro fetch doctors frontend\");\n      fetch(\"http://localhost:5000/api/doctors\").then(response => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      }).then(data => {\n        this.doctors = data; // Popola l'array con i dottori\n      }).catch(error => {\n        console.error(\"Errore nel recupero dei dottori:\", error);\n      });\n    },\n    correctDate() {\n      const dateParts = this.form.data.split(\"-\");\n      const year = parseInt(dateParts[0], 10);\n      const month = parseInt(dateParts[1], 10);\n      const day = parseInt(dateParts[2], 10);\n\n      // Correzione dell'anno\n      if (year >= 3000) {\n        dateParts[0] = \"2006\";\n      } else if (year === 0) {\n        dateParts[0] = \"1900\";\n      }\n\n      // Correzione del mese\n      if (month > 12) {\n        dateParts[1] = \"12\";\n      }\n\n      // Correzione del giorno\n      if (day > 31) {\n        dateParts[2] = \"31\";\n      }\n\n      // Imposta la data corretta\n      this.form.data = dateParts.join(\"-\");\n    },\n    goToNextStep() {\n      if (this.isStepValid(this.currentStep)) {\n        if (this.currentStep === 3) {\n          this.onSubmit();\n        } else {\n          this.currentStep++;\n        }\n      }\n    },\n    goToPreviousStep() {\n      this.currentStep--;\n    },\n    toggleShowPassword() {\n      this.showPassword = !this.showPassword;\n    },\n    toggleShowConfirmPassword() {\n      this.showConfirmPassword = !this.showConfirmPassword;\n    },\n    async onSubmit() {\n      if (this.isStepValid(3)) {\n        this.loading = true;\n        this.errors = {};\n        try {\n          const {\n            email,\n            password,\n            ...userData\n          } = this.form;\n          console.log(\"REGISTRAZIONE:\", JSON.stringify(userData, null, 2));\n          if (this.isDoctorRole) {\n            const response = await axios.post(\"http://127.0.0.1:5000/register\", {\n              email: email,\n              password: password,\n              // Invio della password al backend\n              nome: userData.nome,\n              cognome: userData.cognome,\n              gender: userData.gender,\n              data: userData.data,\n              address: userData.address,\n              cap_code: userData.cap_code,\n              tax_code: userData.tax_code,\n              telefono: userData.telefono,\n              username: userData.username,\n              role: userData.role,\n              doctorID: userData.doctorID\n            });\n            console.log(\"Response dal backend:\", response.data);\n          } else {\n            const response = await axios.post(\"http://127.0.0.1:5000/register\", {\n              email: email,\n              password: password,\n              // Invio della password al backend\n              nome: userData.nome,\n              cognome: userData.cognome,\n              gender: userData.gender,\n              data: userData.data,\n              address: userData.address,\n              cap_code: userData.cap_code,\n              tax_code: userData.tax_code,\n              telefono: userData.telefono,\n              username: userData.username,\n              role: userData.role,\n              doctorID: this.form.doctorID\n            });\n            console.log(\"Response dal backend:\", response.data);\n          }\n\n          // Imposta il messaggio di successo\n          this.successMessage = \"Registrazione avvenuta con successo! Controlla la tua email per verificare il tuo account.\";\n          this.loading = false;\n          this.currentStep = 4; // Passa al passo del messaggio di successo\n        } catch (error) {\n          console.error(\"Errore nella registrazione:\", error);\n          if (error.response) {\n            console.error(\"Dati risposta:\", error.response.data);\n            this.errors.general = error.response.data.error || \"Registrazione fallita\";\n          } else {\n            this.errors.general = error.message;\n          }\n          alert(\"Errore nella registrazione: \" + this.errors.general);\n          this.loading = false;\n        }\n      }\n    },\n    isStepValid(step) {\n      if (step === 1) {\n        return this.form.nome && this.form.cognome && this.form.gender && this.form.data;\n      } else if (step === 2) {\n        return this.form.address && this.form.cap_code && this.form.tax_code && this.form.telefono;\n      } else if (step === 3) {\n        return this.form.username && this.form.email && this.isPasswordValid && this.confirmPasswordTouched && this.form.password === this.form.confirmPassword;\n      }\n      return false;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","currentStep","loading","showPassword","showConfirmPassword","showPasswordError","isHover","showDisabledIcon","errors","confirmPasswordTouched","passwordInputTouched","isDoctorRole","doctors","form","nome","cognome","gender","address","cap_code","tax_code","telefono","username","email","password","confirmPassword","role","doctorID","created","localStorage","getItem","fetchDoctors","computed","isPasswordValid","regex","test","methods","goToHome","successMessage","$router","push","console","log","fetch","then","response","ok","Error","json","catch","error","correctDate","dateParts","split","year","parseInt","month","day","join","goToNextStep","isStepValid","onSubmit","goToPreviousStep","toggleShowPassword","toggleShowConfirmPassword","userData","JSON","stringify","post","general","message","alert","step"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\UserRegister.vue"],"sourcesContent":["<template>\r\n  <div class=\"register\">\r\n    <div class=\"container mt-5\">\r\n      <div class=\"header\">\r\n        <button\r\n          v-if=\"currentStep > 1\"\r\n          class=\"back-button\"\r\n          @click=\"goToPreviousStep\"\r\n        >\r\n          <img src=\"@/assets/back-icon.svg\" alt=\"Indietro\" class=\"back-icon\" />\r\n        </button>\r\n      </div>\r\n\r\n      <span class=\"step-title\">Passaggio {{ currentStep }} di 4</span>\r\n      <h2 class=\"mb-4\">Crea un Account {{ role }}</h2>\r\n\r\n      <form @submit.prevent=\"onSubmit\">\r\n        <!-- Step 1: Dati Anagrafici -->\r\n        <div v-if=\"currentStep === 1\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"nome\" class=\"form-label\">Nome</label>\r\n            <input\r\n              id=\"nome\"\r\n              v-model=\"form.nome\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              style=\"text-transform: uppercase\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label for=\"cognome\" class=\"form-label\">Cognome</label>\r\n            <input\r\n              id=\"cognome\"\r\n              v-model=\"form.cognome\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              style=\"text-transform: uppercase\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label for=\"gender\" class=\"form-label\">Genere</label>\r\n            <select\r\n              id=\"gender\"\r\n              v-model=\"form.gender\"\r\n              class=\"form-control\"\r\n              required\r\n            >\r\n              <option value=\"Male\">MASCHIO</option>\r\n              <option value=\"Female\">FEMMINA</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"data\" class=\"form-label\">Data di Nascita</label>\r\n            <input\r\n              id=\"data\"\r\n              v-model=\"form.data\"\r\n              type=\"date\"\r\n              class=\"form-control\"\r\n              @change=\"correctDate\"\r\n              style=\"text-transform: uppercase\"\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Step 2: Dati di Contatto -->\r\n        <div v-if=\"currentStep === 2\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"address\" class=\"form-label\">Indirizzo</label>\r\n            <input\r\n              id=\"address\"\r\n              v-model=\"form.address\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              style=\"text-transform: uppercase\"\r\n              required\r\n              placeholder=\"(es. Via Roma 1)\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label for=\"cap_code\" class=\"form-label\">CAP</label>\r\n            <input\r\n              id=\"cap_code\"\r\n              v-model=\"form.cap_code\"\r\n              type=\"number\"\r\n              class=\"form-control\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label for=\"tax_code\" class=\"form-label\">Codice Fiscale</label>\r\n            <input\r\n              id=\"tax_code\"\r\n              v-model=\"form.tax_code\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              style=\"text-transform: uppercase\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label for=\"telefono\" class=\"form-label\">Numero di Telefono</label>\r\n            <input\r\n              id=\"telefono\"\r\n              v-model=\"form.telefono\"\r\n              type=\"tel\"\r\n              class=\"form-control\"\r\n              required\r\n              placeholder=\"(es. +391234567890)\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Step 3: Credenziali -->\r\n        <div v-if=\"currentStep === 3\">\r\n          <div v-if=\"currentStep === 3 && isDoctorRole\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"doctorID\" class=\"form-label\">Doctor ID</label>\r\n              <input\r\n                id=\"doctorID\"\r\n                v-model=\"form.doctorID\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div v-if=\"currentStep === 3 && !isDoctorRole\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"doctorID\" class=\"form-label\"\r\n                >Seleziona il dottore</label\r\n              >\r\n              <select\r\n                id=\"doctorID\"\r\n                v-model=\"form.doctorID\"\r\n                class=\"form-control\"\r\n                required\r\n              >\r\n                <option value=\"\" disabled>Seleziona un dottore</option>\r\n                <option\r\n                  v-for=\"doctor in doctors\"\r\n                  :key=\"doctor.doctorID\"\r\n                  :value=\"doctor.doctorID\"\r\n                >\r\n                  {{ doctor.name }} {{ doctor.family_name }} (ID:\r\n                  {{ doctor.doctorID }})\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label for=\"username\" class=\"form-label\">Username</label>\r\n            <input\r\n              id=\"username\"\r\n              v-model=\"form.username\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label for=\"email\" class=\"form-label\">Email</label>\r\n            <input\r\n              id=\"email\"\r\n              v-model=\"form.email\"\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label for=\"password\" class=\"form-label\"\r\n              >Password\r\n              <span\r\n                class=\"info-icon\"\r\n                title=\"Requisiti per la password: min 8 caratteri, almeno una maiuscola, una minuscola un numero e un carattere speciale.\"\r\n              >\r\n                <img\r\n                  src=\"@/assets/info-icon.svg\"\r\n                  alt=\"Info\"\r\n                  class=\"info-image\"\r\n                />\r\n              </span>\r\n            </label>\r\n            <div class=\"input-group\">\r\n              <input\r\n                id=\"password\"\r\n                v-model=\"form.password\"\r\n                :type=\"showPassword ? 'text' : 'password'\"\r\n                class=\"form-control password-input\"\r\n                :class=\"{\r\n                  'is-invalid': !isPasswordValid && passwordInputTouched,\r\n                }\"\r\n                required\r\n                @input=\"passwordInputTouched = true\"\r\n                @paste.prevent\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn eye-button\"\r\n                @click=\"toggleShowPassword\"\r\n              >\r\n                <img\r\n                  :src=\"\r\n                    showPassword\r\n                      ? require('@/assets/eye-off.svg')\r\n                      : require('@/assets/eye-on.svg')\r\n                  \"\r\n                  alt=\"Toggle Password Visibility\"\r\n                  class=\"eye-icon\"\r\n                />\r\n              </button>\r\n            </div>\r\n            <div\r\n              v-if=\"passwordInputTouched && !isPasswordValid\"\r\n              class=\"text-danger mt-1\"\r\n            >\r\n              La password deve contenere almeno: un numero, una lettera\r\n              maiuscola, una lettera minuscola e un carattere speciale ed essere\r\n              lunga almeno 8 caratteri.\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label for=\"confirmPassword\" class=\"form-label\"\r\n              >Conferma Password</label\r\n            >\r\n            <div class=\"input-group\">\r\n              <input\r\n                id=\"confirmPassword\"\r\n                v-model=\"form.confirmPassword\"\r\n                :type=\"showConfirmPassword ? 'text' : 'password'\"\r\n                class=\"form-control password-input\"\r\n                :class=\"{ 'is-invalid': showPasswordError }\"\r\n                required\r\n                @input=\"confirmPasswordTouched = true\"\r\n                @paste.prevent\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn eye-button\"\r\n                @click=\"toggleShowConfirmPassword\"\r\n              >\r\n                <img\r\n                  :src=\"\r\n                    showConfirmPassword\r\n                      ? require('@/assets/eye-off.svg')\r\n                      : require('@/assets/eye-on.svg')\r\n                  \"\r\n                  alt=\"Toggle Password Visibility\"\r\n                  class=\"eye-icon\"\r\n                />\r\n              </button>\r\n            </div>\r\n            <div\r\n              v-if=\"\r\n                confirmPasswordTouched && form.password !== form.confirmPassword\r\n              \"\r\n              class=\"text-danger mt-1\"\r\n            >\r\n              Le password non corrispondono.\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Bottone di avanzamento o submit -->\r\n        <div v-if=\"currentStep < 3\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary btn-next\"\r\n            :disabled=\"!isStepValid(currentStep)\"\r\n            @click=\"goToNextStep\"\r\n            @mouseover=\"isHover = true\"\r\n            @mouseleave=\"isHover = false\"\r\n            @mouseenter=\"showDisabledIcon = !isStepValid(currentStep)\"\r\n          >\r\n            Avanti\r\n            <span\r\n              v-if=\"!isStepValid(currentStep) && isHover\"\r\n              class=\"disabled-icon\"\r\n            >\r\n              <img\r\n                src=\"@/assets/prohibition-icon.svg\"\r\n                alt=\"Non disponibile\"\r\n                class=\"prohibition-icon\"\r\n              />\r\n            </span>\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Submit button (Step 3) -->\r\n        <div v-if=\"currentStep === 3\">\r\n          <button\r\n            type=\"submit\"\r\n            class=\"btn btn-primary btn-next\"\r\n            :disabled=\"loading || !isStepValid(currentStep)\"\r\n          >\r\n            <span v-if=\"loading\">Registrazione...</span>\r\n            <span v-else>Registrati</span>\r\n          </button>\r\n\r\n          <!-- Error message -->\r\n          <div v-if=\"errors.general\" class=\"invalid-feedback mt-3\">\r\n            {{ errors.general }}\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"currentStep === 4\">\r\n          <p>{{ successMessage }}</p>\r\n          <button class=\"btn btn-primary btn-next\" @click=\"goToHome\">\r\n            Torna alla home\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- Loading overlay -->\r\n    <div v-if=\"loading\" class=\"loading-overlay\">\r\n      <div class=\"loading-icon\">\r\n        <img src=\"@/assets/loading-icon.svg\" alt=\"Loading...\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      currentStep: 1,\r\n      loading: false,\r\n      showPassword: false,\r\n      showConfirmPassword: false,\r\n      showPasswordError: false,\r\n      isHover: false,\r\n      showDisabledIcon: false,\r\n      errors: {},\r\n      confirmPasswordTouched: false,\r\n      passwordInputTouched: false,\r\n      isDoctorRole: false,\r\n      doctors: [],\r\n      form: {\r\n        nome: \"\",\r\n        cognome: \"\",\r\n        gender: \"\",\r\n        data: \"\",\r\n        address: \"\",\r\n        cap_code: \"\",\r\n        tax_code: \"\",\r\n        telefono: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        role: \"\",\r\n        doctorID: \"\",\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.role = localStorage.getItem(\"userRole\") || \"\";\r\n    this.isDoctorRole = this.role === \"doctor\"; // Imposta isDoctorRole in base al ruolo\r\n\r\n    if (this.isDoctorRole) {\r\n      this.form.role = \"doctor\"; // Imposta il role a 'doctor' se l'utente è un dottore\r\n    } else {\r\n      this.form.role = \"patient\"; // Imposta il role a 'patient' se è un paziente\r\n      this.fetchDoctors();\r\n    }\r\n  },\r\n  computed: {\r\n    // Computed property per la validazione della password\r\n    isPasswordValid() {\r\n      const password = this.form.password || \"\";\r\n      const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,}$/;\r\n      return regex.test(password);\r\n    },\r\n  },\r\n  methods: {\r\n    goToHome() {\r\n      this.currentStep = 1;\r\n      this.successMessage = \"\";\r\n      this.form = {\r\n        nome: \"\",\r\n        cognome: \"\",\r\n        gender: \"\",\r\n        data: \"\",\r\n        address: \"\",\r\n        cap_code: \"\",\r\n        tax_code: \"\",\r\n        telefono: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      };\r\n\r\n      this.$router.push(\"/welcome\");\r\n    },\r\n    fetchDoctors() {\r\n      console.log(\"Sono dentro fetch doctors frontend\");\r\n      fetch(\"http://localhost:5000/api/doctors\")\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(\"Network response was not ok\");\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          this.doctors = data; // Popola l'array con i dottori\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Errore nel recupero dei dottori:\", error);\r\n        });\r\n    },\r\n    correctDate() {\r\n      const dateParts = this.form.data.split(\"-\");\r\n      const year = parseInt(dateParts[0], 10);\r\n      const month = parseInt(dateParts[1], 10);\r\n      const day = parseInt(dateParts[2], 10);\r\n\r\n      // Correzione dell'anno\r\n      if (year >= 3000) {\r\n        dateParts[0] = \"2006\";\r\n      } else if (year === 0) {\r\n        dateParts[0] = \"1900\";\r\n      }\r\n\r\n      // Correzione del mese\r\n      if (month > 12) {\r\n        dateParts[1] = \"12\";\r\n      }\r\n\r\n      // Correzione del giorno\r\n      if (day > 31) {\r\n        dateParts[2] = \"31\";\r\n      }\r\n\r\n      // Imposta la data corretta\r\n      this.form.data = dateParts.join(\"-\");\r\n    },\r\n    goToNextStep() {\r\n      if (this.isStepValid(this.currentStep)) {\r\n        if (this.currentStep === 3) {\r\n          this.onSubmit();\r\n        } else {\r\n          this.currentStep++;\r\n        }\r\n      }\r\n    },\r\n    goToPreviousStep() {\r\n      this.currentStep--;\r\n    },\r\n    toggleShowPassword() {\r\n      this.showPassword = !this.showPassword;\r\n    },\r\n    toggleShowConfirmPassword() {\r\n      this.showConfirmPassword = !this.showConfirmPassword;\r\n    },\r\n    async onSubmit() {\r\n      if (this.isStepValid(3)) {\r\n        this.loading = true;\r\n        this.errors = {};\r\n\r\n        try {\r\n          const { email, password, ...userData } = this.form;\r\n          console.log(\"REGISTRAZIONE:\", JSON.stringify(userData, null, 2));\r\n\r\n          if (this.isDoctorRole) {\r\n            const response = await axios.post(\r\n              \"http://127.0.0.1:5000/register\",\r\n              {\r\n                email: email,\r\n                password: password, // Invio della password al backend\r\n                nome: userData.nome,\r\n                cognome: userData.cognome,\r\n                gender: userData.gender,\r\n                data: userData.data,\r\n                address: userData.address,\r\n                cap_code: userData.cap_code,\r\n                tax_code: userData.tax_code,\r\n                telefono: userData.telefono,\r\n                username: userData.username,\r\n                role: userData.role,\r\n                doctorID: userData.doctorID,\r\n              }\r\n            );\r\n\r\n            console.log(\"Response dal backend:\", response.data);\r\n          } else {\r\n            const response = await axios.post(\r\n              \"http://127.0.0.1:5000/register\",\r\n              {\r\n                email: email,\r\n                password: password, // Invio della password al backend\r\n                nome: userData.nome,\r\n                cognome: userData.cognome,\r\n                gender: userData.gender,\r\n                data: userData.data,\r\n                address: userData.address,\r\n                cap_code: userData.cap_code,\r\n                tax_code: userData.tax_code,\r\n                telefono: userData.telefono,\r\n                username: userData.username,\r\n                role: userData.role,\r\n                doctorID: this.form.doctorID,\r\n              }\r\n            );\r\n\r\n            console.log(\"Response dal backend:\", response.data);\r\n          }\r\n\r\n          // Imposta il messaggio di successo\r\n          this.successMessage =\r\n            \"Registrazione avvenuta con successo! Controlla la tua email per verificare il tuo account.\";\r\n          this.loading = false;\r\n          this.currentStep = 4; // Passa al passo del messaggio di successo\r\n        } catch (error) {\r\n          console.error(\"Errore nella registrazione:\", error);\r\n          if (error.response) {\r\n            console.error(\"Dati risposta:\", error.response.data);\r\n            this.errors.general =\r\n              error.response.data.error || \"Registrazione fallita\";\r\n          } else {\r\n            this.errors.general = error.message;\r\n          }\r\n          alert(\"Errore nella registrazione: \" + this.errors.general);\r\n          this.loading = false;\r\n        }\r\n      }\r\n    },\r\n\r\n    isStepValid(step) {\r\n      if (step === 1) {\r\n        return (\r\n          this.form.nome &&\r\n          this.form.cognome &&\r\n          this.form.gender &&\r\n          this.form.data\r\n        );\r\n      } else if (step === 2) {\r\n        return (\r\n          this.form.address &&\r\n          this.form.cap_code &&\r\n          this.form.tax_code &&\r\n          this.form.telefono\r\n        );\r\n      } else if (step === 3) {\r\n        return (\r\n          this.form.username &&\r\n          this.form.email &&\r\n          this.isPasswordValid &&\r\n          this.confirmPasswordTouched &&\r\n          this.form.password === this.form.confirmPassword\r\n        );\r\n      }\r\n      return false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.register {\r\n  background: #ffffff; /* Sfondo bianco */\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0);\r\n}\r\n\r\n.container {\r\n  max-width: 400px;\r\n  padding: 40px;\r\n  border-radius: 15px;\r\n  background: #ffffff;\r\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\r\n  margin-top: 100px;\r\n  height: auto;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.back-button {\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-left: -10px;\r\n}\r\n\r\n.back-icon {\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n\r\n.step-title {\r\n  font-size: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\nh2 {\r\n  font-size: 18px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.form-label {\r\n  font-size: 12px;\r\n}\r\n\r\n.form-control {\r\n  background: #f2f2f2;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 12px;\r\n}\r\n\r\n.input-group {\r\n  position: relative;\r\n}\r\n\r\n.text-danger {\r\n  font-size: 0.8rem; /* Font più piccolo (puoi modificarlo a piacere) */\r\n}\r\n\r\n.eye-button {\r\n  background: transparent;\r\n  border: 1px solid #ccc;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 46px;\r\n}\r\n\r\n.eye-icon {\r\n  width: 18px;\r\n  height: 18px;\r\n  margin: auto;\r\n}\r\n\r\n.info-icon {\r\n  margin-left: 5px;\r\n  display: inline-block;\r\n  font-size: 12px;\r\n}\r\n\r\n.info-image {\r\n  width: 15px;\r\n  height: 15px;\r\n  vertical-align: middle;\r\n}\r\n\r\n.btn-next {\r\n  width: 100%;\r\n  margin-top: 15px;\r\n  padding: 0.4rem;\r\n  cursor: pointer;\r\n  font-size: 13px; /* Dimensione del testo più piccola */\r\n}\r\n\r\n.btn-next {\r\n  font-size: 13px; /* Dimensione del testo più piccola per il pulsante \"Avanti\" */\r\n}\r\n\r\n.btn-next:hover {\r\n  background-color: #c0c0c0;\r\n}\r\n\r\n.loading-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 9999;\r\n}\r\n\r\n.loading-icon {\r\n  width: 50px;\r\n}\r\n\r\n.disabled-icon {\r\n  margin-left: 10px;\r\n}\r\n\r\n.prohibition-icon {\r\n  width: 16px;\r\n  height: 16px;\r\n  vertical-align: middle;\r\n  display: inline-block;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}