{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"welcome\"\n};\nconst _hoisted_2 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"alert alert-info\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"select-container mb-4\"\n};\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = {\n  key: 1,\n  class: \"mt-2\"\n};\nconst _hoisted_8 = {\n  key: 0\n};\nconst _hoisted_9 = {\n  key: 1\n};\nconst _hoisted_10 = {\n  key: 2\n};\nconst _hoisted_11 = {\n  key: 2,\n  class: \"alert alert-info mt-3\"\n};\nconst _hoisted_12 = {\n  key: 3,\n  class: \"row mt-5\"\n};\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = [\"src\"];\nconst _hoisted_15 = {\n  class: \"card-body\"\n};\nconst _hoisted_16 = {\n  class: \"card-title\"\n};\nconst _hoisted_17 = {\n  key: 4\n};\nconst _hoisted_18 = {\n  key: 0,\n  class: \"alert alert-danger mt-3\"\n};\nconst _hoisted_19 = {\n  key: 5\n};\nconst _hoisted_20 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[8] || (_cache[8] = _createElementVNode(\"h5\", {\n    class: \"carica-radiografia\"\n  }, [_createElementVNode(\"strong\", null, \"Visualizza radiografie\")], -1 /* HOISTED */)), $data.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"Caricamento...\")) : _ctx.role === 'doctor' || _ctx.role === 'patient' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_ctx.role === 'doctor' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [$data.patients.length > 0 && !_ctx.selectedPatientId ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    key: 0,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedPatientId = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.onPatientChange && $options.onPatientChange(...args)),\n    class: \"form-select custom-select\"\n  }, [_cache[3] || (_cache[3] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\",\n    selected: \"\"\n  }, \"Seleziona un paziente\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.patients, patient => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: patient.userId,\n      value: patient.userId\n    }, _toDisplayString(patient.name) + \" \" + _toDisplayString(patient.family_name) + \" (ID: \" + _toDisplayString(patient.userId) + \") \", 9 /* TEXT, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */)), [[_vModelSelect, _ctx.selectedPatientId]]) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _ctx.selectedPatientId ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_ctx.role === 'doctor' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_cache[4] || (_cache[4] = _createTextVNode(\" Utente selezionato: \")), _createElementVNode(\"strong\", null, _toDisplayString(_ctx.selectedPatientName) + \" \" + _toDisplayString(_ctx.selectedPatientSurname) + \" (ID: \" + _toDisplayString(_ctx.selectedPatientId) + \")\", 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_cache[5] || (_cache[5] = _createTextVNode(\" Benvenuto \")), _createElementVNode(\"strong\", null, _toDisplayString(_ctx.selectedPatientName) + \" \" + _toDisplayString(_ctx.selectedPatientSurname), 1 /* TEXT */)])), _ctx.role === 'doctor' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.changePatient && $options.changePatient(...args)),\n    class: \"btn-change-patient\"\n  }, \" Cambia paziente \")])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _ctx.isLoadingRadiographs ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \" Caricamento delle radiografie... \")) : _createCommentVNode(\"v-if\", true), _ctx.userRadiographs.length > 0 && _ctx.selectedPatientId ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.userRadiographs, (radiograph, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: radiograph.radiography_id,\n      onClick: $event => _ctx.goToRadiographDetail(index, radiograph.original_image, radiograph.gradcam_image),\n      style: {\n        \"cursor\": \"pointer\"\n      },\n      class: \"card\"\n    }, [_createElementVNode(\"img\", {\n      src: radiograph.original_image,\n      class: \"card-img-top\",\n      alt: \"Radiografia\"\n    }, null, 8 /* PROPS */, _hoisted_14), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"h5\", _hoisted_16, \"Radiografia \" + _toDisplayString(index + 1), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_13);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_ctx.errorNoRadiographies ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"p\", null, \" L'utente \" + _toDisplayString(_ctx.selectedPatientName) + \" \" + _toDisplayString(_ctx.selectedPatientSurname) + \" non ha radiografie. \", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])), $data.patients.length == 0 && _ctx.role === 'doctor' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, _cache[6] || (_cache[6] = [_createElementVNode(\"p\", null, \"NON hai pazienti.\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_20, _cache[7] || (_cache[7] = [_createElementVNode(\"p\", null, \"You do not have permission to view radiographs.\", -1 /* HOISTED */)])))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$data","isLoading","_hoisted_3","_ctx","role","_hoisted_4","_hoisted_5","patients","length","selectedPatientId","_cache","$event","onChange","args","$options","onPatientChange","value","disabled","selected","_Fragment","_renderList","patient","userId","name","_toDisplayString","family_name","_hoisted_6","_createCommentVNode","_hoisted_7","_hoisted_8","_createTextVNode","selectedPatientName","selectedPatientSurname","_hoisted_9","_hoisted_10","onClick","changePatient","isLoadingRadiographs","_hoisted_11","userRadiographs","_hoisted_12","radiograph","index","radiography_id","goToRadiographDetail","original_image","gradcam_image","style","src","alt","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_13","_hoisted_17","errorNoRadiographies","_hoisted_18","_hoisted_19","_hoisted_20"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/PredictRadiograph.vue"],"sourcesContent":["<template>\n  <div class=\"welcome\">\n    <div class=\"container mt-5\">\n      <h5 class=\"carica-radiografia\"><strong>Visualizza radiografie</strong></h5>\n      <div v-if=\"isLoading\" class=\"alert alert-info\">Caricamento...</div>\n      <div v-else-if=\"role === 'doctor' || role === 'patient'\">\n        <div v-if=\"role === 'doctor'\" class=\"select-container mb-4\">\n          <select\n            v-if=\"patients.length > 0 && !selectedPatientId\"\n            v-model=\"selectedPatientId\"\n            @change=\"onPatientChange\"\n            class=\"form-select custom-select\"\n          >\n            <option value=\"\" disabled selected>Seleziona un paziente</option>\n            <option\n              v-for=\"patient in patients\"\n              :key=\"patient.userId\"\n              :value=\"patient.userId\"\n            >\n              {{ patient.name }} {{ patient.family_name }} (ID:\n              {{ patient.userId }})\n            </option>\n          </select>\n        </div>\n        <div v-if=\"selectedPatientId\" class=\"mt-2\">\n          <div v-if=\"role === 'doctor'\">\n            Utente selezionato:\n            <strong\n              >{{ selectedPatientName }} {{ selectedPatientSurname }} (ID:\n              {{ selectedPatientId }})</strong\n            >\n          </div>\n          <div v-else>\n            Benvenuto\n            <strong\n              >{{ selectedPatientName }} {{ selectedPatientSurname }}</strong\n            >\n          </div>\n          <div v-if=\"role === 'doctor'\">\n            <button @click=\"changePatient\" class=\"btn-change-patient\">\n              Cambia paziente\n            </button>\n          </div>\n        </div>\n        <div v-if=\"isLoadingRadiographs\" class=\"alert alert-info mt-3\">\n          Caricamento delle radiografie...\n        </div>\n        <div\n          class=\"row mt-5\"\n          v-if=\"userRadiographs.length > 0 && selectedPatientId\"\n        >\n          <div\n            v-for=\"(radiograph, index) in userRadiographs\"\n            :key=\"radiograph.radiography_id\"\n            @click=\"\n              goToRadiographDetail(\n                index,\n                radiograph.original_image,\n                radiograph.gradcam_image\n              )\n            \"\n            style=\"cursor: pointer\"\n            class=\"card\"\n          >\n            <img\n              :src=\"radiograph.original_image\"\n              class=\"card-img-top\"\n              alt=\"Radiografia\"\n            />\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">Radiografia {{ index + 1 }}</h5>\n            </div>\n          </div>\n        </div>\n        <div v-else>\n          <div v-if=\"errorNoRadiographies\" class=\"alert alert-danger mt-3\">\n            <p>\n              L'utente {{ selectedPatientName }}\n              {{ selectedPatientSurname }} non ha radiografie.\n            </p>\n          </div>\n        </div>\n        <div v-if=\"patients.length == 0 && role === 'doctor'\">\n          <p>NON hai pazienti.</p>\n        </div>\n      </div>\n      <div v-else>\n        <p>You do not have permission to view radiographs.</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { getPatientsFromDoctor } from \"@/services/api-service\";\n\nexport default {\n  data() {\n    return {\n      selectedFile: null,\n      selectedFileName: null,\n      predictedClass: null,\n      imagePreview: null,\n      gradcamImage: null,\n      showNewPredictionButton: false,\n      showPredictButton: true,\n      showUploadSection: true,\n      patients: [],\n      selectedPatient: \"\",\n      selectedPatientInfo: { name: \"\", surname: \"\", userId: \"\" },\n      isLoading: true,\n      showMainImagePreview: true,\n      selectedSide: false, // False = Left ||| True = Right\n      showKneeSide: false,\n    };\n  },\n  async created() {\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\n    const userUid = userData.doctorID;\n    this.patients = await getPatientsFromDoctor(userUid);\n    this.isLoading = false;\n  },\n  methods: {\n    resetPrediction() {\n      this.selectedFile = null;\n      this.selectedFileName = null;\n      this.predictedClass = null;\n      this.imagePreview = null;\n      this.gradcamImage = null;\n      this.showNewPredictionButton = false;\n      this.showPredictButton = true;\n      this.showUploadSection = true;\n      this.showMainImagePreview = true;\n      this.selectedPatient = \"\";\n      this.selectedPatientInfo = { name: \"\", surname: \"\", userId: \"\" };\n      this.showKneeSide = false;\n      this.selectedSide = false;\n      if (this.$refs.fileInput) {\n        this.$refs.fileInput.value = \"\";\n      }\n    },\n    setSide(side) {\n      this.selectedSide = side;\n    },\n    selectFile() {\n      this.$refs.fileInput.click();\n    },\n    onFileChange(event) {\n      this.showKneeSide = true;\n      this.selectedFile = event.target.files[0];\n      this.selectedFileName = this.selectedFile.name;\n      this.imagePreview = URL.createObjectURL(this.selectedFile);\n    },\n    async submitImage() {\n      if (!this.selectedFile) return;\n\n      const formData = new FormData();\n      formData.append(\"file\", this.selectedFile);\n\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      formData.append(\"userData\", JSON.stringify(userData));\n      formData.append(\"selectedPatientID\", this.selectedPatient);\n      if (this.selectedSide) {\n        formData.append(\"selectedSide\", \"Right\");\n      } else {\n        formData.append(\"selectedSide\", \"Left\");\n      }\n\n      try {\n        const response = await axios.post(\n          \"http://127.0.0.1:5000/predict\",\n          formData,\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n\n        console.log(\"Response from server:\", response.data);\n        this.predictedClass = response.data.predicted_class;\n        this.gradcamImage = response.data.gradcam_image;\n        this.showNewPredictionButton = true;\n        this.showPredictButton = false;\n        this.showUploadSection = false;\n        this.showMainImagePreview = false;\n        this.showKneeSide = false;\n      } catch (error) {\n        console.error(\"Error predicting image:\", error);\n      }\n    },\n    onPatientChange() {\n      const patient = this.patients.find(\n        (p) => p.userId === this.selectedPatient\n      );\n      this.selectedPatientInfo = patient\n        ? {\n            name: patient.name,\n            surname: patient.family_name,\n            userId: patient.userId,\n          }\n        : { name: \"\", surname: \"\", userId: \"\" }; // Se non trovato, resetta a valori vuoti\n\n      this.showPredictButton = true;\n      this.showKneeSide = false;\n    },\n    changePatient() {\n      this.selectedPatient = \"\";\n      this.selectedPatientInfo = { name: \"\", surname: \"\", userId: \"\" };\n      this.selectedFile = null;\n      this.selectedFileName = null;\n      this.imagePreview = null;\n      if (this.$refs.fileInput) {\n        this.$refs.fileInput.value = \"\";\n      }\n      this.showPredictButton = false;\n      this.showUploadSection = true;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.welcome {\n  background: #ffffff; /* Sfondo bianco */\n  min-height: 100vh;\n  display: flex;\n  align-items: center; /* Centra verticalmente */\n  justify-content: center; /* Centra orizzontalmente */\n}\n\n.container {\n  max-width: 90%;\n  padding: 5%;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 10%;\n  height: auto;\n  text-align: center;\n  flex-grow: 1;\n}\n\n.img-preview {\n  max-width: 100%;\n  max-height: 50vh;\n  margin-top: 15px;\n}\n\n.row {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 20px;\n  height: 10%;\n}\n\n.card {\n  flex: 1 1 45%;\n  margin: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.card-img-top {\n  border-radius: 0.5rem;\n  max-height: 50vh;\n  object-fit: cover;\n}\n\n.card-body {\n  text-align: center;\n}\n\n.btn-upload {\n  background-color: #007bff;\n  color: white;\n  padding: 8px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 40%;\n  min-width: 150px;\n  font-size: 13px; /* Ridimensionato il testo */\n  transition: background-color 0.3s ease;\n  text-align: center;\n}\n\n.btn-upload:hover {\n  background-color: #0056b3;\n}\n\n.small-text {\n  font-size: 13px;\n}\n\n.select-container {\n  margin-top: 18px;\n  margin-bottom: 10px;\n}\n\n.form-select {\n  display: block;\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ced4da;\n  border-radius: 5px;\n  background-color: #fff;\n  transition: border-color 0.2s;\n}\n\n.form-select:focus {\n  border-color: #007bff;\n  outline: none;\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\n}\n\n.custom-select {\n  max-width: 80%;\n  margin: 0 auto;\n}\n\n.button-cover {\n  height: 85%;\n  width: 35%; /* Puoi regolare la larghezza come desideri */\n  margin: 20px auto; /* Centrato orizzontalmente */\n  background-color: #fff;\n  display: block; /* Non usare flexbox qui, ma blocco per evitare allineamenti strani */\n}\n\n.buttonSide {\n  position: relative;\n  top: 50%;\n  width: 100%; /* Mantieni la larghezza al 100% del contenitore */\n  height: 36px;\n  margin: 0 auto; /* Questo forza il centramento orizzontale */\n  overflow: hidden;\n}\n\n.checkbox {\n  position: relative;\n  width: 100%; /* Imposta la larghezza del checkbox a 100% */\n  height: 100%;\n  padding: 0;\n  margin: 0;\n  opacity: 0;\n  cursor: pointer;\n  z-index: 3;\n}\n\n.knobs {\n  z-index: 2;\n}\n\n.layer {\n  width: 100%;\n  background-color: #ebf7fc;\n  transition: 0.3s ease all;\n  z-index: 1;\n}\n\n#button-1 {\n  position: relative;\n  width: 100%;\n  height: 36px;\n  margin: 0 auto;\n  overflow: hidden;\n}\n\n#button-1 .checkbox {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  cursor: pointer;\n  z-index: 3;\n}\n\n#button-1 .knobs:before,\n#button-1 .knobs:after {\n  position: absolute;\n  top: 4px;\n  width: 60%;\n  height: 30px;\n  color: white;\n  font-size: 14px;\n  font-weight: bold;\n  text-align: center;\n  line-height: 1;\n  padding: 9px 4px;\n  border-radius: 5px;\n  transition: 0.3s cubic-bezier(0.18, 0.89, 0.35, 1.15) all, opacity 0.3s ease,\n    z-index 0.3s ease;\n}\n\n#button-1 .knobs:before {\n  content: \"Left\";\n  left: 4px;\n  background-color: #03a9f4;\n  opacity: 1;\n  z-index: 2; /* PrioritÃ  inferiore di default */\n}\n\n#button-1 .knobs:after {\n  content: \"Right\";\n  left: 95px;\n  background-color: #f44336;\n  opacity: 0.5;\n  z-index: 1; /* PrioritÃ  inferiore di default */\n}\n\n#button-1 .checkbox:checked + .knobs:before {\n  left: 95px;\n  opacity: 0.5;\n  z-index: 1; /* L'elemento sbiadito va sotto */\n}\n\n#button-1 .checkbox:checked + .knobs:after {\n  left: 4px;\n  opacity: 1;\n  z-index: 2; /* L'elemento visibile va sopra */\n}\n\n#button-1 .layer {\n  width: 100%;\n  background-color: #ebf7fc;\n  transition: background-color 0.3s ease;\n}\n\n#button-1 .checkbox:checked ~ .layer {\n  background-color: #fcebeb;\n}\n\nh5.carica-radiografia {\n  font-size: 18px; /* Stessa dimensione del testo di \"Elenco Pazienti\" */\n  font-family: inherit; /* Assicura che usi lo stesso font ereditato dal contesto */\n  font-weight: normal; /* Mantenere il peso del font uguale */\n  margin-bottom: 20px; /* Margine inferiore uguale per allineamento */\n}\n\n.btn-change-patient {\n  background: #d9d9d9; /* Colore grigio chiaro */\n  color: black; /* Colore del testo */\n  width: 40%; /* Larghezza al 100% */\n  margin-top: 15px; /* Spazio sopra il pulsante */\n  padding: 0.4rem; /* Ridotto per i pulsanti, piÃ¹ corto verticalmente */\n  font-size: 13px; /* Dimensione del testo piÃ¹ piccola */\n  border: none; /* Nessun bordo */\n  border-radius: 5px; /* Angoli arrotondati */\n  cursor: pointer; /* Puntatore del mouse per il clic */\n  transition: background-color 0.3s ease; /* Transizione al passaggio del mouse */\n}\n\n.btn-change-patient:hover {\n  background-color: #bfbfbf; /* Colore grigio piÃ¹ scuro al passaggio del mouse */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}