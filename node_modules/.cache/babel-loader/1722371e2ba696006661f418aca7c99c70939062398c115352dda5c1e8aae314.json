{"ast":null,"code":"import { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\nexport default {\n  name: \"UserLogin\",\n  setup() {\n    // Stato del form\n    const form = ref({\n      email: \"\",\n      password: \"\",\n      rememberMe: false\n    });\n\n    // Stato degli errori\n    const errors = ref({\n      email: \"\",\n      password: \"\",\n      general: \"\"\n    });\n    const router = useRouter();\n    const currentStep = ref(1);\n    const loading = ref(false);\n    const showPassword = ref(false);\n    const showMfaStep = ref(false); // Toggle MFA step visibility\n    const qrCodeUrl = ref(\"\"); // Store QR code URL\n    const session = ref(\"\"); // Store MFA session token\n    const mfaCode = ref(\"\"); // Store user input MFA code\n\n    // Funzione per passare allo step successivo\n    const goToNextStep = () => {\n      if (isStepValid(currentStep.value)) {\n        currentStep.value++;\n      }\n    };\n\n    // Funzione per tornare allo step precedente\n    const goToPreviousStep = () => {\n      currentStep.value--;\n    };\n\n    // Funzione per creare un account (stub)\n    const createAccount = () => {\n      alert(\"Funzione di creazione account non implementata.\");\n    };\n\n    // Funzione per validare il form\n    const validateForm = () => {\n      errors.value = {\n        email: form.value.email ? \"\" : \"Email è richiesta\",\n        password: form.value.password ? \"\" : \"Password è richiesta\"\n      };\n      return Object.values(errors.value).every(error => !error);\n    };\n\n    // Funzione per validare lo step\n    const isStepValid = step => {\n      if (step === 1) {\n        return form.value.email;\n      } else if (step === 2) {\n        return form.value.password;\n      }\n      return false;\n    };\n\n    // Funzione per mostrare/nascondere la password\n    const toggleShowPassword = () => {\n      showPassword.value = !showPassword.value;\n    };\n    const onSubmit = async () => {\n      if (!validateForm()) return;\n      loading.value = true;\n      try {\n        // Effettua la richiesta POST per il login usando axios\n        const response = await axios.post(\"http://127.0.0.1:5000/login\", {\n          email: form.value.email,\n          password: form.value.password\n        });\n        if (response.data.message === \"MFA setup required\") {\n          // Step 2: Show MFA setup form\n          showMfaStep.value = true;\n          qrCodeUrl.value = response.data.qr_code;\n          session.value = response.data.session;\n        } else {\n          // Login avvenuto con successo, otteniamo lo username dal server\n          const username = response.data.username;\n\n          // Simula successo del login\n          alert(\"Login avvenuto con successo!\");\n\n          // Redireziona alla WelcomePage con lo username\n          router.push({\n            name: \"WelcomePage\",\n            query: {\n              username: username\n            } // Passa lo username nella query\n          });\n        }\n      } catch (error) {\n        errors.value.general = error.response?.data?.error || \"Errore sconosciuto durante il login\";\n      } finally {\n        loading.value = false;\n      }\n    };\n    const onMfaSubmit = async () => {\n      loading.value = true;\n      try {\n        // Effettua la richiesta POST per verificare MFA\n        const response = await axios.post(\"http://127.0.0.1:5000/verify-mfa\", {\n          session: session.value,\n          code: mfaCode.value\n        });\n        if (response.data.message === \"MFA verified\") {\n          alert(\"MFA verification successful!\");\n          // Redirect or handle authenticated state here\n        }\n      } catch (error) {\n        errors.value.general = error.response?.data?.error || \"Errore sconosciuto durante la verifica MFA\";\n      } finally {\n        loading.value = false;\n      }\n    };\n    return {\n      form,\n      errors,\n      currentStep,\n      loading,\n      showPassword,\n      showMfaStep,\n      qrCodeUrl,\n      session,\n      mfaCode,\n      goToNextStep,\n      goToPreviousStep,\n      createAccount,\n      validateForm,\n      isStepValid,\n      toggleShowPassword,\n      onSubmit,\n      onMfaSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","axios","name","setup","form","email","password","rememberMe","errors","general","router","currentStep","loading","showPassword","showMfaStep","qrCodeUrl","session","mfaCode","goToNextStep","isStepValid","value","goToPreviousStep","createAccount","alert","validateForm","Object","values","every","error","step","toggleShowPassword","onSubmit","response","post","data","message","qr_code","username","push","query","onMfaSubmit","code"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/UserLogin.vue"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <div class=\"container mt-5\">\n      <div class=\"header\">\n        <button\n          v-if=\"currentStep > 1\"\n          class=\"back-button\"\n          @click=\"goToPreviousStep\"\n        >\n          <img src=\"@/assets/back-icon.svg\" alt=\"Indietro\" class=\"back-icon\" />\n        </button>\n      </div>\n\n      <span class=\"step-title\">Passaggio {{ currentStep }} di 2</span>\n      <h2 class=\"mb-4\">Accedi al tuo Account</h2>\n\n      <!-- Step 1: Login Form -->\n      <form @submit.prevent=\"onSubmit\" v-if=\"!showMfaStep\">\n        <!-- Step 1: Inserisci Email -->\n        <div v-if=\"currentStep === 1\">\n          <div class=\"mb-3\">\n            <label for=\"email\" class=\"form-label\">Email</label>\n            <input\n              id=\"email\"\n              v-model=\"form.email\"\n              type=\"email\"\n              class=\"form-control\"\n              :class=\"{ 'is-invalid': errors.email }\"\n              required\n            />\n            <div class=\"invalid-feedback\">{{ errors.email }}</div>\n          </div>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-next\"\n            @click=\"goToNextStep\"\n            :disabled=\"!isStepValid(currentStep)\"\n          >\n            Avanti\n          </button>\n\n          <div class=\"line-container\">\n            <hr class=\"line\" />\n            <span class=\"or-text\">oppure</span>\n            <hr class=\"line\" />\n          </div>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-light btn-create-account\"\n            @click=\"createAccount\"\n          >\n            Crea un Account\n          </button>\n        </div>\n\n        <!-- Step 2: Inserisci Password -->\n        <div v-if=\"currentStep === 2\">\n          <div class=\"email-display\">\n            <span class=\"email-text\">{{ form.email }}</span>\n            <span class=\"change-text\" @click=\"goToPreviousStep\">Cambia</span>\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"password\" class=\"form-label\">Password</label>\n            <div class=\"input-group\">\n              <input\n                id=\"password\"\n                v-model=\"form.password\"\n                :type=\"showPassword ? 'text' : 'password'\"\n                class=\"form-control\"\n                :class=\"{ 'is-invalid': errors.password }\"\n                required\n              />\n              <button\n                type=\"button\"\n                class=\"btn eye-button\"\n                @click=\"toggleShowPassword\"\n              >\n                <img\n                  :src=\"\n                    showPassword\n                      ? require('@/assets/eye-off.svg')\n                      : require('@/assets/eye-on.svg')\n                  \"\n                  alt=\"Toggle Password Visibility\"\n                  class=\"eye-icon\"\n                />\n              </button>\n            </div>\n            <div class=\"invalid-feedback\">{{ errors.password }}</div>\n          </div>\n\n          <div class=\"mb-3 form-check\">\n            <input\n              id=\"rememberMe\"\n              v-model=\"form.rememberMe\"\n              type=\"checkbox\"\n              class=\"form-check-input\"\n            />\n            <label for=\"rememberMe\" class=\"form-check-label\">Ricordami</label>\n          </div>\n\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-next\"\n            :disabled=\"loading || !isStepValid(currentStep)\"\n          >\n            <span v-if=\"loading\">Login...</span>\n            <span v-else>Accedi</span>\n          </button>\n\n          <div class=\"line-container\">\n            <hr class=\"line\" />\n            <span class=\"or-text\">oppure</span>\n            <hr class=\"line\" />\n          </div>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-light btn-create-account\"\n            @click=\"createAccount\"\n          >\n            Crea un Account\n          </button>\n\n          <div v-if=\"errors.general\" class=\"invalid-feedback mt-3\">\n            {{ errors.general }}\n          </div>\n        </div>\n      </form>\n\n      <!-- Step 3: MFA Setup -->\n      <div v-if=\"showMfaStep\">\n        <h2>Set up Google Authenticator</h2>\n        <p>\n          Scan the QR code below with your Google Authenticator app, then enter\n          the code.\n        </p>\n\n        <!-- QR Code Image -->\n        <img\n          :src=\"'data:image/png;base64,' + qrCodeUrl\"\n          alt=\"QR Code for Google Authenticator\"\n        />\n\n        <!-- Input field for MFA code -->\n        <form @submit.prevent=\"onMfaSubmit\">\n          <div class=\"mb-3\">\n            <label for=\"mfaCode\" class=\"form-label\">Enter 6-digit code</label>\n            <input\n              id=\"mfaCode\"\n              v-model=\"mfaCode\"\n              type=\"text\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\">Verify Code</button>\n        </form>\n      </div>\n    </div>\n\n    <!-- Loading overlay -->\n    <div v-if=\"loading\" class=\"loading-overlay\">\n      <div class=\"loading-icon\">\n        <img src=\"@/assets/loading-icon.svg\" alt=\"Loading...\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"UserLogin\",\n  setup() {\n    // Stato del form\n    const form = ref({\n      email: \"\",\n      password: \"\",\n      rememberMe: false,\n    });\n\n    // Stato degli errori\n    const errors = ref({\n      email: \"\",\n      password: \"\",\n      general: \"\",\n    });\n\n    const router = useRouter();\n    const currentStep = ref(1);\n    const loading = ref(false);\n    const showPassword = ref(false);\n    const showMfaStep = ref(false); // Toggle MFA step visibility\n    const qrCodeUrl = ref(\"\"); // Store QR code URL\n    const session = ref(\"\"); // Store MFA session token\n    const mfaCode = ref(\"\"); // Store user input MFA code\n\n    // Funzione per passare allo step successivo\n    const goToNextStep = () => {\n      if (isStepValid(currentStep.value)) {\n        currentStep.value++;\n      }\n    };\n\n    // Funzione per tornare allo step precedente\n    const goToPreviousStep = () => {\n      currentStep.value--;\n    };\n\n    // Funzione per creare un account (stub)\n    const createAccount = () => {\n      alert(\"Funzione di creazione account non implementata.\");\n    };\n\n    // Funzione per validare il form\n    const validateForm = () => {\n      errors.value = {\n        email: form.value.email ? \"\" : \"Email è richiesta\",\n        password: form.value.password ? \"\" : \"Password è richiesta\",\n      };\n      return Object.values(errors.value).every((error) => !error);\n    };\n\n    // Funzione per validare lo step\n    const isStepValid = (step) => {\n      if (step === 1) {\n        return form.value.email;\n      } else if (step === 2) {\n        return form.value.password;\n      }\n      return false;\n    };\n\n    // Funzione per mostrare/nascondere la password\n    const toggleShowPassword = () => {\n      showPassword.value = !showPassword.value;\n    };\n\n    const onSubmit = async () => {\n      if (!validateForm()) return;\n      loading.value = true;\n\n      try {\n        // Effettua la richiesta POST per il login usando axios\n        const response = await axios.post(\"http://127.0.0.1:5000/login\", {\n          email: form.value.email,\n          password: form.value.password,\n        });\n\n        if (response.data.message === \"MFA setup required\") {\n          // Step 2: Show MFA setup form\n          showMfaStep.value = true;\n          qrCodeUrl.value = response.data.qr_code;\n          session.value = response.data.session;\n        } else {\n          // Login avvenuto con successo, otteniamo lo username dal server\n          const username = response.data.username;\n\n          // Simula successo del login\n          alert(\"Login avvenuto con successo!\");\n\n          // Redireziona alla WelcomePage con lo username\n          router.push({\n            name: \"WelcomePage\",\n            query: { username: username }, // Passa lo username nella query\n          });\n        }\n      } catch (error) {\n        errors.value.general =\n          error.response?.data?.error || \"Errore sconosciuto durante il login\";\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    const onMfaSubmit = async () => {\n      loading.value = true;\n      try {\n        // Effettua la richiesta POST per verificare MFA\n        const response = await axios.post(\"http://127.0.0.1:5000/verify-mfa\", {\n          session: session.value,\n          code: mfaCode.value,\n        });\n\n        if (response.data.message === \"MFA verified\") {\n          alert(\"MFA verification successful!\");\n          // Redirect or handle authenticated state here\n        }\n      } catch (error) {\n        errors.value.general =\n          error.response?.data?.error ||\n          \"Errore sconosciuto durante la verifica MFA\";\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    return {\n      form,\n      errors,\n      currentStep,\n      loading,\n      showPassword,\n      showMfaStep,\n      qrCodeUrl,\n      session,\n      mfaCode,\n      goToNextStep,\n      goToPreviousStep,\n      createAccount,\n      validateForm,\n      isStepValid,\n      toggleShowPassword,\n      onSubmit,\n      onMfaSubmit,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.login {\n  background: #ffffff; /* Sfondo bianco */\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0);\n}\n\n.container {\n  max-width: 400px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 100px;\n  height: auto;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.back-button {\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  margin-left: -10px;\n}\n\n.back-icon {\n  width: 30px;\n  height: 30px;\n}\n\n.step-title {\n  font-size: 10px;\n  margin-bottom: 10px;\n}\n\nh2 {\n  font-size: 18px;\n  margin-bottom: 30px;\n}\n\n.form-label {\n  font-size: 12px;\n}\n\n.form-control {\n  background: #f2f2f2;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 12px;\n}\n\n.input-group {\n  position: relative;\n}\n\n.eye-button {\n  background: transparent;\n  border: 1px solid #ccc;\n  cursor: pointer;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  width: 46px;\n}\n\n.eye-icon {\n  width: 18px;\n  height: 18px;\n  margin: auto;\n}\n\n.btn-next {\n  width: 100%;\n  margin-top: 20px;\n  padding: 0.4rem;\n  cursor: pointer;\n}\n\n.line-container {\n  display: flex;\n  align-items: center;\n  margin: 1rem 0;\n}\n\n.line {\n  flex: 1;\n}\n\n.or-text {\n  margin: 0 1rem;\n  font-size: small;\n}\n\n.btn-create-account {\n  background: #d9d9d9; /* Colore grigio chiaro */\n  color: black; /* Colore del testo */\n  width: 100%;\n  margin-top: 6px; /* Spazio sopra il pulsante */\n  padding: 0.3rem; /* Ridotto per i pulsanti, più corto verticalmente */\n  font-size: 13px; /* Dimensione del testo più piccola */\n}\n\n.btn-next {\n  font-size: 13px; /* Dimensione del testo più piccola per il pulsante \"Avanti\" */\n}\n\n.email-display {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.email-text {\n  font-size: 14px; /* Dimensione testo per l'email */\n  color: black; /* Colore del testo */\n}\n\n.change-text {\n  font-size: 14px; /* Dimensione testo per \"Cambia\" */\n  color: black; /* Colore del testo */\n  text-decoration: underline; /* Sottolinea il testo */\n  cursor: pointer; /* Aggiunge il cursore pointer */\n}\n\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.loading-icon {\n  width: 50px;\n  height: 50px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}