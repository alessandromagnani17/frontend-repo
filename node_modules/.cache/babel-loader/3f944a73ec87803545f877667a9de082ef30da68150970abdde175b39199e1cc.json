{"ast":null,"code":"import { getPatientsFromDoctor } from \"@/services/api-service\";\nimport { loadRadiographiesForPatient } from \"@/services/api-service\";\nexport default {\n  data() {\n    return {\n      patients: [],\n      selectedPatientName: \"\",\n      selectedPatientSurname: \"\",\n      selectedPatientId: \"\",\n      role: \"\",\n      userRadiographs: [],\n      isLoading: true,\n      isLoadingRadiographs: false,\n      errorNoRadiographies: false\n    };\n  },\n  created() {\n    this.loadData(); // Chiama il metodo asincrono separato\n  },\n  methods: {\n    async loadData() {\n      const userDataString = localStorage.getItem(\"userData\");\n      const userData = JSON.parse(userDataString);\n      this.role = userData.role;\n      if (this.role === \"doctor\") {\n        this.patients = await getPatientsFromDoctor(userData.doctorID);\n      } else if (this.role === \"patient\") {\n        this.selectedPatientId = userData.uid;\n        this.selectedPatientName = localStorage.getItem(\"Name\");\n        this.selectedPatientSurname = localStorage.getItem(\"Surname\");\n        this.isLoadingRadiographs = true;\n        this.userRadiographs = await loadRadiographiesForPatient(this.selectedPatientId);\n        if (this.userRadiographs.length === 0) {\n          this.errorNoRadiographies = true;\n        } else {\n          this.errorNoRadiographies = false;\n        }\n        this.isLoadingRadiographs = false;\n      }\n      this.isLoading = false;\n    },\n    async onPatientChange() {\n      this.userRadiographs = [];\n      this.isLoadingRadiographs = true;\n      const patient = this.patients.find(p => p.userId === this.selectedPatientId);\n      if (patient) {\n        this.selectedPatientName = patient.name;\n        this.selectedPatientSurname = patient.family_name;\n        this.selectedPatientId = patient.userId;\n      }\n      this.userRadiographs = await loadRadiographiesForPatient(this.selectedPatientId);\n      if (this.userRadiographs.length == 0) {\n        this.errorNoRadiographies = true;\n      } else {\n        this.errorNoRadiographies = false;\n      }\n      this.isLoadingRadiographs = false;\n      this.$router.push({\n        name: \"ViewRadiographs\",\n        query: {\n          patient_id: this.selectedPatientId\n        }\n      });\n    },\n    changePatient() {\n      this.selectedPatientId = \"\";\n      this.selectedPatientName = \"\";\n      this.selectedPatientSurname = \"\";\n      this.userRadiographies = [];\n      this.errorNoRadiographies = false;\n      this.isLoadingRadiographs = false;\n      this.$router.push({\n        name: \"ViewRadiographs\"\n      });\n    },\n    goToRadiographDetail(index, or, gd) {\n      localStorage.setItem(\"selected_original_img\", or);\n      localStorage.setItem(\"selected_gradcam_img\", gd);\n      const idx = index + 1;\n      this.$router.push({\n        name: \"RadiographyDetail\",\n        query: {\n          patient_id: this.selectedPatientId,\n          index: idx\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["getPatientsFromDoctor","loadRadiographiesForPatient","data","patients","selectedPatientName","selectedPatientSurname","selectedPatientId","role","userRadiographs","isLoading","isLoadingRadiographs","errorNoRadiographies","created","loadData","methods","userDataString","localStorage","getItem","userData","JSON","parse","doctorID","uid","length","onPatientChange","patient","find","p","userId","name","family_name","$router","push","query","patient_id","changePatient","userRadiographies","goToRadiographDetail","index","or","gd","setItem","idx"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\views\\ViewRadiographs.vue"],"sourcesContent":["<template>\r\n  <div class=\"welcome\">\r\n    <div class=\"container mt-5\">\r\n      <h1>Visualizza radiografie</h1>\r\n\r\n      <!-- Messaggio di caricamento -->\r\n      <div v-if=\"isLoading\" class=\"alert alert-info small-text\">\r\n        Caricamento...\r\n      </div>\r\n\r\n      <!-- Contenuto per il ruolo di 'doctor' o 'patient' -->\r\n      <div v-else-if=\"role === 'doctor' || role === 'patient'\">\r\n        <!-- Sezione per il selettore di pazienti per il medico -->\r\n        <div v-if=\"role === 'doctor'\" class=\"select-container mb-4\">\r\n          <select\r\n            v-if=\"patients.length > 0 && !selectedPatientId\"\r\n            v-model=\"selectedPatientId\"\r\n            @change=\"onPatientChange\"\r\n            class=\"form-select custom-select small-text\"\r\n          >\r\n            <option value=\"\" disabled selected>Seleziona un paziente</option>\r\n            <option\r\n              v-for=\"patient in patients\"\r\n              :key=\"patient.userId\"\r\n              :value=\"patient.userId\"\r\n            >\r\n              {{ patient.name }} {{ patient.family_name }} (ID:\r\n              {{ patient.userId }})\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <!-- Sezione per il paziente selezionato -->\r\n        <div v-if=\"selectedPatientId\" class=\"mt-2\">\r\n          <div\r\n            v-if=\"role === 'doctor' && selectedPatientId\"\r\n            class=\"patient-info-container small-text\"\r\n          >\r\n            <span>\r\n              Utente selezionato:\r\n              <strong>\r\n                {{ selectedPatientName }} {{ selectedPatientSurname }} <br />\r\n              </strong>\r\n              (ID: {{ selectedPatientId }})\r\n            </span>\r\n            <span class=\"change-text\" @click=\"changePatient\">Cambia</span>\r\n          </div>\r\n          <div v-else class=\"medium-text\">\r\n            Benvenuto\r\n            <strong class=\"medium-text\">\r\n              {{ selectedPatientName }} {{ selectedPatientSurname }}!\r\n            </strong>\r\n          </div>\r\n\r\n          <!-- Messaggio di x delle radiografie -->\r\n          <div\r\n            v-if=\"isLoadingRadiographs\"\r\n            class=\"alert alert-info mt-3 small-text\"\r\n          >\r\n            Caricamento delle radiografie...\r\n          </div>\r\n\r\n          <!-- Sezione per visualizzare le radiografie -->\r\n          <div\r\n            class=\"row mt-5\"\r\n            v-if=\"userRadiographs.length > 0 && selectedPatientId\"\r\n          >\r\n            <div\r\n              v-for=\"(radiograph, index) in userRadiographs\"\r\n              :key=\"radiograph.radiography_id\"\r\n              @click=\"\r\n                goToRadiographDetail(\r\n                  index,\r\n                  radiograph.original_image,\r\n                  radiograph.gradcam_image\r\n                )\r\n              \"\r\n              class=\"card\"\r\n            >\r\n              <img\r\n                :src=\"radiograph.original_image\"\r\n                class=\"card-img-top\"\r\n                alt=\"Radiografia\"\r\n              />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title small-text\">\r\n                  Radiografia {{ index + 1 }}\r\n                </h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Messaggio di errore nel caso non ci siano radiografie -->\r\n          <div v-else>\r\n            <div\r\n              v-if=\"errorNoRadiographies\"\r\n              class=\"alert alert-danger mt-3 small-text\"\r\n            >\r\n              <p class=\"alert-text\">\r\n                L'utente {{ selectedPatientName }}\r\n                {{ selectedPatientSurname }} non ha radiografie.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Sezione per mostrare se non ci sono pazienti per il medico -->\r\n        <div\r\n          v-if=\"patients.length == 0 && role === 'doctor'\"\r\n          class=\"text-danger\"\r\n        >\r\n          <p>Non hai pazienti.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Messaggio per utenti senza permessi -->\r\n      <div v-else>\r\n        <p class=\"text-muted\">\r\n          Non hai i permessi per visualizzare le radiografie.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getPatientsFromDoctor } from \"@/services/api-service\";\r\nimport { loadRadiographiesForPatient } from \"@/services/api-service\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      patients: [],\r\n      selectedPatientName: \"\",\r\n      selectedPatientSurname: \"\",\r\n      selectedPatientId: \"\",\r\n      role: \"\",\r\n      userRadiographs: [],\r\n      isLoading: true,\r\n      isLoadingRadiographs: false,\r\n      errorNoRadiographies: false,\r\n    };\r\n  },\r\n  created() {\r\n    this.loadData(); // Chiama il metodo asincrono separato\r\n  },\r\n  methods: {\r\n    async loadData() {\r\n      const userDataString = localStorage.getItem(\"userData\");\r\n      const userData = JSON.parse(userDataString);\r\n      this.role = userData.role;\r\n\r\n      if (this.role === \"doctor\") {\r\n        this.patients = await getPatientsFromDoctor(userData.doctorID);\r\n      } else if (this.role === \"patient\") {\r\n        this.selectedPatientId = userData.uid;\r\n        this.selectedPatientName = localStorage.getItem(\"Name\");\r\n        this.selectedPatientSurname = localStorage.getItem(\"Surname\");\r\n        this.isLoadingRadiographs = true;\r\n\r\n        this.userRadiographs = await loadRadiographiesForPatient(\r\n          this.selectedPatientId\r\n        );\r\n\r\n        if (this.userRadiographs.length === 0) {\r\n          this.errorNoRadiographies = true;\r\n        } else {\r\n          this.errorNoRadiographies = false;\r\n        }\r\n\r\n        this.isLoadingRadiographs = false;\r\n      }\r\n      this.isLoading = false;\r\n    },\r\n    async onPatientChange() {\r\n      this.userRadiographs = [];\r\n      this.isLoadingRadiographs = true;\r\n      const patient = this.patients.find(\r\n        (p) => p.userId === this.selectedPatientId\r\n      );\r\n\r\n      if (patient) {\r\n        this.selectedPatientName = patient.name;\r\n        this.selectedPatientSurname = patient.family_name;\r\n        this.selectedPatientId = patient.userId;\r\n      }\r\n\r\n      this.userRadiographs = await loadRadiographiesForPatient(\r\n        this.selectedPatientId\r\n      );\r\n\r\n      if (this.userRadiographs.length == 0) {\r\n        this.errorNoRadiographies = true;\r\n      } else {\r\n        this.errorNoRadiographies = false;\r\n      }\r\n\r\n      this.isLoadingRadiographs = false;\r\n      this.$router.push({\r\n        name: \"ViewRadiographs\",\r\n        query: {\r\n          patient_id: this.selectedPatientId,\r\n        },\r\n      });\r\n    },\r\n    changePatient() {\r\n      this.selectedPatientId = \"\";\r\n      this.selectedPatientName = \"\";\r\n      this.selectedPatientSurname = \"\";\r\n      this.userRadiographies = [];\r\n      this.errorNoRadiographies = false;\r\n      this.isLoadingRadiographs = false;\r\n      this.$router.push({ name: \"ViewRadiographs\" });\r\n    },\r\n    goToRadiographDetail(index, or, gd) {\r\n      localStorage.setItem(\"selected_original_img\", or);\r\n      localStorage.setItem(\"selected_gradcam_img\", gd);\r\n      const idx = index + 1;\r\n      this.$router.push({\r\n        name: \"RadiographyDetail\",\r\n        query: {\r\n          patient_id: this.selectedPatientId,\r\n          index: idx,\r\n        },\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.welcome {\r\n  background: #ffffff; /* Sfondo bianco */\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center; /* Centra verticalmente */\r\n  justify-content: center; /* Centra orizzontalmente */\r\n}\r\n\r\n.container {\r\n  max-width: 80%; /* Modifica qui per utilizzare una percentuale */\r\n  padding: 5%; /* Usa percentuali per il padding */\r\n  border-radius: 15px;\r\n  background: #ffffff;\r\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\r\n  margin-top: 10%; /* Usa percentuali per il margine superiore */\r\n  height: auto;\r\n  text-align: center;\r\n  flex-grow: 1;\r\n}\r\n\r\nh1 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.img-preview {\r\n  max-width: 100%;\r\n  max-height: 50vh;\r\n  margin-top: 15px;\r\n}\r\n\r\n.row {\r\n  display: flex; /* Usa Flexbox per le card */\r\n  flex-wrap: wrap; /* Permetti alle card di andare a capo se necessario */\r\n  margin-bottom: 20px; /* Margine inferiore per la separazione */\r\n  height: 10%;\r\n}\r\n\r\n.card {\r\n  flex: 1 1 45%; /* Permetti alle card di occupare il 45% della larghezza */\r\n  margin: 10px; /* Margine tra le card */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease-in-out;\r\n}\r\n\r\n.card:hover {\r\n  transform: scale(1.03); /* Leggero ingrandimento quando si passa sopra */\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Aggiunge un'ombra per maggiore enfasi */\r\n}\r\n\r\n/* Stili per la card della predizione */\r\n.card.prediction-card {\r\n  margin-top: 20px; /* Margine superiore per separarla dalle altre card */\r\n}\r\n\r\n.card-img-top {\r\n  border-radius: 0.5rem;\r\n  max-height: 50vh;\r\n  object-fit: cover; /* Mantieni le proporzioni dell'immagine */\r\n}\r\n\r\n.card-body {\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n}\r\n\r\n.patient-info-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 3vw;\r\n  width: 100%;\r\n}\r\n\r\n.change-text {\r\n  font-size: 14px;\r\n  color: black;\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n}\r\n\r\n.sidebar {\r\n  top: 0;\r\n  width: 250px;\r\n  height: 100vh;\r\n  padding: 20px;\r\n  background: linear-gradient(180deg, #212529, #343a40);\r\n  margin-right: 20px;\r\n}\r\n\r\n.sidebar .nav-link {\r\n  color: #cfd2d6;\r\n}\r\n\r\n.sidebar .nav-link:hover {\r\n  background-color: #495057;\r\n  border-radius: 5px;\r\n}\r\n\r\n.nav-link {\r\n  padding: 10px 15px;\r\n}\r\n\r\n@media (max-width: 767.98px) {\r\n  .navbar-brand {\r\n    font-size: 1.2rem; /* Ridotto per i dispositivi più piccoli */\r\n  }\r\n\r\n  .sidebar {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.select-container {\r\n  margin-top: 15px; /* Spazio sopra il menu a tendina */\r\n  margin-bottom: 10px; /* Spazio sotto il menu a tendina */\r\n}\r\n\r\n.form-select {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n  transition: border-color 0.2s;\r\n}\r\n\r\n.form-select:focus {\r\n  border-color: #007bff;\r\n  outline: none;\r\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n.custom-select {\r\n  max-width: 80%; /* Imposta la larghezza massima desiderata */\r\n  margin: 0 auto; /* Centra il menu a tendina */\r\n}\r\n\r\n.card {\r\n  flex: 0 0 30%; /* Imposta la larghezza al 30% per avere 3 card per riga */\r\n  margin: 10px; /* Margine tra le card */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-img-top {\r\n  border-radius: 0.5rem;\r\n  max-height: 50vh; /* Limita l'altezza in percentuale */\r\n  object-fit: cover; /* Mantieni le proporzioni dell'immagine */\r\n}\r\n\r\n.row {\r\n  justify-content: flex-start; /* Assicura che le immagini siano allineate a sinistra */\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 8px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  width: 40%;\r\n  min-width: 150px;\r\n  font-size: 13px;\r\n  transition: background-color 0.3s ease;\r\n  text-align: center;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.small-text {\r\n  font-size: 13px;\r\n}\r\n\r\n.medium-text {\r\n  font-size: 14px;\r\n}\r\n\r\n/* Applica una riduzione globale della dimensione del testo per tutto il corpo della pagina */\r\nbody {\r\n  font-size: 13px; /* Ridotto la dimensione del testo per tutto il corpo */\r\n  line-height: 1.4; /* Aumentato l'interlinea per una lettura più facile */\r\n}\r\n\r\n.alert.alert-danger {\r\n  display: flex; /* Abilita Flexbox */\r\n  align-items: center; /* Centra il contenuto verticalmente */\r\n  justify-content: center; /* Centra il contenuto orizzontalmente */\r\n  padding: 8px 15px; /* Riduce l'altezza complessiva */\r\n  font-size: 14px; /* Riduce la dimensione del testo */\r\n  line-height: 1.2; /* Compatta l'interlinea */\r\n  margin-bottom: 10px; /* Margine inferiore */\r\n  border-radius: 5px; /* Bordo arrotondato */\r\n  text-align: center; /* Centra il testo se multilinea */\r\n  min-height: 50px; /* Imposta un'altezza minima per coerenza */\r\n  box-sizing: border-box; /* Include padding nei calcoli dell'altezza */\r\n}\r\n\r\n.alert-text {\r\n  margin: 0; /* Rimuove margini aggiuntivi del paragrafo */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}