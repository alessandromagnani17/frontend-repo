{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"patient-list\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  key: 2,\n  class: \"details\"\n};\nconst _hoisted_8 = {\n  class: \"patient-details\"\n};\nconst _hoisted_9 = {\n  class: \"upload-section\"\n};\nconst _hoisted_10 = {\n  class: \"radiographs-section\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_UploadRadiograph = _resolveComponent(\"UploadRadiograph\");\n  const _component_PatientRadiographs = _resolveComponent(\"PatientRadiographs\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n    class: \"header\"\n  }, [_createElementVNode(\"h1\", null, \"Dashboard Dottore\")], -1 /* HOISTED */)), $setup.patients.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Elenco Pazienti\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.patients, patient => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: patient.userId,\n      onClick: $event => $setup.selectPatient(patient),\n      class: \"patient-item\"\n    }, _toDisplayString(patient.name) + \" \" + _toDisplayString(patient.family_name), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _cache[1] || (_cache[1] = [_createElementVNode(\"p\", {\n    class: \"no-patients\"\n  }, \"Nessun paziente associato trovato.\", -1 /* HOISTED */)]))), $setup.selectedPatient ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"Dettagli Paziente\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Nome:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.name), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Cognome:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.family_name), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Email:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.email), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Data di nascita:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.birthdate), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"strong\", null, \"Numero di telefono:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.phone_number), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"strong\", null, \"Indirizzo:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.address), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_UploadRadiograph, {\n    onUploadSuccess: $setup.handleUploadSuccess,\n    patientId: $setup.selectedPatient.userId\n  }, null, 8 /* PROPS */, [\"onUploadSuccess\", \"patientId\"])]), _createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_PatientRadiographs, {\n    radiographs: $setup.selectedPatientRadiographs,\n    patientId: $setup.selectedPatient.userId,\n    patientName: $setup.selectedPatient.name\n  }, null, 8 /* PROPS */, [\"radiographs\", \"patientId\", \"patientName\"])])])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$setup","patients","length","_hoisted_3","_hoisted_4","_Fragment","_renderList","patient","userId","onClick","$event","selectPatient","name","_toDisplayString","family_name","_hoisted_5","_hoisted_6","_cache","selectedPatient","_hoisted_7","_hoisted_8","_createTextVNode","email","birthdate","phone_number","address","_hoisted_9","_createVNode","_component_UploadRadiograph","onUploadSuccess","handleUploadSuccess","patientId","_hoisted_10","_component_PatientRadiographs","radiographs","selectedPatientRadiographs","patientName","_createCommentVNode"],"sources":["C:\\Users\\Utente\\Desktop\\DIO\\osteoarthritis-project\\frontend\\src\\components\\DoctorDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <div class=\"container\">\r\n      <div class=\"header\">\r\n        <h1>Dashboard Dottore</h1>\r\n      </div>\r\n\r\n      <div v-if=\"patients.length > 0\">\r\n        <h2>Elenco Pazienti</h2>\r\n        <ul class=\"patient-list\">\r\n          <li\r\n            v-for=\"patient in patients\"\r\n            :key=\"patient.userId\"\r\n            @click=\"selectPatient(patient)\"\r\n            class=\"patient-item\"\r\n          >\r\n            {{ patient.name }} {{ patient.family_name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div v-else>\r\n        <p class=\"no-patients\">Nessun paziente associato trovato.</p>\r\n      </div>\r\n\r\n      <div v-if=\"selectedPatient\" class=\"details\">\r\n        <h2>Dettagli Paziente</h2>\r\n        <div class=\"patient-details\">\r\n          <p><strong>Nome:</strong> {{ selectedPatient.name }}</p>\r\n          <p><strong>Cognome:</strong> {{ selectedPatient.family_name }}</p>\r\n          <p><strong>Email:</strong> {{ selectedPatient.email }}</p>\r\n          <p>\r\n            <strong>Data di nascita:</strong> {{ selectedPatient.birthdate }}\r\n          </p>\r\n          <p>\r\n            <strong>Numero di telefono:</strong>\r\n            {{ selectedPatient.phone_number }}\r\n          </p>\r\n          <p><strong>Indirizzo:</strong> {{ selectedPatient.address }}</p>\r\n        </div>\r\n\r\n        <div class=\"upload-section\">\r\n          <UploadRadiograph\r\n            @uploadSuccess=\"handleUploadSuccess\"\r\n            :patientId=\"selectedPatient.userId\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"radiographs-section\">\r\n          <PatientRadiographs\r\n            :radiographs=\"selectedPatientRadiographs\"\r\n            :patientId=\"selectedPatient.userId\"\r\n            :patientName=\"selectedPatient.name\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PatientRadiographs from \"./PatientRadiographs.vue\";\r\nimport UploadRadiograph from \"./UploadRadiographs.vue\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { getPatientsFromDoctor, getRadiographs } from \"../services/api-service\";\r\n\r\nexport default {\r\n  components: {\r\n    PatientRadiographs,\r\n    UploadRadiograph,\r\n  },\r\n  setup() {\r\n    const patients = ref([]);\r\n    const selectedPatient = ref(null);\r\n    const selectedPatientRadiographs = ref([]);\r\n\r\n    const doctorId = localStorage.getItem(\"doctorId\");\r\n    console.log(\"doctorID: \", doctorId);\r\n\r\n    onMounted(async () => {\r\n      if (doctorId) {\r\n        try {\r\n          patients.value = await getPatientsFromDoctor(doctorId);\r\n        } catch (error) {\r\n          console.error(\"Errore nel caricamento dei pazienti:\", error);\r\n        }\r\n      } else {\r\n        console.error(\"Nessun DoctorID trovato nel localStorage.\");\r\n      }\r\n    });\r\n\r\n    console.log(\"PAZIENTI FRONTENDDOO: \", patients);\r\n    const selectPatient = async (patient) => {\r\n      selectedPatient.value = patient;\r\n      selectedPatientRadiographs.value = []; // Svuota le radiografie precedenti\r\n\r\n      console.log(\"Patient ID selezionato:\", patient.userId); // Debug per verificare il patientId\r\n\r\n      if (!patient.userId) {\r\n        console.error(\"ID paziente non trovato.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        selectedPatientRadiographs.value =\r\n          (await getRadiographs(patient.userId)) || [];\r\n        console.log(\"Radiografie caricate:\", selectedPatientRadiographs.value); // Debug per verificare le radiografie caricate\r\n      } catch (error) {\r\n        console.error(\r\n          \"Errore nel caricamento delle radiografie per il paziente:\",\r\n          error\r\n        );\r\n      }\r\n    };\r\n\r\n    const handleUploadSuccess = () => {\r\n      selectPatient(selectedPatient.value);\r\n    };\r\n\r\n    return {\r\n      patients,\r\n      selectPatient,\r\n      handleUploadSuccess,\r\n      selectedPatient,\r\n      selectedPatientRadiographs,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard {\r\n  background: #ffffff;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.container {\r\n  max-width: 600px;\r\n  padding: 40px;\r\n  border-radius: 15px;\r\n  background: #ffffff;\r\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\r\n  margin-top: 100px;\r\n  width: 100%;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nh1 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nh2 {\r\n  font-size: 18px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.patient-list {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.patient-item {\r\n  cursor: pointer;\r\n  text-decoration: underline;\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n  color: #007bff;\r\n}\r\n\r\n.patient-item:hover {\r\n  color: #0056b3;\r\n}\r\n\r\n.no-patients {\r\n  font-size: 14px;\r\n  color: #999;\r\n}\r\n\r\n.details {\r\n  margin-top: 30px;\r\n}\r\n\r\n.patient-details p {\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.upload-section,\r\n.radiographs-section {\r\n  margin-top: 30px;\r\n}\r\n\r\n.btn-next {\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  padding: 0.4rem;\r\n  cursor: pointer;\r\n  font-size: 13px;\r\n}\r\n\r\n.loading-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.loading-icon {\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}