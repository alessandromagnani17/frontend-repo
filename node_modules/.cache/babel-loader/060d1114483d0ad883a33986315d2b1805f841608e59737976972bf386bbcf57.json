{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\"; // Importa il modulo di autenticazione\nimport { getFirestore } from \"firebase/firestore\"; // Importa il modulo Firestore\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBDron87U_PasTdrtOBfnntXUptPNT-3xQ\",\n  authDomain: \"osteoarthritis-provolone.firebaseapp.com\",\n  projectId: \"osteoarthritis-provolone\",\n  storageBucket: \"osteoarthritis-provolone.appspot.com\",\n  messagingSenderId: \"111916507074\",\n  appId: \"1:111916507074:web:afaa3c072f75840767005b\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase Authentication\nconst auth = getAuth(app); // Crea l'oggetto auth\n\n// Initialize Firestore\nconst db = getFirestore(app); // Crea l'oggetto db per Firestore\n\n// Funzione per effettuare il login\nconst loginWithEmailAndPassword = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n\n    // Restituisci i dettagli dell'utente\n    return {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName\n    };\n  } catch (error) {\n    console.error(\"Error logging in:\", error);\n    throw error; // Rilancia l'errore per gestirlo nel componente chiamante\n  }\n};\n\n// Esporta sia l'oggetto auth che l'oggetto db e la funzione di login\nexport { auth, db, loginWithEmailAndPassword };","map":{"version":3,"names":["initializeApp","getAuth","signInWithEmailAndPassword","getFirestore","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","db","loginWithEmailAndPassword","email","password","userCredential","user","uid","displayName","error","console"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\"; // Importa il modulo di autenticazione\nimport { getFirestore } from \"firebase/firestore\"; // Importa il modulo Firestore\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBDron87U_PasTdrtOBfnntXUptPNT-3xQ\",\n  authDomain: \"osteoarthritis-provolone.firebaseapp.com\",\n  projectId: \"osteoarthritis-provolone\",\n  storageBucket: \"osteoarthritis-provolone.appspot.com\",\n  messagingSenderId: \"111916507074\",\n  appId: \"1:111916507074:web:afaa3c072f75840767005b\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase Authentication\nconst auth = getAuth(app); // Crea l'oggetto auth\n\n// Initialize Firestore\nconst db = getFirestore(app); // Crea l'oggetto db per Firestore\n\n// Funzione per effettuare il login\nconst loginWithEmailAndPassword = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(\n      auth,\n      email,\n      password\n    );\n    const user = userCredential.user;\n\n    // Restituisci i dettagli dell'utente\n    return {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n    };\n  } catch (error) {\n    console.error(\"Error logging in:\", error);\n    throw error; // Rilancia l'errore per gestirlo nel componente chiamante\n  }\n};\n\n// Esporta sia l'oggetto auth che l'oggetto db e la funzione di login\nexport { auth, db, loginWithEmailAndPassword };\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,0BAA0B,QAAQ,eAAe,CAAC,CAAC;AACrE,SAASC,YAAY,QAAQ,oBAAoB,CAAC,CAAC;;AAEnD;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,0CAA0C;EACtDC,SAAS,EAAE,0BAA0B;EACrCC,aAAa,EAAE,sCAAsC;EACrDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGX,aAAa,CAACI,cAAc,CAAC;;AAEzC;AACA,MAAMQ,IAAI,GAAGX,OAAO,CAACU,GAAG,CAAC,CAAC,CAAC;;AAE3B;AACA,MAAME,EAAE,GAAGV,YAAY,CAACQ,GAAG,CAAC,CAAC,CAAC;;AAE9B;AACA,MAAMG,yBAAyB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC3D,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMf,0BAA0B,CACrDU,IAAI,EACJG,KAAK,EACLC,QACF,CAAC;IACD,MAAME,IAAI,GAAGD,cAAc,CAACC,IAAI;;IAEhC;IACA,OAAO;MACLC,GAAG,EAAED,IAAI,CAACC,GAAG;MACbJ,KAAK,EAAEG,IAAI,CAACH,KAAK;MACjBK,WAAW,EAAEF,IAAI,CAACE;IACpB,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA,SAAST,IAAI,EAAEC,EAAE,EAAEC,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}