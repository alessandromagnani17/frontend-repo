{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.onFileChange && $options.onFileChange(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.submitImage && $options.submitImage(...args))\n  }, \"Predict\"), $data.predictedClass !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \" Predicted Class: \" + _toDisplayString($data.predictedClass), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","type","onChange","_cache","args","$options","onFileChange","accept","onClick","submitImage","$data","predictedClass","_hoisted_1","_toDisplayString","_createCommentVNode"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\PredictRadiography.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"file\" @change=\"onFileChange\" accept=\"image/*\" />\n    <button @click=\"submitImage\">Predict</button>\n    <div v-if=\"predictedClass !== null\">\n      Predicted Class: {{ predictedClass }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      selectedFile: null,\n      predictedClass: null,\n    };\n  },\n  methods: {\n    onFileChange(event) {\n      this.selectedFile = event.target.files[0];\n    },\n    async submitImage() {\n      if (!this.selectedFile) return;\n\n      const formData = new FormData();\n      formData.append(\"file\", this.selectedFile);\n\n      try {\n        const response = await axios.post(\n          \"http://127.0.0.1:5000/predict\",\n          formData,\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n\n        this.predictedClass = response.data.predicted_class;\n      } catch (error) {\n        console.error(\"Error predicting image:\", error);\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAMM,cALJC,mBAAA,CAA6D;IAAtDC,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IAAEG,MAAM,EAAC;qCACjDP,mBAAA,CAA6C;IAApCQ,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAI,WAAA,IAAAJ,QAAA,CAAAI,WAAA,IAAAL,IAAA,CAAW;KAAE,SAAO,GACzBM,KAAA,CAAAC,cAAc,a,cAAzBZ,mBAAA,CAEM,OANVa,UAAA,EAIwC,oBACjB,GAAAC,gBAAA,CAAGH,KAAA,CAAAC,cAAc,oBALxCG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}