{"ast":null,"code":"export default {\n  name: \"ProfilePage\",\n  data() {\n    return {\n      userData: {},\n      displayFields: {\n        name: {\n          label: \"Nome\"\n        },\n        family_name: {\n          label: \"Cognome\"\n        },\n        username: {\n          label: \"Username\"\n        },\n        email: {\n          label: \"Email\"\n        },\n        birthdate: {\n          label: \"Data di Nascita\"\n        },\n        phone_number: {\n          label: \"Telefono\"\n        },\n        address: {\n          label: \"Indirizzo\"\n        },\n        cap_code: {\n          label: \"CAP\"\n        },\n        gender: {\n          label: \"Genere\"\n        },\n        tax_code: {\n          label: \"Codice Fiscale\"\n        }\n      },\n      editFieldKey: null,\n      editFieldValue: \"\"\n    };\n  },\n  mounted() {\n    this.loadUserData();\n  },\n  methods: {\n    loadUserData() {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const userId = userData?.userId;\n      if (!userId) {\n        console.error(\"ID utente non definito\");\n        return;\n      }\n      fetch(`http://localhost:5000/get_user/${userId}`).then(response => response.ok ? response.json() : Promise.reject(\"Errore nel recupero dei dati utente\")).then(data => this.userData = data).catch(error => {\n        console.error(\"Errore:\", error);\n        alert(\"Si è verificato un errore durante il caricamento dei dati utente.\");\n      });\n    },\n    enableEdit(field) {\n      this.editFieldKey = field;\n      this.editFieldValue = this.userData[field];\n    },\n    saveEdit(field) {\n      if (this.editFieldValue !== \"\") {\n        this.userData[field] = this.editFieldValue;\n        this.updateUserData(field, this.editFieldValue);\n        this.editFieldKey = null;\n        this.editFieldValue = \"\";\n      }\n    },\n    updateUserData(field, value) {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const userId = userData?.userId;\n      if (!userId) {\n        alert(\"Si è verificato un errore, l'ID utente non è disponibile.\");\n        return;\n      }\n      fetch(\"http://localhost:5000/update_user\", {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId,\n          [field]: value\n        })\n      }).then(response => {\n        if (!response.ok) throw new Error(\"Errore nel salvataggio dei dati\");\n        alert(\"Informazione aggiornata con successo!\");\n        this.loadUserData();\n      }).catch(error => {\n        console.error(\"Errore:\", error);\n        alert(\"Si è verificato un errore durante l'aggiornamento.\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","userData","displayFields","label","family_name","username","email","birthdate","phone_number","address","cap_code","gender","tax_code","editFieldKey","editFieldValue","mounted","loadUserData","methods","JSON","parse","localStorage","getItem","userId","console","error","fetch","then","response","ok","json","Promise","reject","catch","alert","enableEdit","field","saveEdit","updateUserData","value","method","headers","body","stringify","Error"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/views/ProfilePage.vue"],"sourcesContent":["<template>\n  <div class=\"profile\">\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4\">Benvenuto nel tuo Profilo!</h2>\n      <div class=\"user-info\">\n        <div v-for=\"(value, key) in displayFields\" :key=\"key\" class=\"user-item\">\n          <p>\n            <strong>{{ value.label }}:</strong>\n            <span v-if=\"editFieldKey !== key\">{{ userData[key] }}</span>\n            <input\n              v-else\n              v-model=\"editFieldValue\"\n              type=\"text\"\n              class=\"edit-input\"\n            />\n          </p>\n          <button\n            v-if=\"editFieldKey !== key\"\n            class=\"btn-edit\"\n            @click=\"enableEdit(key)\"\n          >\n            <img src=\"@/assets/modify.svg\" alt=\"Modifica\" class=\"edit-icon\" />\n          </button>\n          <button v-else class=\"btn-save\" @click=\"saveEdit(key)\">Salva</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ProfilePage\",\n  data() {\n    return {\n      userData: {},\n      displayFields: {\n        name: { label: \"Nome\" },\n        family_name: { label: \"Cognome\" },\n        username: { label: \"Username\" },\n        email: { label: \"Email\" },\n        birthdate: { label: \"Data di Nascita\" },\n        phone_number: { label: \"Telefono\" },\n        address: { label: \"Indirizzo\" },\n        cap_code: { label: \"CAP\" },\n        gender: { label: \"Genere\" },\n        tax_code: { label: \"Codice Fiscale\" },\n      },\n      editFieldKey: null,\n      editFieldValue: \"\",\n    };\n  },\n  mounted() {\n    this.loadUserData();\n  },\n  methods: {\n    loadUserData() {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const userId = userData?.userId;\n      if (!userId) {\n        console.error(\"ID utente non definito\");\n        return;\n      }\n\n      fetch(`http://localhost:5000/get_user/${userId}`)\n        .then((response) =>\n          response.ok\n            ? response.json()\n            : Promise.reject(\"Errore nel recupero dei dati utente\")\n        )\n        .then((data) => (this.userData = data))\n        .catch((error) => {\n          console.error(\"Errore:\", error);\n          alert(\n            \"Si è verificato un errore durante il caricamento dei dati utente.\"\n          );\n        });\n    },\n    enableEdit(field) {\n      this.editFieldKey = field;\n      this.editFieldValue = this.userData[field];\n    },\n    saveEdit(field) {\n      if (this.editFieldValue !== \"\") {\n        this.userData[field] = this.editFieldValue;\n        this.updateUserData(field, this.editFieldValue);\n        this.editFieldKey = null;\n        this.editFieldValue = \"\";\n      }\n    },\n    updateUserData(field, value) {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const userId = userData?.userId;\n      if (!userId) {\n        alert(\"Si è verificato un errore, l'ID utente non è disponibile.\");\n        return;\n      }\n\n      fetch(\"http://localhost:5000/update_user\", {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ userId, [field]: value }),\n      })\n        .then((response) => {\n          if (!response.ok) throw new Error(\"Errore nel salvataggio dei dati\");\n          alert(\"Informazione aggiornata con successo!\");\n          this.loadUserData();\n        })\n        .catch((error) => {\n          console.error(\"Errore:\", error);\n          alert(\"Si è verificato un errore durante l'aggiornamento.\");\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  max-width: 600px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 100px;\n  height: auto;\n  text-align: left;\n}\n\nh2 {\n  font-size: 20px;\n  margin-bottom: 20px;\n}\n\n.user-info {\n  font-size: 14px;\n  line-height: 1.5;\n}\n\n.user-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n}\n\n.btn-edit {\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n}\n\n.edit-icon {\n  width: 22px;\n  height: 22px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}