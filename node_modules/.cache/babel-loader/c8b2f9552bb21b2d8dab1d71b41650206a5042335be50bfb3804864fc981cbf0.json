{"ast":null,"code":"import { withModifiers as _withModifiers, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container d-flex justify-content-between\"\n};\nconst _hoisted_2 = {\n  class: \"navbar-nav me-auto\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"nav-item\"\n};\nconst _hoisted_4 = {\n  class: \"nav-item\"\n};\nconst _hoisted_5 = {\n  class: \"nav-item\"\n};\nconst _hoisted_6 = {\n  class: \"nav-item\"\n};\nconst _hoisted_7 = {\n  class: \"nav-item\"\n};\nconst _hoisted_8 = {\n  class: \"navbar-nav\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"nav-item dropdown d-flex align-items-center\"\n};\nconst _hoisted_10 = {\n  class: \"nav-link me-2\",\n  style: {\n    \"pointer-events\": \"none\"\n  }\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"badge badge-pill badge-warning text-red\"\n};\nconst _hoisted_12 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_13 = {\n  class: \"row\"\n};\nconst _hoisted_14 = {\n  class: \"col-md-9\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    id: \"app\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.closeNavbarOnClick && $options.closeNavbarOnClick(...args))\n  }, [(_openBlock(), _createElementBlock(\"nav\", {\n    key: $data.authToken,\n    class: \"navbar navbar-expand-lg navbar-dark bg-primary shadow-lg sticky-top\"\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"a\", {\n    class: \"navbar-brand\",\n    href: \"#\",\n    onClick: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.handleLogoClick && $options.handleLogoClick(...args), [\"prevent\"]))\n  }, \" Radiology Portal \"), _createElementVNode(\"button\", {\n    class: \"navbar-toggler\",\n    type: \"button\",\n    \"aria-controls\": \"navbarNav\",\n    \"aria-expanded\": \"navbarOpen\",\n    \"aria-label\": \"Toggle navigation\",\n    onClick: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.toggleNavbar && $options.toggleNavbar(...args), [\"stop\"]))\n  }, _cache[5] || (_cache[5] = [_createElementVNode(\"span\", {\n    class: \"navbar-toggler-icon\"\n  }, null, -1 /* HOISTED */)])), _createElementVNode(\"div\", {\n    id: \"navbarNav\",\n    class: _normalizeClass([\"collapse navbar-collapse\", {\n      show: $data.navbarOpen\n    }])\n  }, [_createElementVNode(\"ul\", _hoisted_2, [$options.isLoggedIn ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [$data.userRole === 'doctor' ? (_openBlock(), _createElementBlock(\"li\", _hoisted_3, [_createVNode(_component_router_link, {\n    class: \"nav-link\",\n    to: \"/predict\",\n    onClick: $options.closeNavbar\n  }, {\n    default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\" Predici Radiografie \")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"li\", _hoisted_4, [_createVNode(_component_router_link, {\n    class: \"nav-link\",\n    to: $options.viewRadiographsRoute,\n    onClick: $options.closeNavbar\n  }, {\n    default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"Visualizza Radiografie\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\", \"onClick\"])]), _createElementVNode(\"li\", _hoisted_5, [_createVNode(_component_router_link, {\n    class: \"nav-link\",\n    to: \"/activity-calendar\",\n    onClick: $options.closeNavbar\n  }, {\n    default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\" Calendario Attività \")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createElementVNode(\"li\", _hoisted_6, [_createVNode(_component_router_link, {\n    class: \"nav-link\",\n    to: \"/register\",\n    onClick: $options.closeNavbar\n  }, {\n    default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\" Registrati \")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]), _createElementVNode(\"li\", _hoisted_7, [_createVNode(_component_router_link, {\n    class: \"nav-link\",\n    to: \"/login\",\n    onClick: $options.closeNavbar\n  }, {\n    default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\" Login \")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])], 64 /* STABLE_FRAGMENT */))]), _createElementVNode(\"ul\", _hoisted_8, [_createCommentVNode(\" Contenitore per il dropdown \"), $options.isLoggedIn ? (_openBlock(), _createElementBlock(\"li\", _hoisted_9, [_createElementVNode(\"span\", _hoisted_10, _toDisplayString($data.userDataName), 1 /* TEXT */), _createElementVNode(\"a\", {\n    class: \"nav-link dropdown-toggle\",\n    href: \"#\",\n    role: \"button\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"dropdownOpen\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.toggleDropdown && $options.toggleDropdown(...args))\n  }, _cache[11] || (_cache[11] = [_createElementVNode(\"i\", {\n    class: \"fas fa-user\"\n  }, null, -1 /* HOISTED */)])), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"dropdown-menu\", {\n      show: $data.dropdownOpen\n    }]),\n    style: {\n      \"position\": \"absolute\",\n      \"top\": \"100%\",\n      \"right\": \"0\"\n    }\n  }, [_createVNode(_component_router_link, {\n    class: \"dropdown-item\",\n    to: \"/notifications\",\n    onClick: $options.toggleDropdown\n  }, {\n    default: _withCtx(() => [_cache[12] || (_cache[12] = _createElementVNode(\"i\", {\n      class: \"fas fa-bell\"\n    }, null, -1 /* HOISTED */)), _cache[13] || (_cache[13] = _createTextVNode(\" Notifiche \")), _createCommentVNode(\" Mostra il badge solo se unreadCount è maggiore di 0 \"), $data.unreadCount > 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11, _toDisplayString($data.unreadCount), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_router_link, {\n    class: \"dropdown-item\",\n    to: \"/profile\",\n    onClick: $options.toggleDropdown\n  }, {\n    default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\"Profilo\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_router_link, {\n    class: \"dropdown-item\",\n    to: \"/settings\",\n    onClick: $options.toggleDropdown\n  }, {\n    default: _withCtx(() => _cache[15] || (_cache[15] = [_createTextVNode(\"Impostazioni\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createElementVNode(\"a\", {\n    class: \"dropdown-item\",\n    href: \"#\",\n    onClick: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.logout && $options.logout(...args), [\"prevent\"]))\n  }, \"Logout\")], 2 /* CLASS */)])) : _createCommentVNode(\"v-if\", true)])], 2 /* CLASS */)])])), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"main\", _hoisted_14, [_createVNode(_component_router_view), _createCommentVNode(\" Visualizza il componente corretto in base alla rotta \")])])])]);\n}","map":{"version":3,"names":["class","key","style","_createElementBlock","id","onClick","_cache","args","$options","closeNavbarOnClick","$data","authToken","_createElementVNode","_hoisted_1","href","_withModifiers","handleLogoClick","type","toggleNavbar","_normalizeClass","show","navbarOpen","_hoisted_2","isLoggedIn","_Fragment","userRole","_hoisted_3","_createVNode","_component_router_link","to","closeNavbar","default","_withCtx","_createTextVNode","_","_createCommentVNode","_hoisted_4","viewRadiographsRoute","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_toDisplayString","userDataName","role","toggleDropdown","dropdownOpen","unreadCount","_hoisted_11","logout","_hoisted_12","_hoisted_13","_hoisted_14","_component_router_view"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\" @click=\"closeNavbarOnClick\">\r\n    <nav\r\n      v-bind:key=\"authToken\"\r\n      class=\"navbar navbar-expand-lg navbar-dark bg-primary shadow-lg sticky-top\"\r\n    >\r\n      <div class=\"container d-flex justify-content-between\">\r\n        <a class=\"navbar-brand\" href=\"#\" @click.prevent=\"handleLogoClick\">\r\n          Radiology Portal\r\n        </a>\r\n        <button\r\n          class=\"navbar-toggler\"\r\n          type=\"button\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"navbarOpen\"\r\n          aria-label=\"Toggle navigation\"\r\n          @click.stop=\"toggleNavbar\"\r\n        >\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div\r\n          id=\"navbarNav\"\r\n          class=\"collapse navbar-collapse\"\r\n          :class=\"{ show: navbarOpen }\"\r\n        >\r\n          <ul class=\"navbar-nav me-auto\">\r\n            <template v-if=\"isLoggedIn\">\r\n              <li v-if=\"userRole === 'doctor'\" class=\"nav-item\">\r\n                <router-link\r\n                  class=\"nav-link\"\r\n                  to=\"/predict\"\r\n                  @click=\"closeNavbar\"\r\n                >\r\n                  Predici Radiografie\r\n                </router-link>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <router-link\r\n                  class=\"nav-link\"\r\n                  :to=\"viewRadiographsRoute\"\r\n                  @click=\"closeNavbar\"\r\n                  >Visualizza Radiografie</router-link\r\n                >\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <router-link\r\n                  class=\"nav-link\"\r\n                  to=\"/activity-calendar\"\r\n                  @click=\"closeNavbar\"\r\n                >\r\n                  Calendario Attività\r\n                </router-link>\r\n              </li>\r\n            </template>\r\n\r\n            <template v-else>\r\n              <li class=\"nav-item\">\r\n                <router-link\r\n                  class=\"nav-link\"\r\n                  to=\"/register\"\r\n                  @click=\"closeNavbar\"\r\n                >\r\n                  Registrati\r\n                </router-link>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <router-link class=\"nav-link\" to=\"/login\" @click=\"closeNavbar\">\r\n                  Login\r\n                </router-link>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n\r\n          <ul class=\"navbar-nav\">\r\n            <!-- Contenitore per il dropdown -->\r\n            <template v-if=\"isLoggedIn\">\r\n              <li class=\"nav-item dropdown d-flex align-items-center\">\r\n                <span class=\"nav-link me-2\" style=\"pointer-events: none\">{{\r\n                  userDataName\r\n                }}</span>\r\n\r\n                <a\r\n                  class=\"nav-link dropdown-toggle\"\r\n                  href=\"#\"\r\n                  role=\"button\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"dropdownOpen\"\r\n                  @click=\"toggleDropdown\"\r\n                >\r\n                  <i class=\"fas fa-user\"></i>\r\n                </a>\r\n                <div\r\n                  class=\"dropdown-menu\"\r\n                  :class=\"{ show: dropdownOpen }\"\r\n                  style=\"position: absolute; top: 100%; right: 0\"\r\n                >\r\n                  <router-link\r\n                    class=\"dropdown-item\"\r\n                    to=\"/notifications\"\r\n                    @click=\"toggleDropdown\"\r\n                  >\r\n                    <i class=\"fas fa-bell\"></i> Notifiche\r\n                    <!-- Mostra il badge solo se unreadCount è maggiore di 0 -->\r\n                    <span\r\n                      v-if=\"unreadCount > 0\"\r\n                      class=\"badge badge-pill badge-warning text-red\"\r\n                    >\r\n                      {{ unreadCount }}\r\n                    </span>\r\n                  </router-link>\r\n                  <router-link\r\n                    class=\"dropdown-item\"\r\n                    to=\"/profile\"\r\n                    @click=\"toggleDropdown\"\r\n                    >Profilo</router-link\r\n                  >\r\n                  <router-link\r\n                    class=\"dropdown-item\"\r\n                    to=\"/settings\"\r\n                    @click=\"toggleDropdown\"\r\n                    >Impostazioni</router-link\r\n                  >\r\n                  <a class=\"dropdown-item\" href=\"#\" @click.prevent=\"logout\"\r\n                    >Logout</a\r\n                  >\r\n                </div>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <main class=\"col-md-9\">\r\n          <router-view></router-view>\r\n          <!-- Visualizza il componente corretto in base alla rotta -->\r\n        </main>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport EventBus from \"./eventBus\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  data() {\r\n    return {\r\n      dropdownOpen: false,\r\n      navbarOpen: false,\r\n      authToken: null,\r\n      userRole: null,\r\n      userDataUid: null,\r\n      userDataName: null,\r\n      userDataSurname: null,\r\n      unreadCount: 0, // Aggiungi questa variabile per il conteggio delle notifiche non lette\r\n    };\r\n  },\r\n  computed: {\r\n    isLoggedIn() {\r\n      return !!this.authToken;\r\n    },\r\n    viewRadiographsRoute() {\r\n      if (this.userRole === \"patient\") {\r\n        localStorage.setItem(\"Name\", this.userDataName);\r\n        localStorage.setItem(\"Surname\", this.userDataSurname);\r\n        return { path: \"/view-radiographs\", query: { uid: this.userDataUid } };\r\n      } else {\r\n        return { path: \"/view-radiographs\" };\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    toggleNavbar() {\r\n      this.navbarOpen = !this.navbarOpen;\r\n    },\r\n    closeNavbar() {\r\n      this.navbarOpen = false; // Chiudi la navbar\r\n      this.dropdownOpen = false; // Chiudi il dropdown\r\n    },\r\n\r\n    closeNavbarOnClick(event) {\r\n      const isNavbar = event.target.closest(\".navbar\"); // Verifica se il clic è dentro la navbar\r\n      const isNavbarToggler = event.target.closest(\".navbar-toggler\"); // Verifica se il clic è sul bottone di toggling\r\n      const isDropdownMenu = event.target.closest(\".dropdown-menu\"); // Verifica se il clic è dentro il dropdown menu\r\n      const isDropdownToggle = event.target.closest(\".dropdown-toggle\"); // Verifica se il clic è sul bottone di toggle del dropdown\r\n\r\n      // Se il clic non è dentro la navbar, il toggler o il dropdown menu, chiudi sia la navbar che il dropdown\r\n      if (\r\n        !isNavbar &&\r\n        !isNavbarToggler &&\r\n        !isDropdownMenu &&\r\n        !isDropdownToggle\r\n      ) {\r\n        this.closeNavbar();\r\n      }\r\n    },\r\n    toggleDropdown() {\r\n      console.log(this.dropdownOpen);\r\n      this.dropdownOpen = !this.dropdownOpen;\r\n    },\r\n    logout() {\r\n      console.log(\"[DEBUG] Executing logout...\");\r\n      localStorage.clear();\r\n      this.authToken = null;\r\n      this.userRole = null;\r\n      this.userDataUid = null;\r\n      this.toggleDropdown();\r\n      EventBus.emit(\"auth-changed\");\r\n      this.$router.push(\"/\");\r\n    },\r\n    handleLogoClick() {\r\n      this.goToDashboard();\r\n      this.closeNavbar();\r\n    },\r\n    goToDashboard() {\r\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n      if (this.isLoggedIn) {\r\n        if (userData.role === \"doctor\") {\r\n          this.$router.push({ name: \"DoctorDashboard\" });\r\n        } else if (userData.role === \"patient\") {\r\n          this.$router.push({ name: \"PatientDashboard\" });\r\n        }\r\n      } else {\r\n        this.$router.push(\"/\");\r\n      }\r\n    },\r\n    updateAuthStatus() {\r\n      this.authToken = localStorage.getItem(\"authToken\");\r\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n      this.userRole = userData?.role || null;\r\n      this.userDataUid = userData?.uid || null;\r\n      this.userDataName = userData?.name || null;\r\n      this.userDataSurname = userData?.family_name || null;\r\n    },\r\n    updateUnreadCount(count) {\r\n      this.unreadCount = count; // Aggiorna il conteggio delle notifiche non lette\r\n      this.dropdownOpen = false;\r\n      //console.log(\"[DEBUG] updateAuthStatus - authToken:\", this.authToken);\r\n      //console.log(\"[DEBUG] role:\", this.userRole);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.updateAuthStatus(); // Inizializza authToken e userRole\r\n    EventBus.on(\"auth-changed\", this.updateAuthStatus);\r\n\r\n    // Aggiorna il conteggio delle notifiche non lette dal componente UserNotifications\r\n    EventBus.on(\"unread-count-changed\", this.updateUnreadCount); // Ascolta l'evento per il conteggio delle notifiche\r\n  },\r\n  beforeUnmount() {\r\n    EventBus.off(\"auth-changed\", this.updateAuthStatus);\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\nbody {\r\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n  background-color: #f0f2f5;\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n#app {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.row {\r\n  display: flex; /* Attiva Flexbox */\r\n  height: auto; /* Rimuovi l'altezza fissa */\r\n  justify-content: center; /* Centra orizzontalmente */\r\n  align-items: center; /* Centra verticalmente */\r\n  height: 100vh; /* Imposta l'altezza della riga al 100% della viewport */\r\n}\r\n\r\nmain {\r\n  max-width: 900px; /* Imposta una larghezza massima per il contenuto */\r\n  width: 100%; /* Occupa il 100% della larghezza del suo contenitore */\r\n  padding: 20px; /* Aggiunge del padding interno */\r\n  background: #ffffff; /* Sfondo bianco per il main */\r\n}\r\n\r\n.navbar {\r\n  background-color: #007bff;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  transition: background-color 0.3s;\r\n  padding-left: 20px;\r\n}\r\n\r\n.navbar:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.navbar-brand {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: #ffffff;\r\n}\r\n\r\n.navbar-nav .nav-item {\r\n  margin-left: 15px; /* Regola questo valore per aumentare o diminuire il distanziamento */\r\n}\r\n\r\n.nav-link {\r\n  font-size: 1.2rem; /* Stile uniformato */\r\n  color: #ffffff;\r\n}\r\n\r\n.nav-link:hover {\r\n  color: #d4d4d4;\r\n}\r\n\r\n.navbar-toggler-icon {\r\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23ffffff' viewBox='0 0 30 30'%3e%3cpath stroke='%23ffffff' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\");\r\n}\r\n\r\n.container-fluid {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  margin-left: 0px;\r\n  padding-left: 0px;\r\n}\r\n\r\n.dropdown-menu {\r\n  position: absolute;\r\n  background-color: #343a40;\r\n  border: none;\r\n  z-index: 1000;\r\n}\r\n\r\n.dropdown-item {\r\n  color: #cfd2d6;\r\n}\r\n\r\n.dropdown-item:hover {\r\n  background-color: #495057;\r\n  color: #ffffff;\r\n}\r\n\r\n.badge.text-red {\r\n  color: #db0808ea;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}