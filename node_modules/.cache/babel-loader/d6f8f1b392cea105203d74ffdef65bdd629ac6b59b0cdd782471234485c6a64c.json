{"ast":null,"code":"import { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\nimport { auth } from \"@/firebase\";\nimport EventBus from \"../eventBus\";\nimport { checkEmailVerification, signInUser, login, getAttemptsLeft, sendPasswordResetEmail, decrementLoginAttempts } from \"@/services/api-service\";\nexport default {\n  name: \"UserLogin\",\n  setup() {\n    // Stato del form\n    const form = ref({\n      email: \"\",\n      password: \"\",\n      rememberMe: false\n    });\n\n    // Stato degli errori\n    const errors = ref({\n      email: \"\",\n      password: \"\",\n      general: \"\"\n    });\n    const router = useRouter();\n    const currentStep = ref(1);\n    const loading = ref(false);\n    const showPassword = ref(false);\n    const showMfaStep = ref(false); // Toggle MFA step visibility\n    const qrCodeUrl = ref(\"\"); // Store QR code URL\n    const session = ref(\"\"); // Store MFA session token\n    const mfaCode = ref(\"\"); // Store user input MFA code\n\n    // Funzione per passare allo step successivo\n    const goToNextStep = () => {\n      if (isStepValid(currentStep.value)) {\n        currentStep.value++;\n      }\n    };\n\n    // Funzione per tornare allo step precedente\n    const goToPreviousStep = () => {\n      currentStep.value--;\n    };\n\n    // Funzione per creare un account (stub)\n    const createAccount = role => {\n      localStorage.setItem(\"userRole\", role);\n      router.push({\n        name: \"UserRegister\"\n      });\n    };\n\n    // Funzione per validare il form\n    const validateForm = () => {\n      errors.value = {\n        email: form.value.email ? \"\" : \"Email è richiesta\",\n        password: form.value.password ? \"\" : \"Password è richiesta\"\n      };\n      return Object.values(errors.value).every(error => !error);\n    };\n\n    // Funzione per validare lo step\n    const isStepValid = step => {\n      if (step === 1) {\n        return form.value.email;\n      } else if (step === 2) {\n        return form.value.password;\n      }\n      return false;\n    };\n    const sendPasswordResetEmailHandler = async () => {\n      try {\n        console.log(\"UserLogin mando reset\");\n        await sendPasswordResetEmail(form.value.email); // Passa l'oggetto auth come primo argomento\n      } catch (error) {\n        console.error(\"Errore durante l'invio dell'email di reset:\", error);\n        errors.value.general = \"Errore durante l'invio dell'email di reset.\";\n      }\n    };\n\n    // Funzione per mostrare/nascondere la password\n    const toggleShowPassword = () => {\n      showPassword.value = !showPassword.value;\n    };\n    const onSubmit = async () => {\n      if (!validateForm()) return;\n      loading.value = true;\n      errors.value.general = \"\"; // Reset errors\n\n      try {\n        // 1: Controllo email verificata\n        const emailVerified = await checkEmailVerification(form.value.email);\n        if (emailVerified) {\n          errors.value.general = emailVerified;\n          return;\n        }\n\n        // 2: Controllo credenziali\n        const user = await signInUser(auth, form.value.email, form.value.password);\n        if (!user) return;\n        // 2: Controllo tentativi di accesso\n        const attemptLeft = await getAttemptsLeft(form.value.email);\n        if (attemptLeft == 0) {\n          errors.value.general = \"Tentativi di accesso esauriti. Controlla la tua email per il link di reimpostazione della password.\";\n          return;\n        }\n        const token = await getIdToken(user);\n        await handleLoginResponse(token);\n      } catch (error) {\n        handleError(error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Funzione per ottenere il token ID\n    const getIdToken = async user => {\n      try {\n        return await user.getIdToken(); // Return the token\n      } catch (error) {\n        console.error(\"Errore durante l'ottenimento del token ID:\", error);\n        errors.value.general = \"Errore durante il login.\";\n      }\n    };\n\n    // Funzione per gestire la risposta del login\n    // Se si esegue in locale usare 127.0.0.1:5000, altrimenti 34.122.99.160\n    const handleLoginResponse = async token => {\n      try {\n        const response = await login(token);\n        storeUserData(response.data.user, token);\n        router.push({\n          name: \"WelcomePage\"\n        });\n      } catch (error) {\n        console.error(\"Errore durante la gestione della risposta del login:\", error);\n      }\n    };\n\n    // Funzione per memorizzare i dati dell'utente\n    const storeUserData = (userData, token) => {\n      localStorage.setItem(\"authToken\", token);\n      localStorage.setItem(\"username\", userData.email);\n      if (userData.doctorID) {\n        localStorage.setItem(\"doctorId\", userData.doctorID);\n      }\n      if (userData.role) {\n        localStorage.setItem(\"userRole\", userData.role);\n      }\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      localStorage.setItem(\"userData\", JSON.stringify(userData));\n      EventBus.emit(\"auth-changed\"); // Emit event for login notification\n    };\n\n    // Funzione per gestire gli errori\n    const handleError = error => {\n      console.error(\"Errore durante il processo di login:\", error);\n      if (error.code === \"auth/wrong-password\") {\n        errors.value.general = \"Password errata. Riprova.\";\n      } else if (error.code === \"auth/user-not-found\") {\n        errors.value.general = \"Utente non trovato. Controlla l'email.\";\n      } else if (error.code === \"auth/invalid-credential\") {\n        handleInvalidCredential();\n      } else if (error.code === \"auth/too-many-requests\") {\n        errors.value.general = \"Tentativi di accesso esauriti. Controlla la tua email per il link di reimpostazione della password.\";\n        sendPasswordResetEmailHandler(); // Trigger password reset\n      } else {\n        console.log(\"error: \", error);\n        errors.value.general = \"Errore sconosciuto durante il login.\";\n      }\n    };\n\n    // Funzione per gestire credenziali non valide\n    // Se si esegue in locale usare 127.0.0.1:5000, altrimenti 34.122.99.160\n    const handleInvalidCredential = async () => {\n      try {\n        const decrementResponse = await decrementLoginAttempts(form.value.email);\n        const attemptsRemaining = decrementResponse.loginAttemptsLeft;\n        if (attemptsRemaining == 0) {\n          errors.value.general = \"Tentativi di accesso esauriti. Controlla la tua email per il link di reimpostazione della password.\";\n          sendPasswordResetEmailHandler();\n        } else {\n          errors.value.general = `Password errata. Hai ${attemptsRemaining} tentativi rimanenti.`;\n        }\n      } catch (decrementError) {\n        console.error(\"Errore durante il decremento dei tentativi:\", decrementError);\n        errors.value.general = \"Errore nel decremento dei tentativi.\";\n      }\n    };\n    return {\n      form,\n      errors,\n      currentStep,\n      loading,\n      showPassword,\n      showMfaStep,\n      qrCodeUrl,\n      session,\n      mfaCode,\n      goToNextStep,\n      goToPreviousStep,\n      createAccount,\n      validateForm,\n      isStepValid,\n      toggleShowPassword,\n      onSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","axios","auth","EventBus","checkEmailVerification","signInUser","login","getAttemptsLeft","sendPasswordResetEmail","decrementLoginAttempts","name","setup","form","email","password","rememberMe","errors","general","router","currentStep","loading","showPassword","showMfaStep","qrCodeUrl","session","mfaCode","goToNextStep","isStepValid","value","goToPreviousStep","createAccount","role","localStorage","setItem","push","validateForm","Object","values","every","error","step","sendPasswordResetEmailHandler","console","log","toggleShowPassword","onSubmit","emailVerified","user","attemptLeft","token","getIdToken","handleLoginResponse","handleError","response","storeUserData","data","userData","doctorID","defaults","headers","common","JSON","stringify","emit","code","handleInvalidCredential","decrementResponse","attemptsRemaining","loginAttemptsLeft","decrementError"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\UserLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <div class=\"container mt-5\">\r\n      <div class=\"header\">\r\n        <button\r\n          v-if=\"currentStep > 1\"\r\n          class=\"back-button\"\r\n          @click=\"goToPreviousStep\"\r\n        >\r\n          <img src=\"@/assets/back-icon.svg\" alt=\"Indietro\" class=\"back-icon\" />\r\n        </button>\r\n      </div>\r\n\r\n      <span class=\"step-title\">Passaggio {{ currentStep }} di 2</span>\r\n      <h2 class=\"mb-4\">Accedi al tuo Account</h2>\r\n\r\n      <!-- Step 1: Login Form -->\r\n      <form @submit.prevent=\"onSubmit\" v-if=\"!showMfaStep\">\r\n        <!-- Step 1: Inserisci Email -->\r\n        <div v-if=\"currentStep === 1\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"email\" class=\"form-label\">Email</label>\r\n            <input\r\n              id=\"email\"\r\n              v-model=\"form.email\"\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              :class=\"{ 'is-invalid': errors.email }\"\r\n              required\r\n            />\r\n            <div class=\"invalid-feedback\">{{ errors.email }}</div>\r\n          </div>\r\n\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary btn-next\"\r\n            @click=\"goToNextStep\"\r\n            :disabled=\"!isStepValid(currentStep)\"\r\n          >\r\n            Avanti\r\n          </button>\r\n\r\n          <div class=\"line-container\">\r\n            <hr class=\"line\" />\r\n            <span class=\"or-text\">oppure</span>\r\n            <hr class=\"line\" />\r\n          </div>\r\n\r\n          <router-link\r\n            to=\"/register\"\r\n            class=\"btn btn-light btn-create-account\"\r\n            @click=\"createAccount('doctor')\"\r\n          >\r\n            Registrati come Dottore\r\n          </router-link>\r\n\r\n          <router-link\r\n            to=\"/register\"\r\n            class=\"btn btn-light btn-create-account\"\r\n            @click=\"createAccount('patient')\"\r\n          >\r\n            Registrati come Paziente\r\n          </router-link>\r\n        </div>\r\n\r\n        <!-- Step 2: Inserisci Password -->\r\n        <div v-if=\"currentStep === 2\">\r\n          <div class=\"email-display\">\r\n            <span class=\"email-text\">{{ form.email }}</span>\r\n            <span class=\"change-text\" @click=\"goToPreviousStep\">Cambia</span>\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label for=\"password\" class=\"form-label\">Password</label>\r\n            <div class=\"input-group\">\r\n              <input\r\n                id=\"password\"\r\n                v-model=\"form.password\"\r\n                :type=\"showPassword ? 'text' : 'password'\"\r\n                class=\"form-control\"\r\n                :class=\"{ 'is-invalid': errors.password }\"\r\n                required\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn eye-button\"\r\n                @click=\"toggleShowPassword\"\r\n              >\r\n                <img\r\n                  :src=\"\r\n                    showPassword\r\n                      ? require('@/assets/eye-off.svg')\r\n                      : require('@/assets/eye-on.svg')\r\n                  \"\r\n                  alt=\"Toggle Password Visibility\"\r\n                  class=\"eye-icon\"\r\n                />\r\n              </button>\r\n            </div>\r\n            <div v-if=\"errors.general\" class=\"text-danger mt-1\">\r\n              {{ errors.general }}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mb-3 form-check\">\r\n            <input\r\n              id=\"rememberMe\"\r\n              v-model=\"form.rememberMe\"\r\n              type=\"checkbox\"\r\n              class=\"form-check-input\"\r\n            />\r\n            <label for=\"rememberMe\" class=\"form-check-label\">Ricordami</label>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            class=\"btn btn-primary btn-next\"\r\n            :disabled=\"loading || !isStepValid(currentStep)\"\r\n          >\r\n            <span v-if=\"loading\">Login...</span>\r\n            <span v-else>Accedi</span>\r\n          </button>\r\n\r\n          <div class=\"line-container\">\r\n            <hr class=\"line\" />\r\n            <span class=\"or-text\">oppure</span>\r\n            <hr class=\"line\" />\r\n          </div>\r\n\r\n          <router-link\r\n            to=\"/register\"\r\n            class=\"btn btn-light btn-create-account\"\r\n            @click=\"createAccount('doctor')\"\r\n          >\r\n            Registrati come Dottore\r\n          </router-link>\r\n\r\n          <router-link\r\n            to=\"/register\"\r\n            class=\"btn btn-light btn-create-account\"\r\n            @click=\"createAccount('patient')\"\r\n          >\r\n            Registrati come Paziente\r\n          </router-link>\r\n\r\n          <div v-if=\"errors.general\" class=\"invalid-feedback mt-3\">\r\n            {{ errors.general }}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- Loading overlay -->\r\n    <div v-if=\"loading\" class=\"loading-overlay\">\r\n      <div class=\"loading-icon\">\r\n        <img src=\"@/assets/loading-icon.svg\" alt=\"Loading...\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport axios from \"axios\";\r\nimport { auth } from \"@/firebase\";\r\nimport EventBus from \"../eventBus\";\r\nimport {\r\n  checkEmailVerification,\r\n  signInUser,\r\n  login,\r\n  getAttemptsLeft,\r\n  sendPasswordResetEmail,\r\n  decrementLoginAttempts,\r\n} from \"@/services/api-service\";\r\n\r\nexport default {\r\n  name: \"UserLogin\",\r\n  setup() {\r\n    // Stato del form\r\n    const form = ref({\r\n      email: \"\",\r\n      password: \"\",\r\n      rememberMe: false,\r\n    });\r\n\r\n    // Stato degli errori\r\n    const errors = ref({\r\n      email: \"\",\r\n      password: \"\",\r\n      general: \"\",\r\n    });\r\n\r\n    const router = useRouter();\r\n    const currentStep = ref(1);\r\n    const loading = ref(false);\r\n    const showPassword = ref(false);\r\n    const showMfaStep = ref(false); // Toggle MFA step visibility\r\n    const qrCodeUrl = ref(\"\"); // Store QR code URL\r\n    const session = ref(\"\"); // Store MFA session token\r\n    const mfaCode = ref(\"\"); // Store user input MFA code\r\n\r\n    // Funzione per passare allo step successivo\r\n    const goToNextStep = () => {\r\n      if (isStepValid(currentStep.value)) {\r\n        currentStep.value++;\r\n      }\r\n    };\r\n\r\n    // Funzione per tornare allo step precedente\r\n    const goToPreviousStep = () => {\r\n      currentStep.value--;\r\n    };\r\n\r\n    // Funzione per creare un account (stub)\r\n    const createAccount = (role) => {\r\n      localStorage.setItem(\"userRole\", role);\r\n      router.push({ name: \"UserRegister\" });\r\n    };\r\n\r\n    // Funzione per validare il form\r\n    const validateForm = () => {\r\n      errors.value = {\r\n        email: form.value.email ? \"\" : \"Email è richiesta\",\r\n        password: form.value.password ? \"\" : \"Password è richiesta\",\r\n      };\r\n      return Object.values(errors.value).every((error) => !error);\r\n    };\r\n\r\n    // Funzione per validare lo step\r\n    const isStepValid = (step) => {\r\n      if (step === 1) {\r\n        return form.value.email;\r\n      } else if (step === 2) {\r\n        return form.value.password;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    const sendPasswordResetEmailHandler = async () => {\r\n      try {\r\n        console.log(\"UserLogin mando reset\");\r\n        await sendPasswordResetEmail(form.value.email); // Passa l'oggetto auth come primo argomento\r\n      } catch (error) {\r\n        console.error(\"Errore durante l'invio dell'email di reset:\", error);\r\n        errors.value.general = \"Errore durante l'invio dell'email di reset.\";\r\n      }\r\n    };\r\n\r\n    // Funzione per mostrare/nascondere la password\r\n    const toggleShowPassword = () => {\r\n      showPassword.value = !showPassword.value;\r\n    };\r\n\r\n    const onSubmit = async () => {\r\n      if (!validateForm()) return;\r\n\r\n      loading.value = true;\r\n      errors.value.general = \"\"; // Reset errors\r\n\r\n      try {\r\n        // 1: Controllo email verificata\r\n        const emailVerified = await checkEmailVerification(form.value.email);\r\n        if (emailVerified) {\r\n          errors.value.general = emailVerified;\r\n          return;\r\n        }\r\n\r\n        // 2: Controllo credenziali\r\n        const user = await signInUser(\r\n          auth,\r\n          form.value.email,\r\n          form.value.password\r\n        );\r\n        if (!user) return;\r\n        // 2: Controllo tentativi di accesso\r\n        const attemptLeft = await getAttemptsLeft(form.value.email);\r\n        if (attemptLeft == 0) {\r\n          errors.value.general =\r\n            \"Tentativi di accesso esauriti. Controlla la tua email per il link di reimpostazione della password.\";\r\n          return;\r\n        }\r\n        const token = await getIdToken(user);\r\n        await handleLoginResponse(token);\r\n      } catch (error) {\r\n        handleError(error);\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    // Funzione per ottenere il token ID\r\n    const getIdToken = async (user) => {\r\n      try {\r\n        return await user.getIdToken(); // Return the token\r\n      } catch (error) {\r\n        console.error(\"Errore durante l'ottenimento del token ID:\", error);\r\n        errors.value.general = \"Errore durante il login.\";\r\n      }\r\n    };\r\n\r\n    // Funzione per gestire la risposta del login\r\n    // Se si esegue in locale usare 127.0.0.1:5000, altrimenti 34.122.99.160\r\n    const handleLoginResponse = async (token) => {\r\n      try {\r\n        const response = await login(token);\r\n        storeUserData(response.data.user, token);\r\n        router.push({ name: \"WelcomePage\" });\r\n      } catch (error) {\r\n        console.error(\r\n          \"Errore durante la gestione della risposta del login:\",\r\n          error\r\n        );\r\n      }\r\n    };\r\n\r\n    // Funzione per memorizzare i dati dell'utente\r\n    const storeUserData = (userData, token) => {\r\n      localStorage.setItem(\"authToken\", token);\r\n      localStorage.setItem(\"username\", userData.email);\r\n\r\n      if (userData.doctorID) {\r\n        localStorage.setItem(\"doctorId\", userData.doctorID);\r\n      }\r\n\r\n      if (userData.role) {\r\n        localStorage.setItem(\"userRole\", userData.role);\r\n      }\r\n\r\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n      localStorage.setItem(\"userData\", JSON.stringify(userData));\r\n\r\n      EventBus.emit(\"auth-changed\"); // Emit event for login notification\r\n    };\r\n\r\n    // Funzione per gestire gli errori\r\n    const handleError = (error) => {\r\n      console.error(\"Errore durante il processo di login:\", error);\r\n      if (error.code === \"auth/wrong-password\") {\r\n        errors.value.general = \"Password errata. Riprova.\";\r\n      } else if (error.code === \"auth/user-not-found\") {\r\n        errors.value.general = \"Utente non trovato. Controlla l'email.\";\r\n      } else if (error.code === \"auth/invalid-credential\") {\r\n        handleInvalidCredential();\r\n      } else if (error.code === \"auth/too-many-requests\") {\r\n        errors.value.general =\r\n          \"Tentativi di accesso esauriti. Controlla la tua email per il link di reimpostazione della password.\";\r\n        sendPasswordResetEmailHandler(); // Trigger password reset\r\n      } else {\r\n        console.log(\"error: \", error);\r\n        errors.value.general = \"Errore sconosciuto durante il login.\";\r\n      }\r\n    };\r\n\r\n    // Funzione per gestire credenziali non valide\r\n    // Se si esegue in locale usare 127.0.0.1:5000, altrimenti 34.122.99.160\r\n    const handleInvalidCredential = async () => {\r\n      try {\r\n        const decrementResponse = await decrementLoginAttempts(\r\n          form.value.email\r\n        );\r\n\r\n        const attemptsRemaining = decrementResponse.loginAttemptsLeft;\r\n        if (attemptsRemaining == 0) {\r\n          errors.value.general =\r\n            \"Tentativi di accesso esauriti. Controlla la tua email per il link di reimpostazione della password.\";\r\n          sendPasswordResetEmailHandler();\r\n        } else {\r\n          errors.value.general = `Password errata. Hai ${attemptsRemaining} tentativi rimanenti.`;\r\n        }\r\n      } catch (decrementError) {\r\n        console.error(\r\n          \"Errore durante il decremento dei tentativi:\",\r\n          decrementError\r\n        );\r\n        errors.value.general = \"Errore nel decremento dei tentativi.\";\r\n      }\r\n    };\r\n\r\n    return {\r\n      form,\r\n      errors,\r\n      currentStep,\r\n      loading,\r\n      showPassword,\r\n      showMfaStep,\r\n      qrCodeUrl,\r\n      session,\r\n      mfaCode,\r\n      goToNextStep,\r\n      goToPreviousStep,\r\n      createAccount,\r\n      validateForm,\r\n      isStepValid,\r\n      toggleShowPassword,\r\n      onSubmit,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login {\r\n  background: #ffffff; /* Sfondo bianco */\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0);\r\n}\r\n\r\n.container {\r\n  max-width: 400px;\r\n  padding: 40px;\r\n  border-radius: 15px;\r\n  background: #ffffff;\r\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\r\n  margin-top: 100px;\r\n  height: auto;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.back-button {\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-left: -10px;\r\n}\r\n\r\n.back-icon {\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n\r\n.step-title {\r\n  font-size: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\nh2 {\r\n  font-size: 18px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.form-label {\r\n  font-size: 12px;\r\n}\r\n\r\n.form-control {\r\n  background: #f2f2f2;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 12px;\r\n}\r\n\r\n.form-check-label {\r\n  font-size: 12px; /* Dimensione del testo più piccola */\r\n}\r\n\r\n.form-check-input {\r\n  transform: scale(0.75); /* Riduce la dimensione della checkbox di poco */\r\n  margin-top: 5px; /* Sposta leggermente la checkbox verso il basso per allineamento */\r\n}\r\n\r\n.input-group {\r\n  position: relative;\r\n}\r\n\r\n.eye-button {\r\n  background: transparent;\r\n  border: 1px solid #ccc;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 46px;\r\n}\r\n\r\n.eye-icon {\r\n  width: 18px;\r\n  height: 18px;\r\n  margin: auto;\r\n}\r\n\r\n.btn-next {\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  padding: 0.4rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.line-container {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n}\r\n\r\n.line {\r\n  flex: 1;\r\n}\r\n\r\n.or-text {\r\n  margin: 0 1rem;\r\n  font-size: small;\r\n}\r\n\r\n.btn-create-account {\r\n  background: #d9d9d9; /* Colore grigio chiaro */\r\n  color: black; /* Colore del testo */\r\n  width: 100%;\r\n  margin-top: 15px; /* Spazio sopra il pulsante */\r\n  padding: 0.4rem; /* Ridotto per i pulsanti, più corto verticalmente */\r\n  font-size: 13px; /* Dimensione del testo più piccola */\r\n}\r\n\r\n.btn-next {\r\n  font-size: 13px; /* Dimensione del testo più piccola per il pulsante \"Avanti\" */\r\n}\r\n\r\n.email-display {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.email-text {\r\n  font-size: 14px; /* Dimensione testo per l'email */\r\n  color: black; /* Colore del testo */\r\n}\r\n\r\n.change-text {\r\n  font-size: 14px; /* Dimensione testo per \"Cambia\" */\r\n  color: black; /* Colore del testo */\r\n  text-decoration: underline; /* Sottolinea il testo */\r\n  cursor: pointer; /* Aggiunge il cursore pointer */\r\n}\r\n\r\n.loading-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(255, 255, 255, 0.6);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.loading-icon {\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n.text-danger {\r\n  font-size: 0.8rem; /* Font più piccolo (puoi modificarlo a piacere) */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}