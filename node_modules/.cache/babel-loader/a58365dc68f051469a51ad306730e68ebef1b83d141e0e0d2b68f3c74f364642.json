{"ast":null,"code":"import { resetPassword } from \"@/services/api-service\";\nexport default {\n  name: \"ResetPassword\",\n  data() {\n    return {\n      verificationMessage: \"Reimposta la tua password\",\n      successMessage: null,\n      // Messaggio di successo\n      errorMessage: null,\n      // Messaggio di errore\n      isLoading: false,\n      newPassword: \"\" // Valore della nuova password\n    };\n  },\n  methods: {\n    async updatePassword() {\n      if (!this.newPassword) {\n        this.errorMessage = \"La password non può essere vuota.\";\n        return;\n      }\n      console.log(\"Nuova psw: \" + this.newPassword);\n      try {\n        const response = await resetPassword(this.$route.params.uid, this.newPassword);\n\n        // Imposta il messaggio di successo\n        this.successMessage = \"La tua password è stata aggiornata con successo!\";\n        this.errorMessage = null; // Resetta l'errore in caso di successo\n        console.log(\"Risposta server --> \" + response.data.message);\n      } catch (error) {\n        this.errorMessage = error.response?.data?.error || \"Errore durante l'aggiornamento della password.\";\n        this.successMessage = null; // Resetta il messaggio di successo in caso di errore\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    goToLogin() {\n      this.$router.push(\"/login\");\n    }\n  }\n};","map":{"version":3,"names":["resetPassword","name","data","verificationMessage","successMessage","errorMessage","isLoading","newPassword","methods","updatePassword","console","log","response","$route","params","uid","message","error","goToLogin","$router","push"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\ResetPassword.vue"],"sourcesContent":["<template>\n  <div class=\"reset-password\">\n    <div class=\"container mt-5\">\n      <!-- Titolo -->\n      <h2 class=\"mb-4\" v-if=\"!successMessage\">Reimposta la tua password</h2>\n      <h2 class=\"mb-4\" v-if=\"successMessage\">{{ successMessage }}</h2>\n\n      <!-- Messaggio di errore -->\n      <p v-if=\"errorMessage\">{{ errorMessage }}</p>\n\n      <!-- Campo per inserire la nuova password -->\n      <div v-if=\"!successMessage\">\n        <label for=\"new-password\">Inserisci la nuova password:</label>\n        <input\n          type=\"password\"\n          id=\"new-password\"\n          class=\"form-control mt-3\"\n          v-model=\"newPassword\"\n          placeholder=\"Nuova password\"\n        />\n        <button class=\"btn btn-primary mt-4\" @click=\"updatePassword\">\n          Aggiorna Password\n        </button>\n      </div>\n\n      <!-- Bottone per il login dopo successo -->\n      <div class=\"btn-group mt-4\" v-if=\"successMessage\">\n        <button class=\"btn btn-primary btn-next\" @click=\"goToLogin\">\n          Esegui il login\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { resetPassword } from \"@/services/api-service\";\n\nexport default {\n  name: \"ResetPassword\",\n  data() {\n    return {\n      verificationMessage: \"Reimposta la tua password\",\n      successMessage: null, // Messaggio di successo\n      errorMessage: null, // Messaggio di errore\n      isLoading: false,\n      newPassword: \"\", // Valore della nuova password\n    };\n  },\n  methods: {\n    async updatePassword() {\n      if (!this.newPassword) {\n        this.errorMessage = \"La password non può essere vuota.\";\n        return;\n      }\n\n      console.log(\"Nuova psw: \" + this.newPassword);\n\n      try {\n        const response = await resetPassword(\n          this.$route.params.uid,\n          this.newPassword\n        );\n\n        // Imposta il messaggio di successo\n        this.successMessage =\n          \"La tua password è stata aggiornata con successo!\";\n        this.errorMessage = null; // Resetta l'errore in caso di successo\n        console.log(\"Risposta server --> \" + response.data.message);\n      } catch (error) {\n        this.errorMessage =\n          error.response?.data?.error ||\n          \"Errore durante l'aggiornamento della password.\";\n        this.successMessage = null; // Resetta il messaggio di successo in caso di errore\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    goToLogin() {\n      this.$router.push(\"/login\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n.reset-password {\n  background: #ffffff; /* Sfondo bianco, simile alla pagina di login */\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0); /* Rimuove ombre esterne */\n}\n\n.container {\n  max-width: 80%;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1); /* Simile alla shadow del login */\n  margin-top: 100px;\n  height: auto;\n  text-align: center; /* Centra il testo */\n  flex-grow: 1; /* Permette al contenuto principale di occupare lo spazio rimanente */\n  margin-left: 20px; /* Margine sinistro per distanziare il contenuto dalla sidebar */\n}\n\nh2 {\n  font-size: 18px; /* Uniforma il font size al login */\n  margin-bottom: 30px;\n}\n\np {\n  font-size: 14px;\n  color: #6c757d;\n}\n\n.btn-group .btn {\n  width: 100%; /* Assicura che i bottoni occupino l'intera larghezza */\n  margin-top: 20px;\n  padding: 10px;\n}\n\n.btn-primary {\n  background-color: #007bff;\n  color: white;\n  padding: 8px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 80%;\n  max-width: 300px;\n  min-width: 200px;\n  font-size: 13px;\n  transition: background-color 0.3s ease;\n  text-align: center;\n  display: inline-block;\n}\n\n.btn-primary:hover {\n  background-color: #0056b3;\n}\n\n.sidebar {\n  top: 0;\n  width: 250px; /* Imposta la larghezza della sidebar */\n  height: 100vh; /* Imposta l'altezza della sidebar al 100% della viewport */\n  padding: 20px; /* Padding interno */\n  background: linear-gradient(180deg, #212529, #343a40);\n}\n\n.sidebar .nav-link {\n  color: #cfd2d6;\n}\n\n.sidebar .nav-link:hover {\n  background-color: #495057;\n  border-radius: 5px;\n}\n\n.nav-link {\n  padding: 10px 15px; /* Aggiunge padding ai link per migliorarne l'aspetto */\n}\n\n@media (max-width: 767.98px) {\n  .navbar-brand {\n    font-size: 1.5rem;\n  }\n\n  .sidebar {\n    display: none;\n  }\n}\n</style>\n"],"mappings":"AAoCA,SAASA,aAAY,QAAS,wBAAwB;AAEtD,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,mBAAmB,EAAE,2BAA2B;MAChDC,cAAc,EAAE,IAAI;MAAE;MACtBC,YAAY,EAAE,IAAI;MAAE;MACpBC,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAE,EAAE,CAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI,CAAC,IAAI,CAACF,WAAW,EAAE;QACrB,IAAI,CAACF,YAAW,GAAI,mCAAmC;QACvD;MACF;MAEAK,OAAO,CAACC,GAAG,CAAC,aAAY,GAAI,IAAI,CAACJ,WAAW,CAAC;MAE7C,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMZ,aAAa,CAClC,IAAI,CAACa,MAAM,CAACC,MAAM,CAACC,GAAG,EACtB,IAAI,CAACR,WACP,CAAC;;QAED;QACA,IAAI,CAACH,cAAa,GAChB,kDAAkD;QACpD,IAAI,CAACC,YAAW,GAAI,IAAI,EAAE;QAC1BK,OAAO,CAACC,GAAG,CAAC,sBAAqB,GAAIC,QAAQ,CAACV,IAAI,CAACc,OAAO,CAAC;MAC7D,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACZ,YAAW,GACdY,KAAK,CAACL,QAAQ,EAAEV,IAAI,EAAEe,KAAI,IAC1B,gDAAgD;QAClD,IAAI,CAACb,cAAa,GAAI,IAAI,EAAE;MAC9B,UAAU;QACR,IAAI,CAACE,SAAQ,GAAI,KAAK;MACxB;IACF,CAAC;IACDY,SAASA,CAAA,EAAG;MACV,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}