{"ast":null,"code":"export default {\n  name: \"UserNotifications\",\n  data() {\n    return {\n      notifications: []\n    };\n  },\n  mounted() {\n    this.fetchNotifications();\n  },\n  methods: {\n    async fetchNotifications() {\n      try {\n        console.log(\"Fetching notifications...\");\n        console.log(\"Selected patient ID:\", this.selectedPatientId);\n\n        // Verifica che patientId non sia undefined\n        if (!this.selectedPatientId) {\n          console.error(\"Errore: patientId non definito!\");\n          return;\n        }\n\n        // Recupera le notifiche dal backend\n        const response = await fetch(`/api/notifications?patientId=${this.selectedPatientId}`);\n        if (!response.ok) {\n          throw new Error(\"Errore nel recupero delle notifiche\");\n        }\n        const data = await response.json();\n        console.log(\"Notifications data:\", data); // Stampa il risultato delle notifiche\n        this.notifications = data.notifications; // Supponiamo che il backend ritorni un array di notifiche\n      } catch (error) {\n        console.error(\"Errore nel recupero delle notifiche:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","notifications","mounted","fetchNotifications","methods","console","log","selectedPatientId","error","response","fetch","ok","Error","json"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/views/UserNotifications.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <h2>Notifiche</h2>\n    <div v-if=\"notifications.length\">\n      <ul class=\"list-group\">\n        <li\n          v-for=\"(notification, index) in notifications\"\n          :key=\"index\"\n          class=\"list-group-item\"\n        >\n          {{ notification.message }}\n          <span class=\"badge badge-success float-right\">{{\n            notification.date\n          }}</span>\n        </li>\n      </ul>\n    </div>\n    <div v-else>\n      <p>Non ci sono notifiche.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"UserNotifications\",\n  data() {\n    return {\n      notifications: [],\n    };\n  },\n\n  mounted() {\n    this.fetchNotifications();\n  },\n\n  methods: {\n    async fetchNotifications() {\n      try {\n        console.log(\"Fetching notifications...\");\n        console.log(\"Selected patient ID:\", this.selectedPatientId);\n\n        // Verifica che patientId non sia undefined\n        if (!this.selectedPatientId) {\n          console.error(\"Errore: patientId non definito!\");\n          return;\n        }\n\n        // Recupera le notifiche dal backend\n        const response = await fetch(`/api/notifications?patientId=${this.selectedPatientId}`);\n        if (!response.ok) {\n          throw new Error(\"Errore nel recupero delle notifiche\");\n        }\n\n        const data = await response.json();\n        console.log(\"Notifications data:\", data);  // Stampa il risultato delle notifiche\n        this.notifications = data.notifications; // Supponiamo che il backend ritorni un array di notifiche\n      } catch (error) {\n        console.error(\"Errore nel recupero delle notifiche:\", error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.list-group-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.float-right {\n  margin-left: 10px;\n}\n</style>\n"],"mappings":"AAwBA,eAAe;EACbA,IAAI,EAAE,mBAAmB;EACzBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,kBAAkB,CAAC,CAAC;EAC3B,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMD,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACFE,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QACxCD,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAACC,iBAAiB,CAAC;;QAE3D;QACA,IAAI,CAAC,IAAI,CAACA,iBAAiB,EAAE;UAC3BF,OAAO,CAACG,KAAK,CAAC,iCAAiC,CAAC;UAChD;QACF;;QAEA;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,gCAAgC,IAAI,CAACH,iBAAiB,EAAE,CAAC;QACtF,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;QACxD;QAEA,MAAMZ,IAAG,GAAI,MAAMS,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCR,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEN,IAAI,CAAC,EAAG;QAC3C,IAAI,CAACC,aAAY,GAAID,IAAI,CAACC,aAAa,EAAE;MAC3C,EAAE,OAAOO,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}