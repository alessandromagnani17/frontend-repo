{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"RegisterComponent\",\n  data() {\n    return {\n      form: {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        // Added confirmPassword field\n        nome: \"\",\n        // First Name\n        cognome: \"\",\n        // Last Name\n        data: \"\",\n        // Date of Birth\n        telefono: \"\",\n        // Phone Number\n        gender: \"\",\n        address: \"\"\n      },\n      errors: {},\n      loading: false,\n      showPassword: false,\n      // Added showPassword for password visibility\n      showConfirmPassword: false,\n      // Added showConfirmPassword for confirm password visibility\n      showPasteError: false // Flag for displaying paste error message\n    };\n  },\n  computed: {\n    passwordsMatch() {\n      return this.form.password === this.form.confirmPassword;\n    }\n  },\n  methods: {\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    },\n    toggleConfirmPasswordVisibility() {\n      this.showConfirmPassword = !this.showConfirmPassword;\n    },\n    showPasteWarning() {\n      this.showPasteError = true; // Set the flag to true when paste is attempted\n      setTimeout(() => {\n        this.showPasteError = false; // Reset the flag after a short delay\n      }, 3000);\n    },\n    async onSubmit() {\n      this.loading = true;\n      this.errors = {};\n      try {\n        const {\n          username,\n          email,\n          password,\n          nome,\n          cognome,\n          data,\n          telefono,\n          gender,\n          address\n        } = this.form;\n\n        // Log the registration data\n        console.log(\"Registration data:\", {\n          username,\n          email,\n          password,\n          nome,\n          cognome,\n          data,\n          telefono,\n          gender,\n          address\n        });\n        const response = await axios.post(\"http://127.0.0.1:5000/register\", {\n          username,\n          email,\n          password,\n          nome,\n          cognome,\n          data,\n          telefono,\n          gender,\n          address\n        });\n        alert(\"Registration successful! Please check your email for verification.\");\n        console.log(response.data);\n      } catch (error) {\n        console.error(\"Error signing up:\", error);\n        if (error.response) {\n          console.error(\"Response data:\", error.response.data);\n          this.errors.general = error.response.data.error || \"Registration failed\";\n        } else {\n          this.errors.general = error.message;\n        }\n        alert(\"Error signing up: \" + this.errors.general);\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","form","username","email","password","confirmPassword","nome","cognome","telefono","gender","address","errors","loading","showPassword","showConfirmPassword","showPasteError","computed","passwordsMatch","methods","togglePasswordVisibility","toggleConfirmPasswordVisibility","showPasteWarning","setTimeout","onSubmit","console","log","response","post","alert","error","general","message"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/UserRegister.vue"],"sourcesContent":["<template>\n  <div class=\"register\">\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4\">Create Your Account</h2>\n      <form @submit.prevent=\"onSubmit\">\n        <!-- Username -->\n        <div class=\"mb-3\">\n          <label for=\"username\" class=\"form-label\">Username</label>\n          <input\n            id=\"username\"\n            v-model=\"form.username\"\n            type=\"text\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n\n        <!-- Email -->\n        <div class=\"mb-3\">\n          <label for=\"email\" class=\"form-label\">Email</label>\n          <input\n            id=\"email\"\n            v-model=\"form.email\"\n            type=\"email\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n\n        <!-- Password -->\n        <div class=\"mb-3\">\n          <label for=\"password\" class=\"form-label\">Password</label>\n          <div class=\"input-group\">\n            <input\n              id=\"password\"\n              v-model=\"form.password\"\n              :type=\"showPassword ? 'text' : 'password'\"\n              class=\"form-control password-input\"\n              @paste.prevent=\"showPasteWarning\"\n              required\n            />\n            <button\n              class=\"btn btn-outline-secondary\"\n              type=\"button\"\n              @click=\"togglePasswordVisibility\"\n              title=\"Toggle Password Visibility\"\n            >\n              <img\n                :src=\"showPassword ? require('@/assets/eye-off.svg') : require('@/assets/eye-on.svg')\"\n                alt=\"Toggle Password Visibility\"\n                class=\"eye-icon\"\n              />\n            </button>\n          </div>\n          <div v-if=\"showPasteError\" class=\"text-danger mt-1\">\n            Pasting is not allowed in the password fields.\n          </div>\n        </div>\n\n        <!-- Confirm Password -->\n        <div class=\"mb-3\">\n          <label for=\"confirmPassword\" class=\"form-label\">Confirm Password</label>\n          <div class=\"input-group\">\n            <input\n              id=\"confirmPassword\"\n              v-model=\"form.confirmPassword\"\n              :type=\"showConfirmPassword ? 'text' : 'password'\"\n              class=\"form-control password-input\"\n              @paste.prevent=\"showPasteWarning\"\n              required\n            />\n            <button\n              class=\"btn btn-outline-secondary\"\n              type=\"button\"\n              @click=\"toggleConfirmPasswordVisibility\"\n              title=\"Toggle Password Visibility\"\n            >\n              <img\n                :src=\"showConfirmPassword ? require('@/assets/eye-off.svg') : require('@/assets/eye-on.svg')\"\n                alt=\"Toggle Password Visibility\"\n                class=\"eye-icon\"\n              />\n            </button>\n          </div>\n          <div v-if=\"showPasteError\" class=\"text-danger mt-1\">\n            Pasting is not allowed in the password fields.\n          </div>\n        </div>\n\n        <!-- First Name -->\n        <div class=\"mb-3\">\n          <label for=\"nome\" class=\"form-label\">First Name</label>\n          <input\n            id=\"nome\"\n            v-model=\"form.nome\"\n            type=\"text\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n\n        <!-- Last Name -->\n        <div class=\"mb-3\">\n          <label for=\"cognome\" class=\"form-label\">Last Name</label>\n          <input\n            id=\"cognome\"\n            v-model=\"form.cognome\"\n            type=\"text\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n\n        <!-- Date of Birth -->\n        <div class=\"mb-3\">\n          <label for=\"data\" class=\"form-label\">Date of Birth</label>\n          <input\n            id=\"data\"\n            v-model=\"form.data\"\n            type=\"date\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n\n        <!-- Phone Number -->\n        <div class=\"mb-3\">\n          <label for=\"telefono\" class=\"form-label\">Phone Number</label>\n          <input\n            id=\"telefono\"\n            v-model=\"form.telefono\"\n            type=\"tel\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n\n        <!-- Gender -->\n        <div class=\"mb-3\">\n          <label for=\"gender\" class=\"form-label\">Gender</label>\n          <select\n            id=\"gender\"\n            v-model=\"form.gender\"\n            class=\"form-control\"\n            required\n          >\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n          </select>\n        </div>\n\n        <!-- Address -->\n        <div class=\"mb-3\">\n          <label for=\"address\" class=\"form-label\">Address</label>\n          <input\n            id=\"address\"\n            v-model=\"form.address\"\n            type=\"text\"\n            class=\"form-control\"\n            required\n          />\n        </div>\n\n        <!-- Submit button -->\n        <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading || !passwordsMatch\">\n          <span v-if=\"loading\">Registering...</span>\n          <span v-else>Register</span>\n        </button>\n\n        <!-- Error message -->\n        <div v-if=\"errors.general\" class=\"invalid-feedback mt-3\">\n          {{ errors.general }}\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"RegisterComponent\",\n  data() {\n    return {\n      form: {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\", // Added confirmPassword field\n        nome: \"\", // First Name\n        cognome: \"\", // Last Name\n        data: \"\", // Date of Birth\n        telefono: \"\", // Phone Number\n        gender: \"\",\n        address: \"\",\n      },\n      errors: {},\n      loading: false,\n      showPassword: false, // Added showPassword for password visibility\n      showConfirmPassword: false, // Added showConfirmPassword for confirm password visibility\n      showPasteError: false, // Flag for displaying paste error message\n    };\n  },\n  computed: {\n    passwordsMatch() {\n      return this.form.password === this.form.confirmPassword;\n    },\n  },\n  methods: {\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    },\n    toggleConfirmPasswordVisibility() {\n      this.showConfirmPassword = !this.showConfirmPassword;\n    },\n    showPasteWarning() {\n      this.showPasteError = true; // Set the flag to true when paste is attempted\n      setTimeout(() => {\n        this.showPasteError = false; // Reset the flag after a short delay\n      }, 3000);\n    },\n    async onSubmit() {\n      this.loading = true;\n      this.errors = {};\n\n      try {\n        const {\n          username,\n          email,\n          password,\n          nome,\n          cognome,\n          data,\n          telefono,\n          gender,\n          address,\n        } = this.form;\n\n        // Log the registration data\n        console.log(\"Registration data:\", {\n          username,\n          email,\n          password,\n          nome,\n          cognome,\n          data,\n          telefono,\n          gender,\n          address,\n        });\n\n        const response = await axios.post(\"http://127.0.0.1:5000/register\", {\n          username,\n          email,\n          password,\n          nome,\n          cognome,\n          data,\n          telefono,\n          gender,\n          address,\n        });\n\n        alert(\n          \"Registration successful! Please check your email for verification.\"\n        );\n        console.log(response.data);\n      } catch (error) {\n        console.error(\"Error signing up:\", error);\n\n        if (error.response) {\n          console.error(\"Response data:\", error.response.data);\n          this.errors.general =\n            error.response.data.error || \"Registration failed\";\n        } else {\n          this.errors.general = error.message;\n        }\n\n        alert(\"Error signing up: \" + this.errors.general);\n      } finally {\n        this.loading = false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.register {\n  background: linear-gradient(135deg, #f7f7f7, #e0e0e0);\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.container {\n  max-width: 600px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  font-size: 2.5rem;\n  color: #343a40;\n}\n\n.form-label {\n  color: #495057;\n}\n\n.invalid-feedback {\n  color: #dc3545;\n}\n\n.btn {\n  margin-top: 20px;\n  background-color: #007bff;\n  border: none;\n  transition: background-color 0.3s, transform 0.3s;\n}\n\n.btn:hover {\n  background-color: #0056b3;\n  transform: scale(1.05);\n}\n\n/* Eye icon styling */\n.input-group .btn {\n  background: transparent;\n  border: none;\n  outline: none;\n}\n\n.eye-icon {\n  width: 24px; /* Adjust the size as needed */\n  height: 24px; /* Adjust the size as needed */\n}\n\n.password-input {\n  height: calc(2.25rem + 2px); /* Match height with other input fields */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}