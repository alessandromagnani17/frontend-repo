{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Dashboard Dottore\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PatientList = _resolveComponent(\"PatientList\");\n  const _component_UploadRadiograph = _resolveComponent(\"UploadRadiograph\");\n  const _component_PatientRadiographs = _resolveComponent(\"PatientRadiographs\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createVNode(_component_PatientList, {\n    patients: $data.patients,\n    onSelectPatient: $options.selectPatient\n  }, null, 8 /* PROPS */, [\"patients\", \"onSelectPatient\"]), $data.selectedPatient ? (_openBlock(), _createBlock(_component_UploadRadiograph, {\n    key: 0,\n    onUploadSuccess: $options.handleUploadSuccess,\n    patientId: $data.selectedPatient.id\n  }, null, 8 /* PROPS */, [\"onUploadSuccess\", \"patientId\"])) : _createCommentVNode(\"v-if\", true), $data.selectedPatient ? (_openBlock(), _createBlock(_component_PatientRadiographs, {\n    key: 1,\n    radiographs: $data.selectedPatientRadiographs\n  }, null, 8 /* PROPS */, [\"radiographs\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_PatientList","patients","$data","onSelectPatient","$options","selectPatient","selectedPatient","_createBlock","_component_UploadRadiograph","key","onUploadSuccess","handleUploadSuccess","patientId","id","_createCommentVNode","_component_PatientRadiographs","radiographs","selectedPatientRadiographs"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/DoctorDashboard.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Dashboard Dottore</h1>\n    <PatientList :patients=\"patients\" @selectPatient=\"selectPatient\" />\n    <UploadRadiograph\n      v-if=\"selectedPatient\"\n      @uploadSuccess=\"handleUploadSuccess\"\n      :patientId=\"selectedPatient.id\"\n    />\n    <PatientRadiographs\n      :radiographs=\"selectedPatientRadiographs\"\n      v-if=\"selectedPatient\"\n    />\n  </div>\n</template>\n\n<script>\nimport PatientList from \"./PatientList.vue\";\nimport PatientRadiographs from \"./PatientRadiographs.vue\";\nimport UploadRadiograph from \"./UploadRadiograph.vue\";\n\nimport {\n  getPatientsByDoctor,\n  getRadiographsByPatient,\n} from \"../services/apiService\"; // Importa i servizi corretti\n\nexport default {\n  components: {\n    PatientList,\n    PatientRadiographs,\n    UploadRadiograph,\n  },\n  data() {\n    return {\n      patients: [],\n      selectedPatient: null,\n      selectedPatientRadiographs: [],\n    };\n  },\n  async created() {\n    const doctorId = this.$store.state.user.id; // ID del dottore loggato\n    this.patients = await getPatientsByDoctor(doctorId); // Chiamata per ottenere i pazienti\n  },\n  methods: {\n    async selectPatient(patient) {\n      this.selectedPatient = patient;\n      this.selectedPatientRadiographs = await getRadiographsByPatient(\n        patient.id\n      ); // Recupera radiografie\n    },\n    handleUploadSuccess() {\n      this.selectPatient(this.selectedPatient); // Ricarica le radiografie dopo il caricamento\n    },\n  },\n};\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAA0B,YAAtB,mBAAiB;;;;;uBADvBC,mBAAA,CAYM,cAXJC,UAA0B,EAC1BC,YAAA,CAAmEC,sBAAA;IAArDC,QAAQ,EAAEC,KAAA,CAAAD,QAAQ;IAAGE,eAAa,EAAEC,QAAA,CAAAC;4DAE1CH,KAAA,CAAAI,eAAe,I,cADvBC,YAAA,CAIEC,2BAAA;IARNC,GAAA;IAMOC,eAAa,EAAEN,QAAA,CAAAO,mBAAmB;IAClCC,SAAS,EAAEV,KAAA,CAAAI,eAAe,CAACO;+DAPlCC,mBAAA,gBAWYZ,KAAA,CAAAI,eAAe,I,cAFvBC,YAAA,CAGEQ,6BAAA;IAZNN,GAAA;IAUOO,WAAW,EAAEd,KAAA,CAAAe;8CAVpBH,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}