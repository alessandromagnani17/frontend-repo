{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport HomePage from \"./views/HomePage.vue\";\nimport UserLogin from \"./components/UserLogin.vue\";\nimport UserRegister from \"./components/UserRegister.vue\";\nimport WelcomePage from \"./components/WelcomePage.vue\";\nconst routes = [{\n  path: \"/\",\n  name: \"HomePage\",\n  component: HomePage\n}, {\n  path: \"/login\",\n  name: \"UserLogin\",\n  component: UserLogin\n}, {\n  path: \"/register\",\n  name: \"UserRegister\",\n  component: UserRegister\n}, {\n  path: \"/confirm-email/:email\",\n  name: \"EmailConfirmation\",\n  component: () => import(\"@/components/EmailConfirmation.vue\")\n}, {\n  path: \"/welcome\",\n  name: \"WelcomePage\",\n  component: WelcomePage,\n  meta: {\n    requiresAuth: true\n  } // Set meta to mark this route as requiring authentication\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Route guard to protect routes that require authentication\nrouter.beforeEach((to, from, next) => {\n  const authToken = localStorage.getItem(\"authToken\");\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!authToken) {\n      // Redirect to login if not authenticated\n      return next({\n        name: \"UserLogin\"\n      });\n    }\n  }\n  next(); // Always call next() to proceed\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomePage","UserLogin","UserRegister","WelcomePage","routes","path","name","component","meta","requiresAuth","router","history","beforeEach","to","from","next","authToken","localStorage","getItem","matched","some","record"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/router.js"],"sourcesContent":["import { createRouter, createWebHistory } from \"vue-router\";\nimport HomePage from \"./views/HomePage.vue\";\nimport UserLogin from \"./components/UserLogin.vue\";\nimport UserRegister from \"./components/UserRegister.vue\";\nimport WelcomePage from \"./components/WelcomePage.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"HomePage\",\n    component: HomePage,\n  },\n  {\n    path: \"/login\",\n    name: \"UserLogin\",\n    component: UserLogin,\n  },\n  {\n    path: \"/register\",\n    name: \"UserRegister\",\n    component: UserRegister,\n  },\n  {\n    path: \"/confirm-email/:email\",\n    name: \"EmailConfirmation\",\n    component: () => import(\"@/components/EmailConfirmation.vue\"),\n  },\n  {\n    path: \"/welcome\",\n    name: \"WelcomePage\",\n    component: WelcomePage,\n    meta: { requiresAuth: true }, // Set meta to mark this route as requiring authentication\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\n// Route guard to protect routes that require authentication\nrouter.beforeEach((to, from, next) => {\n  const authToken = localStorage.getItem(\"authToken\");\n\n  if (to.matched.some((record) => record.meta.requiresAuth)) {\n    if (!authToken) {\n      // Redirect to login if not authenticated\n      return next({ name: \"UserLogin\" });\n    }\n  }\n\n  next(); // Always call next() to proceed\n});\n\nexport default router;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,WAAW,MAAM,8BAA8B;AAEtD,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEN;AACb,CAAC,EACD;EACEI,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,cAAc;EACpBC,SAAS,EAAEL;AACb,CAAC,EACD;EACEG,IAAI,EAAE,uBAAuB;EAC7BC,IAAI,EAAE,mBAAmB;EACzBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oCAAoC;AAC9D,CAAC,EACD;EACEF,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEJ,WAAW;EACtBK,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAE;AAChC,CAAC,CACF;AAED,MAAMC,MAAM,GAAGZ,YAAY,CAAC;EAC1Ba,OAAO,EAAEZ,gBAAgB,CAAC,CAAC;EAC3BK;AACF,CAAC,CAAC;;AAEF;AACAM,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAEnD,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACb,IAAI,CAACC,YAAY,CAAC,EAAE;IACzD,IAAI,CAACO,SAAS,EAAE;MACd;MACA,OAAOD,IAAI,CAAC;QAAET,IAAI,EAAE;MAAY,CAAC,CAAC;IACpC;EACF;EAEAS,IAAI,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}