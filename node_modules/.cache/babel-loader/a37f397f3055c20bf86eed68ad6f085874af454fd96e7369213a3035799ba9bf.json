{"ast":null,"code":"import { Auth } from \"aws-amplify\"; // Assicurati che Auth sia correttamente importato\n\nexport default {\n  data() {\n    return {\n      form: {\n        username: \"\",\n        password: \"\"\n      },\n      errors: {},\n      loading: false // Aggiunto per il caricamento\n    };\n  },\n  methods: {\n    // Metodo per gestire la registrazione dell'utente\n    async onSubmit() {\n      this.loading = true; // Avvia il caricamento\n      console.log(\"onSubmit called\"); // Debug\n\n      try {\n        const {\n          username,\n          password\n        } = this.form;\n        console.log(\"Form Data:\", this.form); // Visualizza i dati del form\n\n        // Esegui la registrazione con AWS Cognito usando Auth.signUp\n        const signUpResponse = await Auth.signUp({\n          username,\n          password,\n          attributes: {\n            email: username // Corretto l'attributo email\n          }\n        });\n        console.log(\"Sign up response:\", signUpResponse); // Visualizza la risposta della registrazione\n        alert(\"Registration successful! Please check your email for verification.\");\n        this.errors = {}; // Resetta gli errori dopo il successo\n      } catch (error) {\n        console.error(\"Error signing up:\", error);\n        alert(\"Error signing up: \" + error.message); // Mostra un alert per l'errore\n\n        // Gestione degli errori di Cognito\n        if (error.code === \"UsernameExistsException\") {\n          this.errors.username = \"Username already exists.\";\n          alert(\"Username already exists.\"); // Mostra un alert per l'errore specifico\n        } else {\n          this.errors.general = error.message; // Imposta l'errore generale\n          alert(\"Error: \" + error.message); // Mostra un alert per l'errore generale\n        }\n      } finally {\n        this.loading = false; // Fine del caricamento\n        console.log(\"Loading finished\"); // Debug\n      }\n    },\n    // Metodo per l'accesso con provider OAuth\n    async signInWithProvider() {\n      this.loading = true; // Inizia il caricamento\n      console.log(\"signInWithProvider called\"); // Debug\n\n      try {\n        console.log(\"Calling Auth.federatedSignIn()\"); // Debug\n        await Auth.federatedSignIn(); // Avvia il processo di accesso federato\n      } catch (error) {\n        console.error(\"Error during federated sign in:\", error);\n        this.errors.general = \"Error during OAuth login.\"; // Errore generale\n        alert(\"Error during OAuth login: \" + error.message); // Mostra un alert per l'errore\n      } finally {\n        this.loading = false; // Fine del caricamento\n        console.log(\"Loading finished for federated sign in\"); // Debug\n      }\n    }\n  }\n};","map":{"version":3,"names":["Auth","data","form","username","password","errors","loading","methods","onSubmit","console","log","signUpResponse","signUp","attributes","email","alert","error","message","code","general","signInWithProvider","federatedSignIn"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/UserRegister.vue"],"sourcesContent":["<template>\n  <div class=\"register\">\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4\">Create Your Account</h2>\n      <form @submit.prevent=\"onSubmit\">\n        <div class=\"mb-3\">\n          <label for=\"username\" class=\"form-label\">Username (Email)</label>\n          <input\n            id=\"username\"\n            v-model=\"form.username\"\n            type=\"email\"\n            class=\"form-control\"\n            required\n          />\n          <div v-if=\"errors.username\" class=\"invalid-feedback\">\n            {{ errors.username }}\n          </div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"password\" class=\"form-label\">Password</label>\n          <input\n            id=\"password\"\n            v-model=\"form.password\"\n            type=\"password\"\n            class=\"form-control\"\n            required\n          />\n          <div v-if=\"errors.password\" class=\"invalid-feedback\">\n            {{ errors.password }}\n          </div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading\">\n          <span v-if=\"loading\">Registering...</span>\n          <span v-else>Register</span>\n        </button>\n        <div v-if=\"errors.general\" class=\"invalid-feedback mt-3\">\n          {{ errors.general }}\n        </div>\n      </form>\n      <button\n        class=\"btn btn-secondary mt-3\"\n        :disabled=\"loading\"\n        @click=\"signInWithProvider\"\n      >\n        <span v-if=\"loading\">Loading...</span>\n        <span v-else>Login with OAuth</span>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Auth } from \"aws-amplify\"; // Assicurati che Auth sia correttamente importato\n\nexport default {\ndata() {\n  return {\n    form: {\n      username: \"\",\n      password: \"\",\n    },\n    errors: {},\n    loading: false, // Aggiunto per il caricamento\n  };\n},\nmethods: {\n  // Metodo per gestire la registrazione dell'utente\n  async onSubmit() {\n    this.loading = true; // Avvia il caricamento\n    console.log(\"onSubmit called\"); // Debug\n\n    try {\n      const { username, password } = this.form;\n      console.log(\"Form Data:\", this.form); // Visualizza i dati del form\n\n      // Esegui la registrazione con AWS Cognito usando Auth.signUp\n      const signUpResponse = await Auth.signUp({\n        username,\n        password,\n        attributes: {\n          email: username, // Corretto l'attributo email\n        },\n      });\n\n      console.log(\"Sign up response:\", signUpResponse); // Visualizza la risposta della registrazione\n      alert(\n        \"Registration successful! Please check your email for verification.\"\n      );\n      this.errors = {}; // Resetta gli errori dopo il successo\n    } catch (error) {\n      console.error(\"Error signing up:\", error);\n      alert(\"Error signing up: \" + error.message); // Mostra un alert per l'errore\n\n      // Gestione degli errori di Cognito\n      if (error.code === \"UsernameExistsException\") {\n        this.errors.username = \"Username already exists.\";\n        alert(\"Username already exists.\"); // Mostra un alert per l'errore specifico\n      } else {\n        this.errors.general = error.message; // Imposta l'errore generale\n        alert(\"Error: \" + error.message); // Mostra un alert per l'errore generale\n      }\n    } finally {\n      this.loading = false; // Fine del caricamento\n      console.log(\"Loading finished\"); // Debug\n    }\n  },\n  // Metodo per l'accesso con provider OAuth\n  async signInWithProvider() {\n    this.loading = true; // Inizia il caricamento\n    console.log(\"signInWithProvider called\"); // Debug\n\n    try {\n      console.log(\"Calling Auth.federatedSignIn()\"); // Debug\n      await Auth.federatedSignIn(); // Avvia il processo di accesso federato\n    } catch (error) {\n      console.error(\"Error during federated sign in:\", error);\n      this.errors.general = \"Error during OAuth login.\"; // Errore generale\n      alert(\"Error during OAuth login: \" + error.message); // Mostra un alert per l'errore\n    } finally {\n      this.loading = false; // Fine del caricamento\n      console.log(\"Loading finished for federated sign in\"); // Debug\n    }\n  },\n},\n};\n</script>\n\n<style scoped>\n.register {\nbackground: linear-gradient(135deg, #f7f7f7, #e0e0e0);\nmin-height: 100vh;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n}\n\n.container {\nmax-width: 600px;\npadding: 40px;\nborder-radius: 15px;\nbackground: #ffffff;\nbox-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\nfont-size: 2.5rem;\ncolor: #343a40;\n}\n\n.form-label {\ncolor: #495057;\n}\n\n.invalid-feedback {\ncolor: #dc3545;\n}\n\n.btn {\nmargin-top: 20px;\nbackground-color: #007bff;\nborder: none;\ntransition: background-color 0.3s, transform 0.3s;\n}\n\n.btn:hover {\nbackground-color: #0056b3;\ntransform: scale(1.05);\n}\n</style>\n\n"],"mappings":"AAoDA,SAASA,IAAG,QAAS,aAAa,EAAE;;AAEpC,eAAe;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,MAAM,EAAE,CAAC,CAAC;MACVC,OAAO,EAAE,KAAK,CAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI,CAACF,OAAM,GAAI,IAAI,EAAE;MACrBG,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,EAAE;;MAEhC,IAAI;QACF,MAAM;UAAEP,QAAQ;UAAEC;QAAS,IAAI,IAAI,CAACF,IAAI;QACxCO,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACR,IAAI,CAAC,EAAE;;QAEtC;QACA,MAAMS,cAAa,GAAI,MAAMX,IAAI,CAACY,MAAM,CAAC;UACvCT,QAAQ;UACRC,QAAQ;UACRS,UAAU,EAAE;YACVC,KAAK,EAAEX,QAAQ,CAAE;UACnB;QACF,CAAC,CAAC;QAEFM,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,cAAc,CAAC,EAAE;QAClDI,KAAK,CACH,oEACF,CAAC;QACD,IAAI,CAACV,MAAK,GAAI,CAAC,CAAC,EAAE;MACpB,EAAE,OAAOW,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QACzCD,KAAK,CAAC,oBAAmB,GAAIC,KAAK,CAACC,OAAO,CAAC,EAAE;;QAE7C;QACA,IAAID,KAAK,CAACE,IAAG,KAAM,yBAAyB,EAAE;UAC5C,IAAI,CAACb,MAAM,CAACF,QAAO,GAAI,0BAA0B;UACjDY,KAAK,CAAC,0BAA0B,CAAC,EAAE;QACrC,OAAO;UACL,IAAI,CAACV,MAAM,CAACc,OAAM,GAAIH,KAAK,CAACC,OAAO,EAAE;UACrCF,KAAK,CAAC,SAAQ,GAAIC,KAAK,CAACC,OAAO,CAAC,EAAE;QACpC;MACF,UAAU;QACR,IAAI,CAACX,OAAM,GAAI,KAAK,EAAE;QACtBG,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC,EAAE;MACnC;IACF,CAAC;IACD;IACA,MAAMU,kBAAkBA,CAAA,EAAG;MACzB,IAAI,CAACd,OAAM,GAAI,IAAI,EAAE;MACrBG,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,EAAE;;MAE1C,IAAI;QACFD,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,EAAE;QAC/C,MAAMV,IAAI,CAACqB,eAAe,CAAC,CAAC,EAAE;MAChC,EAAE,OAAOL,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvD,IAAI,CAACX,MAAM,CAACc,OAAM,GAAI,2BAA2B,EAAE;QACnDJ,KAAK,CAAC,4BAA2B,GAAIC,KAAK,CAACC,OAAO,CAAC,EAAE;MACvD,UAAU;QACR,IAAI,CAACX,OAAM,GAAI,KAAK,EAAE;QACtBG,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC,EAAE;MACzD;IACF;EACF;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}