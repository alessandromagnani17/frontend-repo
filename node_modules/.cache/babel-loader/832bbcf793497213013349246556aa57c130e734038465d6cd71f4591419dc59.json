{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createTextVNode as _createTextVNode, vModelCheckbox as _vModelCheckbox, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"welcome\"\n};\nconst _hoisted_2 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"carica-radiografia\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"alert alert-info small-text\"\n};\nconst _hoisted_5 = {\n  key: 2\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"alert alert-warning small-text\"\n};\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = {\n  class: \"select-container mb-4\"\n};\nconst _hoisted_9 = [\"value\"];\nconst _hoisted_10 = {\n  key: 0,\n  class: \"mt-2\"\n};\nconst _hoisted_11 = {\n  class: \"patient-info-container small-text\"\n};\nconst _hoisted_12 = {\n  key: 1\n};\nconst _hoisted_13 = {\n  key: 2,\n  class: \"mt-3 img-preview-container\"\n};\nconst _hoisted_14 = [\"src\"];\nconst _hoisted_15 = {\n  key: 3,\n  class: \"button-cover\"\n};\nconst _hoisted_16 = {\n  key: 3,\n  class: \"mt-3\"\n};\nconst _hoisted_17 = {\n  key: 4\n};\nconst _hoisted_18 = {\n  key: 5,\n  class: \"mt-4\"\n};\nconst _hoisted_19 = {\n  class: \"card prediction-card mb-3\"\n};\nconst _hoisted_20 = {\n  class: \"card-body\"\n};\nconst _hoisted_21 = {\n  class: \"card-title small-text\"\n};\nconst _hoisted_22 = {\n  class: \"row\"\n};\nconst _hoisted_23 = {\n  class: \"col-md-6 col-12\"\n};\nconst _hoisted_24 = {\n  class: \"card\"\n};\nconst _hoisted_25 = [\"src\"];\nconst _hoisted_26 = {\n  class: \"col-md-6 col-12\"\n};\nconst _hoisted_27 = {\n  class: \"card\"\n};\nconst _hoisted_28 = [\"src\"];\nconst _hoisted_29 = {\n  class: \"card prediction-card mb-3\"\n};\nconst _hoisted_30 = {\n  class: \"card-body\"\n};\nconst _hoisted_31 = {\n  class: \"card-title small-text\"\n};\nconst _hoisted_32 = {\n  class: \"star-rating mt-3\"\n};\nconst _hoisted_33 = [\"src\", \"onClick\"];\nconst _hoisted_34 = {\n  key: 0,\n  class: \"mt-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_ctx.showUploadSection ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_3, \" Carica una radiografia \")) : _createCommentVNode(\"v-if\", true), _ctx.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" Caricamento... \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_ctx.patients.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \" Non hai ancora nessun paziente associato. \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_ctx.patients.length > 0 && !_ctx.selectedPatient ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    key: 0,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedPatient = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => _ctx.onPatientChange && _ctx.onPatientChange(...args)),\n    class: \"form-select custom-select small-text\"\n  }, [_cache[10] || (_cache[10] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\",\n    selected: \"\"\n  }, \"Seleziona un paziente\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.patients, patient => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: patient.userId,\n      value: patient.userId\n    }, _toDisplayString(patient.name) + \" \" + _toDisplayString(patient.family_name) + \" (ID: \" + _toDisplayString(patient.userId) + \") \", 9 /* TEXT, PROPS */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */)), [[_vModelSelect, _ctx.selectedPatient]]) : _createCommentVNode(\"v-if\", true)]), _ctx.selectedPatientInfo.name.length > 0 && _ctx.showMainImagePreview ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"span\", null, [_cache[12] || (_cache[12] = _createTextVNode(\" Utente selezionato: \")), _createElementVNode(\"strong\", null, [_createTextVNode(_toDisplayString(_ctx.selectedPatientInfo.name) + \" \" + _toDisplayString(_ctx.selectedPatientInfo.surname) + \" \", 1 /* TEXT */), _cache[11] || (_cache[11] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */))]), _createTextVNode(\" (ID: \" + _toDisplayString(_ctx.selectedPatientInfo.userId) + \") \", 1 /* TEXT */)]), _createCommentVNode(\" Pulsante Cambia \"), _createElementVNode(\"span\", {\n    class: \"change-text\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.changePatient && _ctx.changePatient(...args))\n  }, \"Cambia\")])])) : _createCommentVNode(\"v-if\", true), _cache[15] || (_cache[15] = _createElementVNode(\"div\", null, [_createElementVNode(\"h5\")], -1 /* HOISTED */)), _ctx.selectedPatient ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_ctx.showUploadSection ? (_openBlock(), _createElementBlock(\"input\", {\n    key: 0,\n    type: \"file\",\n    ref: \"fileInput\",\n    onChange: _cache[3] || (_cache[3] = (...args) => _ctx.onFileChange && _ctx.onFileChange(...args)),\n    accept: \"image/*\",\n    style: {\n      \"display\": \"none\"\n    }\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), _ctx.showUploadSection ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.selectFile && _ctx.selectFile(...args)),\n    class: \"btn btn-light btn-select\"\n  }, \" Seleziona file \")) : _createCommentVNode(\"v-if\", true), _ctx.imagePreview && _ctx.selectedPatient && _ctx.showMainImagePreview ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"img\", {\n    src: _ctx.imagePreview,\n    alt: \"Anteprima immagine\",\n    class: \"img-preview\"\n  }, null, 8 /* PROPS */, _hoisted_14)])) : _createCommentVNode(\"v-if\", true), _ctx.showKneeSide ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"buttonSide r\", {\n      active: _ctx.selectedSide,\n      inactive: !_ctx.selectedSide\n    }]),\n    id: \"button-1\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.selectedSide = $event),\n    onChange: _cache[6] || (_cache[6] = (...args) => _ctx.updateSelectedSide && _ctx.updateSelectedSide(...args)),\n    class: \"checkbox\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelCheckbox, _ctx.selectedSide]]), _cache[13] || (_cache[13] = _createElementVNode(\"div\", {\n    class: \"knobs\"\n  }, null, -1 /* HOISTED */)), _cache[14] || (_cache[14] = _createElementVNode(\"div\", {\n    class: \"layer\"\n  }, null, -1 /* HOISTED */))], 2 /* CLASS */)])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]))])), !_ctx.showMainImagePreview ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, _cache[16] || (_cache[16] = [_createElementVNode(\"h1\", null, \"Risultati della predizione\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _ctx.imagePreview && _ctx.selectedPatient ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_ctx.showPredictButton ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[7] || (_cache[7] = (...args) => _ctx.submitImage && _ctx.submitImage(...args)),\n    class: \"btn-upload\"\n  }, \" Predici osteoartrite \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _ctx.predictedClass !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"h5\", _hoisted_21, [_createTextVNode(\" Utente: \" + _toDisplayString(_ctx.selectedPatientInfo.name) + \" \" + _toDisplayString(_ctx.selectedPatientInfo.surname) + \" \", 1 /* TEXT */), _cache[17] || (_cache[17] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" (ID: \" + _toDisplayString(_ctx.selectedPatientInfo.userId) + \") \", 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"img\", {\n    src: _ctx.imagePreview,\n    class: \"card-img-top\",\n    alt: \"Anteprima immagine\"\n  }, null, 8 /* PROPS */, _hoisted_25), _cache[18] || (_cache[18] = _createElementVNode(\"div\", {\n    class: \"card-body\"\n  }, [_createElementVNode(\"h5\", {\n    class: \"card-title small-text\"\n  }, \"Radiografia Originale\")], -1 /* HOISTED */))])]), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"img\", {\n    src: _ctx.gradcamImage,\n    class: \"card-img-top\",\n    alt: \"Grad-CAM Image\"\n  }, null, 8 /* PROPS */, _hoisted_28), _cache[19] || (_cache[19] = _createElementVNode(\"div\", {\n    class: \"card-body\"\n  }, [_createElementVNode(\"h5\", {\n    class: \"card-title small-text\"\n  }, \"Applicazione Grad-CAM\")], -1 /* HOISTED */))])])]), _createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"h5\", _hoisted_31, _toDisplayString(_ctx.predictedClass) + \" (\" + _toDisplayString(_ctx.selectedSide ? \"Ginocchio destro\" : \"Ginocchio sinistro\") + \") \", 1 /* TEXT */)])]), _createCommentVNode(\" Linea e scritta sopra il pulsante \\\"Esegui nuova predizione\\\" \"), _cache[21] || (_cache[21] = _createElementVNode(\"div\", {\n    class: \"line-container\"\n  }, [_createElementVNode(\"div\", {\n    class: \"line\"\n  })], -1 /* HOISTED */)), _cache[22] || (_cache[22] = _createElementVNode(\"div\", {\n    class: \"mt-3\"\n  }, [_createElementVNode(\"h5\", null, \"Valuta la predizione\")], -1 /* HOISTED */)), _createCommentVNode(\" Stelle \"), _createElementVNode(\"div\", _hoisted_32, [_cache[20] || (_cache[20] = _createElementVNode(\"div\", {\n    class: \"line-container\"\n  }, [_createElementVNode(\"div\", {\n    class: \"line\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", {\n    class: \"stars\",\n    onClick: _cache[8] || (_cache[8] = (...args) => _ctx.setRating && _ctx.setRating(...args))\n  }, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(5, index => {\n    return _createElementVNode(\"img\", {\n      key: index,\n      src: _ctx.getStarImage(index),\n      onClick: $event => _ctx.handleStarClick(index),\n      alt: \"Star\",\n      class: \"star\"\n    }, null, 8 /* PROPS */, _hoisted_33);\n  }), 64 /* STABLE_FRAGMENT */))])]), _ctx.showNewPredictionButton ? (_openBlock(), _createElementBlock(\"div\", _hoisted_34, [_createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => _ctx.resetPrediction && _ctx.resetPrediction(...args)),\n    class: \"btn-upload\"\n  }, \" Esegui nuova predizione \")])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_ctx","showUploadSection","_hoisted_3","_createCommentVNode","isLoading","_hoisted_4","_hoisted_5","patients","length","_hoisted_6","_hoisted_7","_hoisted_8","selectedPatient","_cache","$event","onChange","args","onPatientChange","value","disabled","selected","_Fragment","_renderList","patient","userId","name","_toDisplayString","family_name","_hoisted_9","selectedPatientInfo","showMainImagePreview","_hoisted_10","_hoisted_11","_createTextVNode","surname","onClick","changePatient","_hoisted_12","type","ref","onFileChange","accept","style","selectFile","imagePreview","_hoisted_13","src","alt","_hoisted_14","showKneeSide","_hoisted_15","_normalizeClass","active","selectedSide","inactive","id","updateSelectedSide","_hoisted_16","_hoisted_17","showPredictButton","submitImage","predictedClass","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","gradcamImage","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","setRating","index","getStarImage","handleStarClick","_hoisted_33","showNewPredictionButton","_hoisted_34","resetPrediction"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/UserLogin.vue"],"sourcesContent":["<template>\n  <div class=\"welcome\">\n    <div class=\"container mt-5\">\n      <h1 v-if=\"showUploadSection\" class=\"carica-radiografia\">\n        Carica una radiografia\n      </h1>\n      <div v-if=\"isLoading\" class=\"alert alert-info small-text\">\n        Caricamento...\n      </div>\n      <div v-else>\n        <div\n          v-if=\"patients.length === 0\"\n          class=\"alert alert-warning small-text\"\n        >\n          Non hai ancora nessun paziente associato.\n        </div>\n        <div v-else>\n          <div class=\"select-container mb-4\">\n            <select\n              v-if=\"patients.length > 0 && !selectedPatient\"\n              v-model=\"selectedPatient\"\n              @change=\"onPatientChange\"\n              class=\"form-select custom-select small-text\"\n            >\n              <option value=\"\" disabled selected>Seleziona un paziente</option>\n              <option\n                v-for=\"patient in patients\"\n                :key=\"patient.userId\"\n                :value=\"patient.userId\"\n              >\n                {{ patient.name }} {{ patient.family_name }} (ID:\n                {{ patient.userId }})\n              </option>\n            </select>\n          </div>\n          <div\n            v-if=\"selectedPatientInfo.name.length > 0 && showMainImagePreview\"\n            class=\"mt-2\"\n          >\n            <div class=\"patient-info-container small-text\">\n              <span>\n                Utente selezionato:\n                <strong>\n                  {{ selectedPatientInfo.name }}\n                  {{ selectedPatientInfo.surname }} <br />\n                </strong>\n                (ID: {{ selectedPatientInfo.userId }})\n              </span>\n              <!-- Pulsante Cambia -->\n              <span class=\"change-text\" @click=\"changePatient\">Cambia</span>\n            </div>\n          </div>\n          <div><h5></h5></div>\n          <div v-if=\"selectedPatient\">\n            <input\n              v-if=\"showUploadSection\"\n              type=\"file\"\n              ref=\"fileInput\"\n              @change=\"onFileChange\"\n              accept=\"image/*\"\n              style=\"display: none\"\n            />\n            <button\n              v-if=\"showUploadSection\"\n              @click=\"selectFile\"\n              class=\"btn btn-light btn-select\"\n            >\n              Seleziona file\n            </button>\n            <div\n              v-if=\"imagePreview && selectedPatient && showMainImagePreview\"\n              class=\"mt-3 img-preview-container\"\n            >\n              <img\n                :src=\"imagePreview\"\n                alt=\"Anteprima immagine\"\n                class=\"img-preview\"\n              />\n            </div>\n            <div v-if=\"showKneeSide\" class=\"button-cover\">\n              <div\n                class=\"buttonSide r\"\n                id=\"button-1\"\n                :class=\"{ active: selectedSide, inactive: !selectedSide }\"\n              >\n                <input\n                  type=\"checkbox\"\n                  v-model=\"selectedSide\"\n                  @change=\"updateSelectedSide\"\n                  class=\"checkbox\"\n                />\n                <div class=\"knobs\"></div>\n                <div class=\"layer\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-if=\"!showMainImagePreview\" class=\"mt-3\">\n        <h1>Risultati della predizione</h1>\n      </div>\n\n      <div v-if=\"imagePreview && selectedPatient\">\n        <button\n          v-if=\"showPredictButton\"\n          @click=\"submitImage\"\n          class=\"btn-upload\"\n        >\n          Predici osteoartrite\n        </button>\n      </div>\n      <div v-if=\"predictedClass !== null\" class=\"mt-4\">\n        <div class=\"card prediction-card mb-3\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title small-text\">\n              Utente: {{ selectedPatientInfo.name }}\n              {{ selectedPatientInfo.surname }} <br />\n              (ID: {{ selectedPatientInfo.userId }})\n            </h5>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6 col-12\">\n            <div class=\"card\">\n              <img\n                :src=\"imagePreview\"\n                class=\"card-img-top\"\n                alt=\"Anteprima immagine\"\n              />\n              <div class=\"card-body\">\n                <h5 class=\"card-title small-text\">Radiografia Originale</h5>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-md-6 col-12\">\n            <div class=\"card\">\n              <img\n                :src=\"gradcamImage\"\n                class=\"card-img-top\"\n                alt=\"Grad-CAM Image\"\n              />\n              <div class=\"card-body\">\n                <h5 class=\"card-title small-text\">Applicazione Grad-CAM</h5>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"card prediction-card mb-3\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title small-text\">\n              {{ predictedClass }} ({{\n                selectedSide ? \"Ginocchio destro\" : \"Ginocchio sinistro\"\n              }})\n            </h5>\n          </div>\n        </div>\n\n        <!-- Linea e scritta sopra il pulsante \"Esegui nuova predizione\" -->\n        <div class=\"line-container\">\n          <div class=\"line\"></div>\n        </div>\n        <div class=\"mt-3\">\n          <h5>Valuta la predizione</h5>\n        </div>\n\n        <!-- Stelle -->\n        <div class=\"star-rating mt-3\">\n          <div class=\"line-container\">\n            <div class=\"line\"></div>\n          </div>\n          <div class=\"stars\" @click=\"setRating\">\n            <img\n              v-for=\"index in 5\"\n              :key=\"index\"\n              :src=\"getStarImage(index)\"\n              @click=\"handleStarClick(index)\"\n              alt=\"Star\"\n              class=\"star\"\n            />\n          </div>\n        </div>\n\n        <div v-if=\"showNewPredictionButton\" class=\"mt-4\">\n          <button @click=\"resetPrediction\" class=\"btn-upload\">\n            Esegui nuova predizione\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\nimport { auth } from \"@/firebase\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { sendPasswordResetEmail } from \"firebase/auth\";\nimport EventBus from \"../eventBus\";\n\nexport default {\n  name: \"UserLogin\",\n  setup() {\n    // Stato del form\n    const form = ref({\n      email: \"\",\n      password: \"\",\n      rememberMe: false,\n    });\n\n    // Stato degli errori\n    const errors = ref({\n      email: \"\",\n      password: \"\",\n      general: \"\",\n    });\n\n    const router = useRouter();\n    const currentStep = ref(1);\n    const loading = ref(false);\n    const showPassword = ref(false);\n    const showMfaStep = ref(false); // Toggle MFA step visibility\n    const qrCodeUrl = ref(\"\"); // Store QR code URL\n    const session = ref(\"\"); // Store MFA session token\n    const mfaCode = ref(\"\"); // Store user input MFA code\n\n    // Funzione per passare allo step successivo\n    const goToNextStep = () => {\n      if (isStepValid(currentStep.value)) {\n        currentStep.value++;\n      }\n    };\n\n    // Funzione per tornare allo step precedente\n    const goToPreviousStep = () => {\n      currentStep.value--;\n    };\n\n    // Funzione per creare un account (stub)\n    const createAccount = (role) => {\n      localStorage.setItem(\"userRole\", role);\n      router.push({ name: \"UserRegister\" });\n    };\n\n    // Funzione per validare il form\n    const validateForm = () => {\n      errors.value = {\n        email: form.value.email ? \"\" : \"Email è richiesta\",\n        password: form.value.password ? \"\" : \"Password è richiesta\",\n      };\n      return Object.values(errors.value).every((error) => !error);\n    };\n\n    // Funzione per validare lo step\n    const isStepValid = (step) => {\n      if (step === 1) {\n        return form.value.email;\n      } else if (step === 2) {\n        return form.value.password;\n      }\n      return false;\n    };\n\n    const sendPasswordResetEmailHandler = async () => {\n      try {\n        await sendPasswordResetEmail(auth, form.value.email); // Passa l'oggetto auth come primo argomento\n        alert(\"Un'email per reimpostare la password è stata inviata.\");\n      } catch (error) {\n        console.error(\"Errore durante l'invio dell'email di reset:\", error);\n        errors.value.general = \"Errore durante l'invio dell'email di reset.\";\n      }\n    };\n\n    // Funzione per mostrare/nascondere la password\n    const toggleShowPassword = () => {\n      showPassword.value = !showPassword.value;\n    };\n\n    const onSubmit = async () => {\n      if (!validateForm()) return;\n\n      loading.value = true;\n      errors.value.general = \"\"; // Reset errors\n\n      try {\n        if (!(await checkEmailVerification())) return;\n\n        const user = await signInUser();\n        if (!user) return; // Exit if sign-in failed\n\n        // Ottieni il token ID e invia al backend\n        const token = await getIdToken(user);\n        await handleLoginResponse(token);\n      } catch (error) {\n        handleError(error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Funzione per controllare la verifica dell'email\n    const checkEmailVerification = async () => {\n      try {\n        const verificationResponse = await axios.post(\n          \"http://127.0.0.1:5000/check-email-verification\",\n          { email: form.value.email }\n        );\n\n        console.log(\n          `Risposta server verifica email: STATUS ${verificationResponse.status} MSG ${verificationResponse.data.message}`\n        );\n        return true;\n      } catch (error) {\n        if (error.response) {\n          switch (error.response.status) {\n            case 403:\n              errors.value.general =\n                \"La tua email non è stata verificata. Verifica la tua email prima di accedere.\";\n              break;\n            case 404:\n              errors.value.general =\n                \"Utente non trovato. Controlla le credenziali.\";\n              break;\n            case 400:\n              errors.value.general = \"Inserire email.\";\n              break;\n            default:\n              errors.value.general =\n                error.response.data.error ||\n                \"Errore nella verifica dell'email.\";\n          }\n        } else {\n          errors.value.general = \"Errore di connessione. Riprova più tardi.\";\n        }\n        console.error(\"Errore nella verifica dell'email:\", error);\n        return false;\n      }\n    };\n\n    // Funzione per eseguire il login dell'utente\n    const signInUser = async () => {\n      try {\n        const userCredential = await signInWithEmailAndPassword(\n          auth,\n          form.value.email,\n          form.value.password\n        );\n\n        const user = userCredential.user;\n\n        return user; // Return user object\n      } catch (error) {\n        console.error(\"Errore durante il login:\", error);\n        handleError(error);\n        return null; // Return null if failed\n      }\n    };\n\n    // Funzione per ottenere il token ID\n    const getIdToken = async (user) => {\n      try {\n        return await user.getIdToken(); // Return the token\n      } catch (error) {\n        console.error(\"Errore durante l'ottenimento del token ID:\", error);\n        errors.value.general = \"Errore durante il login.\";\n      }\n    };\n\n    // Funzione per gestire la risposta del login\n    const handleLoginResponse = async (token) => {\n      try {\n        const response = await axios.post(\"http://127.0.0.1:5000/login\", {\n          idToken: token,\n        });\n        storeUserData(response.data.user, token);\n        router.push({ name: \"WelcomePage\" });\n      } catch (error) {\n        console.error(\n          \"Errore durante la gestione della risposta del login:\",\n          error\n        );\n      }\n    };\n\n    // Funzione per memorizzare i dati dell'utente\n    const storeUserData = (userData, token) => {\n      localStorage.setItem(\"authToken\", token);\n      localStorage.setItem(\"username\", userData.email);\n\n      if (userData.doctorID) {\n        localStorage.setItem(\"doctorId\", userData.doctorID);\n      }\n\n      if (userData.role) {\n        localStorage.setItem(\"userRole\", userData.role);\n      }\n\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      localStorage.setItem(\"userData\", JSON.stringify(userData));\n\n      EventBus.emit(\"auth-changed\"); // Emit event for login notification\n    };\n\n    // Funzione per gestire gli errori\n    const handleError = (error) => {\n      console.error(\"Errore durante il processo di login:\", error);\n      if (error.code === \"auth/wrong-password\") {\n        errors.value.general = \"Password errata. Riprova.\";\n      } else if (error.code === \"auth/user-not-found\") {\n        errors.value.general = \"Utente non trovato. Controlla l'email.\";\n      } else if (error.code === \"auth/invalid-credential\") {\n        handleInvalidCredential();\n      } else if (error.code === \"auth/too-many-requests\") {\n        errors.value.general =\n          \"Tentativi di accesso esauriti. Controlla la tua email per il link di reimpostazione della password.\";\n        sendPasswordResetEmailHandler(); // Trigger password reset\n      } else {\n        errors.value.general = \"Errore sconosciuto durante il login.\";\n      }\n    };\n\n    // Funzione per gestire credenziali non valide\n    const handleInvalidCredential = async () => {\n      try {\n        const decrementResponse = await axios.post(\n          \"http://127.0.0.1:5000/decrement-attempts\",\n          { email: form.value.email }\n        );\n\n        const attemptsRemaining = decrementResponse.data.loginAttemptsLeft;\n        errors.value.general = `Password errata. Hai ${attemptsRemaining} tentativi rimanenti.`;\n      } catch (decrementError) {\n        console.error(\n          \"Errore durante il decremento dei tentativi:\",\n          decrementError\n        );\n        errors.value.general = \"Errore nel decremento dei tentativi.\";\n      }\n    };\n\n    return {\n      form,\n      errors,\n      currentStep,\n      loading,\n      showPassword,\n      showMfaStep,\n      qrCodeUrl,\n      session,\n      mfaCode,\n      goToNextStep,\n      goToPreviousStep,\n      createAccount,\n      validateForm,\n      isStepValid,\n      toggleShowPassword,\n      onSubmit,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.login {\n  background: #ffffff; /* Sfondo bianco */\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0);\n}\n\n.container {\n  max-width: 400px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 100px;\n  height: auto;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.back-button {\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  margin-left: -10px;\n}\n\n.back-icon {\n  width: 30px;\n  height: 30px;\n}\n\n.step-title {\n  font-size: 10px;\n  margin-bottom: 10px;\n}\n\nh2 {\n  font-size: 18px;\n  margin-bottom: 30px;\n}\n\n.form-label {\n  font-size: 12px;\n}\n\n.form-control {\n  background: #f2f2f2;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 12px;\n}\n\n.form-check-label {\n  font-size: 12px; /* Dimensione del testo più piccola */\n}\n\n.form-check-input {\n  transform: scale(0.75); /* Riduce la dimensione della checkbox di poco */\n  margin-top: 5px; /* Sposta leggermente la checkbox verso il basso per allineamento */\n}\n\n.input-group {\n  position: relative;\n}\n\n.eye-button {\n  background: transparent;\n  border: 1px solid #ccc;\n  cursor: pointer;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  width: 46px;\n}\n\n.eye-icon {\n  width: 18px;\n  height: 18px;\n  margin: auto;\n}\n\n.btn-next {\n  width: 100%;\n  margin-top: 10px;\n  padding: 0.4rem;\n  cursor: pointer;\n}\n\n.line-container {\n  display: flex;\n  align-items: center;\n  margin: 1rem 0;\n}\n\n.line {\n  flex: 1;\n}\n\n.or-text {\n  margin: 0 1rem;\n  font-size: small;\n}\n\n.btn-create-account {\n  background: #d9d9d9; /* Colore grigio chiaro */\n  color: black; /* Colore del testo */\n  width: 100%;\n  margin-top: 15px; /* Spazio sopra il pulsante */\n  padding: 0.4rem; /* Ridotto per i pulsanti, più corto verticalmente */\n  font-size: 13px; /* Dimensione del testo più piccola */\n}\n\n.btn-next {\n  font-size: 13px; /* Dimensione del testo più piccola per il pulsante \"Avanti\" */\n}\n\n.email-display {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.email-text {\n  font-size: 14px; /* Dimensione testo per l'email */\n  color: black; /* Colore del testo */\n}\n\n.change-text {\n  font-size: 14px; /* Dimensione testo per \"Cambia\" */\n  color: black; /* Colore del testo */\n  text-decoration: underline; /* Sottolinea il testo */\n  cursor: pointer; /* Aggiunge il cursore pointer */\n}\n\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.loading-icon {\n  width: 50px;\n  height: 50px;\n}\n\n.text-danger {\n  font-size: 0.8rem; /* Font più piccolo (puoi modificarlo a piacere) */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}