{"ast":null,"code":"export default {\n  props: {\n    month: Number,\n    year: Number,\n    daysInMonth: Array,\n    monthNames: Array,\n    dayNames: Array,\n    minDate: String,\n    operationIcon: String,\n    radiographIcon: String,\n    showDayDetails: Function,\n    changeMonth: Function,\n    selectedDay: Object\n  },\n  methods: {\n    selectDay(day) {\n      // Aggiungi una proprietà 'formattedDate' alla data\n      const formattedDate = `${day.year}-${String(day.month).padStart(2, \"0\")}-${String(day.date).padStart(2, \"0\")}`;\n      this.$emit(\"update-selected-day\", {\n        ...day,\n        formattedDate\n      });\n    },\n    isSelectedDay(day) {\n      // Confronta la data formattata\n      return this.selectedDay && this.selectedDay.formattedDate === `${day.year}-${String(day.month).padStart(2, \"0\")}-${String(day.date).padStart(2, \"0\")}`;\n    }\n  }\n};","map":{"version":3,"names":["props","month","Number","year","daysInMonth","Array","monthNames","dayNames","minDate","String","operationIcon","radiographIcon","showDayDetails","Function","changeMonth","selectedDay","Object","methods","selectDay","day","formattedDate","padStart","date","$emit","isSelectedDay"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/ScheduleCalendar.vue"],"sourcesContent":["<template>\n  <div class=\"calendar\">\n    <div class=\"calendar-header\">\n      <button class=\"month-button\" @click=\"changeMonth(-1)\">&#8249;</button>\n      <span>{{ monthNames[month] }} {{ year }}</span>\n      <button class=\"month-button\" @click=\"changeMonth(1)\">&#8250;</button>\n    </div>\n\n    <!-- Riga per i nomi dei giorni -->\n    <div class=\"calendar-day-names\">\n      <div v-for=\"dayName in dayNames\" :key=\"dayName\" class=\"day-name\">\n        {{ dayName }}\n      </div>\n    </div>\n\n    <div class=\"calendar-grid\">\n      <div\n        v-for=\"day in daysInMonth\"\n        :key=\"`${day.year}-${day.month}-${day.date}`\"\n        :class=\"[\n          'calendar-day',\n          {\n            disabled: day.isDisabled,\n            today:\n              `${day.year}-${String(day.month).padStart(2, '0')}-${String(\n                day.date\n              ).padStart(2, '0')}` === minDate,\n            selected: isSelectedDay(day), // Aggiungi la classe 'selected' per il giorno selezionato\n          },\n        ]\"\n        @click=\"!day.isDisabled && selectDay(day)\"\n        :title=\"'Ciao'\"\n      >\n        <!-- Data -->\n        <div class=\"date\">{{ day.date }}</div>\n\n        <!-- Icone Operazioni -->\n        <div class=\"icon-row operations\">\n          <img\n            v-for=\"n in day.operations.length\"\n            :key=\"'operation-' + n + '-' + day.date\"\n            :src=\"operationIcon\"\n            alt=\"Operazione\"\n            class=\"icon\"\n          />\n        </div>\n\n        <div class=\"icon-row radiographs\">\n          <img\n            v-for=\"n in day.radiographs.length\"\n            :key=\"'radiograph-' + n + '-' + day.date\"\n            :src=\"radiographIcon\"\n            alt=\"Radiografia\"\n            class=\"icon\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    month: Number,\n    year: Number,\n    daysInMonth: Array,\n    monthNames: Array,\n    dayNames: Array,\n    minDate: String,\n    operationIcon: String,\n    radiographIcon: String,\n    showDayDetails: Function,\n    changeMonth: Function,\n    selectedDay: Object,\n  },\n  methods: {\n    selectDay(day) {\n      // Aggiungi una proprietà 'formattedDate' alla data\n      const formattedDate = `${day.year}-${String(day.month).padStart(\n        2,\n        \"0\"\n      )}-${String(day.date).padStart(2, \"0\")}`;\n      this.$emit(\"update-selected-day\", { ...day, formattedDate });\n    },\n    isSelectedDay(day) {\n      // Confronta la data formattata\n      return (\n        this.selectedDay &&\n        this.selectedDay.formattedDate ===\n          `${day.year}-${String(day.month).padStart(2, \"0\")}-${String(\n            day.date\n          ).padStart(2, \"0\")}`\n      );\n    },\n  },\n};\n</script>\n\n<style scoped>\n.schedule-calendar {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.calendar-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 1em;\n  margin-bottom: 10px;\n}\n\n.month-button {\n  background: none; /* Nessun sfondo */\n  border: none; /* Nessun bordo */\n  padding: 5px; /* Spazio interno per clic comodamente */\n  cursor: pointer; /* Cambia il cursore per indicare che è cliccabile */\n  font-size: 1.5em; /* Dimensione del carattere per renderlo visibile */\n  color: #007bff; /* Colore blu per l’icona del pulsante */\n  transition: color 0.3s ease; /* Animazione per un tocco moderno */\n}\n\n.month-button:hover {\n  color: #0056b3; /* Cambia colore al passaggio del mouse */\n}\n\n.month-button:focus {\n  outline: none; /* Rimuove il bordo di focus */\n}\n\n.calendar-grid {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 10px;\n  margin-top: 10px;\n}\n\n.calendar-day {\n  position: relative;\n  padding: 10px;\n  border: 1px solid #ddd;\n  height: 70px;\n  overflow: hidden;\n  cursor: pointer;\n}\n\n.calendar-day.disabled {\n  opacity: 0.5;\n  color: #ccc;\n  pointer-events: none;\n  background-color: #f9f9f9;\n}\n\n/* Giorno di oggi - colore di sfondo rosso chiaro */\n.calendar-day.today {\n  background-color: #f9f4f4; /* Rosso chiaro */\n  border: 2px solid #ffa8a8db; /* Bordo rosso (già presente) */\n  border-radius: 5px;\n}\n\n/* Giorno selezionato - bordo blu (#007bff) */\n.calendar-day.selected {\n  border-radius: 5px;\n  border: 2px solid #7bbbffe7; /* Bordo blu */\n}\n\n/* Modifica la visibilità del bordo di oggi per avere un'idea chiara del giorno corrente */\n.calendar-day.today.selected {\n  background-color: #ffebeb; /* Rosso chiaro */\n  border: 2px solid #7bbbffe7; /* Bordo blu per il giorno selezionato */\n}\n\n.calendar-day-names {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  background-color: #f0f0f0;\n  padding: 10px 0;\n  font-weight: bold;\n  color: #555;\n  text-align: center;\n  border-bottom: 1px solid #ddd;\n}\n\n.day-name {\n  text-transform: uppercase;\n  font-size: 0.9em;\n}\n\n.activity-icons {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n}\n\n.icon-row {\n  display: flex;\n  justify-content: center;\n  gap: 2px;\n}\n\n.operations {\n  min-height: 7px;\n  margin-bottom: 3px;\n}\n\n.icon {\n  width: 7px;\n  height: 7px;\n}\n</style>\n"],"mappings":"AA8DA,eAAe;EACbA,KAAK,EAAE;IACLC,KAAK,EAAEC,MAAM;IACbC,IAAI,EAAED,MAAM;IACZE,WAAW,EAAEC,KAAK;IAClBC,UAAU,EAAED,KAAK;IACjBE,QAAQ,EAAEF,KAAK;IACfG,OAAO,EAAEC,MAAM;IACfC,aAAa,EAAED,MAAM;IACrBE,cAAc,EAAEF,MAAM;IACtBG,cAAc,EAAEC,QAAQ;IACxBC,WAAW,EAAED,QAAQ;IACrBE,WAAW,EAAEC;EACf,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAACC,GAAG,EAAE;MACb;MACA,MAAMC,aAAY,GAAI,GAAGD,GAAG,CAAChB,IAAI,IAAIM,MAAM,CAACU,GAAG,CAAClB,KAAK,CAAC,CAACoB,QAAQ,CAC7D,CAAC,EACD,GACF,CAAC,IAAIZ,MAAM,CAACU,GAAG,CAACG,IAAI,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;MACxC,IAAI,CAACE,KAAK,CAAC,qBAAqB,EAAE;QAAE,GAAGJ,GAAG;QAAEC;MAAc,CAAC,CAAC;IAC9D,CAAC;IACDI,aAAaA,CAACL,GAAG,EAAE;MACjB;MACA,OACE,IAAI,CAACJ,WAAU,IACf,IAAI,CAACA,WAAW,CAACK,aAAY,KAC3B,GAAGD,GAAG,CAAChB,IAAI,IAAIM,MAAM,CAACU,GAAG,CAAClB,KAAK,CAAC,CAACoB,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIZ,MAAM,CACzDU,GAAG,CAACG,IACN,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC;IAEzB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}