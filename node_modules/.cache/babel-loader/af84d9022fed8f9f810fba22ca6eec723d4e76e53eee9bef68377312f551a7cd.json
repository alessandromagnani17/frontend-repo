{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      currentStep: 1,\n      loading: false,\n      showPassword: false,\n      showConfirmPassword: false,\n      showPasswordError: false,\n      isHover: false,\n      showDisabledIcon: false,\n      errors: {},\n      form: {\n        nome: \"\",\n        cognome: \"\",\n        gender: \"\",\n        data: \"\",\n        address: \"\",\n        cap_code: \"\",\n        tax_code: \"\",\n        telefono: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      }\n    };\n  },\n  computed: {\n    // Computed property per la validazione della password\n    isPasswordValid() {\n      const password = this.form.password || \"\";\n      const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,}$/;\n      return regex.test(password);\n    }\n  },\n  methods: {\n    goToNextStep() {\n      if (this.isStepValid(this.currentStep)) {\n        if (this.currentStep === 3) {\n          this.onSubmit();\n        } else {\n          this.currentStep++;\n        }\n      }\n    },\n    goToPreviousStep() {\n      this.currentStep--;\n    },\n    toggleShowPassword() {\n      this.showPassword = !this.showPassword;\n    },\n    toggleShowConfirmPassword() {\n      this.showConfirmPassword = !this.showConfirmPassword;\n    },\n    async onSubmit() {\n      if (this.isStepValid(3)) {\n        this.loading = true;\n        this.errors = {};\n        try {\n          const {\n            username,\n            email,\n            password,\n            nome,\n            cognome,\n            data,\n            telefono,\n            gender,\n            address,\n            cap_code,\n            tax_code\n          } = this.form;\n          console.log(\"Dati registrazione:\", {\n            username,\n            email,\n            password,\n            nome,\n            cognome,\n            data,\n            telefono,\n            gender,\n            address,\n            cap_code,\n            tax_code\n          });\n\n          // Modifica l'URL per il backend che stai usando\n          const response = await axios.post(\"http://127.0.0.1:5000/register\", {\n            username,\n            email,\n            password,\n            nome,\n            cognome,\n            data,\n            telefono,\n            gender,\n            address,\n            cap_code,\n            tax_code\n          });\n\n          // Rimuovi l'alert e reindirizza alla pagina di conferma\n          this.loading = false;\n          this.$router.push({\n            name: \"EmailConfirmation\",\n            params: {\n              email\n            } // Passa l'email per usarla nella conferma\n          });\n        } catch (error) {\n          console.error(\"Errore nella registrazione:\", error);\n          if (error.response) {\n            console.error(\"Dati risposta:\", error.response.data);\n            this.errors.general = error.response.data.error || \"Registrazione fallita\";\n          } else {\n            this.errors.general = error.message;\n          }\n          alert(\"Errore nella registrazione: \" + this.errors.general);\n          this.loading = false;\n        }\n      }\n    },\n    isStepValid(step) {\n      if (step === 1) {\n        return this.form.nome && this.form.cognome && this.form.gender && this.form.data;\n      } else if (step === 2) {\n        return this.form.address && this.form.cap_code && this.form.tax_code && this.form.telefono;\n      } else if (step === 3) {\n        return this.form.username && this.form.email && this.isPasswordValid && this.form.password === this.form.confirmPassword;\n      }\n      return false;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","currentStep","loading","showPassword","showConfirmPassword","showPasswordError","isHover","showDisabledIcon","errors","form","nome","cognome","gender","address","cap_code","tax_code","telefono","username","email","password","confirmPassword","computed","isPasswordValid","regex","test","methods","goToNextStep","isStepValid","onSubmit","goToPreviousStep","toggleShowPassword","toggleShowConfirmPassword","console","log","response","post","$router","push","name","params","error","general","message","alert","step"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/UserRegister.vue"],"sourcesContent":["<template>\n  <div class=\"register\">\n    <div class=\"container mt-5\">\n      <div class=\"header\">\n        <button\n          v-if=\"currentStep > 1\"\n          class=\"back-button\"\n          @click=\"goToPreviousStep\"\n        >\n          <img src=\"@/assets/back-icon.svg\" alt=\"Indietro\" class=\"back-icon\" />\n        </button>\n      </div>\n\n      <span class=\"step-title\">Passaggio {{ currentStep }} di 3</span>\n      <h2 class=\"mb-4\">Crea un Account</h2>\n\n      <form @submit.prevent=\"onSubmit\">\n        <!-- Step 1: Dati Anagrafici -->\n        <div v-if=\"currentStep === 1\">\n          <div class=\"mb-3\">\n            <label for=\"nome\" class=\"form-label\">Nome</label>\n            <input\n              id=\"nome\"\n              v-model=\"form.nome\"\n              type=\"text\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"cognome\" class=\"form-label\">Cognome</label>\n            <input\n              id=\"cognome\"\n              v-model=\"form.cognome\"\n              type=\"text\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"gender\" class=\"form-label\">Genere</label>\n            <select\n              id=\"gender\"\n              v-model=\"form.gender\"\n              class=\"form-control\"\n              required\n            >\n              <option value=\"Male\">Maschio</option>\n              <option value=\"Female\">Femmina</option>\n            </select>\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"data\" class=\"form-label\">Data di Nascita</label>\n            <input\n              id=\"data\"\n              v-model=\"form.data\"\n              type=\"date\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n        </div>\n\n        <!-- Step 2: Dati di Contatto -->\n        <div v-if=\"currentStep === 2\">\n          <div class=\"mb-3\">\n            <label for=\"address\" class=\"form-label\">Indirizzo</label>\n            <input\n              id=\"address\"\n              v-model=\"form.address\"\n              type=\"text\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"cap_code\" class=\"form-label\">CAP</label>\n            <input\n              id=\"cap_code\"\n              v-model=\"form.cap_code\"\n              type=\"text\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"tax_code\" class=\"form-label\">Codice Fiscale</label>\n            <input\n              id=\"tax_code\"\n              v-model=\"form.tax_code\"\n              type=\"text\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"telefono\" class=\"form-label\">Numero di Telefono</label>\n            <input\n              id=\"telefono\"\n              v-model=\"form.telefono\"\n              type=\"tel\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n        </div>\n\n        <!-- Step 3: Credenziali -->\n        <div v-if=\"currentStep === 3\">\n          <div class=\"mb-3\">\n            <label for=\"username\" class=\"form-label\">Username</label>\n            <input\n              id=\"username\"\n              v-model=\"form.username\"\n              type=\"text\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"email\" class=\"form-label\">Email</label>\n            <input\n              id=\"email\"\n              v-model=\"form.email\"\n              type=\"email\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"password\" class=\"form-label\"\n              >Password\n              <span\n                class=\"info-icon\"\n                title=\"Requisiti per la password: min 8 caratteri, almeno una maiuscola, una minuscola un numero e un carattere speciale.\"\n              >\n                <img\n                  src=\"@/assets/info-icon.svg\"\n                  alt=\"Info\"\n                  class=\"info-image\"\n                />\n              </span>\n            </label>\n            <div class=\"input-group\">\n              <input\n                id=\"password\"\n                v-model=\"form.password\"\n                :type=\"showPassword ? 'text' : 'password'\"\n                class=\"form-control password-input\"\n                :class=\"{\n                  'is-invalid': !isPasswordValid && passwordInputTouched,\n                }\"\n                required\n                @input=\"passwordInputTouched = true\"\n                @paste.prevent\n              />\n              <button\n                type=\"button\"\n                class=\"btn eye-button\"\n                @click=\"toggleShowPassword\"\n              >\n                <img\n                  :src=\"\n                    showPassword\n                      ? require('@/assets/eye-off.svg')\n                      : require('@/assets/eye-on.svg')\n                  \"\n                  alt=\"Toggle Password Visibility\"\n                  class=\"eye-icon\"\n                />\n              </button>\n            </div>\n            <div\n              v-if=\"passwordInputTouched && !isPasswordValid\"\n              class=\"text-danger mt-1\"\n            >\n              La password deve contenere almeno: un numero, una lettera\n              maiuscola, una lettera minuscola e un carattere speciale.\n            </div>\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"confirmPassword\" class=\"form-label\"\n              >Conferma Password</label\n            >\n            <div class=\"input-group\">\n              <input\n                id=\"confirmPassword\"\n                v-model=\"form.confirmPassword\"\n                :type=\"showConfirmPassword ? 'text' : 'password'\"\n                class=\"form-control password-input\"\n                :class=\"{ 'is-invalid': showPasswordError }\"\n                required\n                @paste.prevent\n              />\n              <button\n                type=\"button\"\n                class=\"btn eye-button\"\n                @click=\"toggleShowConfirmPassword\"\n              >\n                <img\n                  :src=\"\n                    showConfirmPassword\n                      ? require('@/assets/eye-off.svg')\n                      : require('@/assets/eye-on.svg')\n                  \"\n                  alt=\"Toggle Password Visibility\"\n                  class=\"eye-icon\"\n                />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Bottone di avanzamento o submit -->\n        <div v-if=\"currentStep < 3\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-next\"\n            :disabled=\"!isStepValid(currentStep)\"\n            @click=\"goToNextStep\"\n            @mouseover=\"isHover = true\"\n            @mouseleave=\"isHover = false\"\n            @mouseenter=\"showDisabledIcon = !isStepValid(currentStep)\"\n          >\n            Avanti\n            <span\n              v-if=\"!isStepValid(currentStep) && isHover\"\n              class=\"disabled-icon\"\n            >\n              <img\n                src=\"@/assets/prohibition-icon.svg\"\n                alt=\"Non disponibile\"\n                class=\"prohibition-icon\"\n              />\n            </span>\n          </button>\n        </div>\n\n        <!-- Submit button (Step 3) -->\n        <div v-if=\"currentStep === 3\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-next\"\n            :disabled=\"loading || !isStepValid(currentStep)\"\n          >\n            <span v-if=\"loading\">Registrazione...</span>\n            <span v-else>Registrati</span>\n          </button>\n\n          <!-- Error message -->\n          <div v-if=\"errors.general\" class=\"invalid-feedback mt-3\">\n            {{ errors.general }}\n          </div>\n        </div>\n      </form>\n    </div>\n\n    <!-- Loading overlay -->\n    <div v-if=\"loading\" class=\"loading-overlay\">\n      <div class=\"loading-icon\">\n        <img src=\"@/assets/loading-icon.svg\" alt=\"Loading...\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      currentStep: 1,\n      loading: false,\n      showPassword: false,\n      showConfirmPassword: false,\n      showPasswordError: false,\n      isHover: false,\n      showDisabledIcon: false,\n      errors: {},\n      form: {\n        nome: \"\",\n        cognome: \"\",\n        gender: \"\",\n        data: \"\",\n        address: \"\",\n        cap_code: \"\",\n        tax_code: \"\",\n        telefono: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      },\n    };\n  },\n  computed: {\n    // Computed property per la validazione della password\n    isPasswordValid() {\n      const password = this.form.password || \"\";\n      const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,}$/;\n      return regex.test(password);\n    },\n  },\n  methods: {\n    goToNextStep() {\n      if (this.isStepValid(this.currentStep)) {\n        if (this.currentStep === 3) {\n          this.onSubmit();\n        } else {\n          this.currentStep++;\n        }\n      }\n    },\n    goToPreviousStep() {\n      this.currentStep--;\n    },\n    toggleShowPassword() {\n      this.showPassword = !this.showPassword;\n    },\n    toggleShowConfirmPassword() {\n      this.showConfirmPassword = !this.showConfirmPassword;\n    },\n    async onSubmit() {\n      if (this.isStepValid(3)) {\n        this.loading = true;\n        this.errors = {};\n        try {\n          const {\n            username,\n            email,\n            password,\n            nome,\n            cognome,\n            data,\n            telefono,\n            gender,\n            address,\n            cap_code,\n            tax_code,\n          } = this.form;\n\n          console.log(\"Dati registrazione:\", {\n            username,\n            email,\n            password,\n            nome,\n            cognome,\n            data,\n            telefono,\n            gender,\n            address,\n            cap_code,\n            tax_code,\n          });\n\n          // Modifica l'URL per il backend che stai usando\n          const response = await axios.post(\"http://127.0.0.1:5000/register\", {\n            username,\n            email,\n            password,\n            nome,\n            cognome,\n            data,\n            telefono,\n            gender,\n            address,\n            cap_code,\n            tax_code,\n          });\n\n          // Rimuovi l'alert e reindirizza alla pagina di conferma\n          this.loading = false;\n          this.$router.push({\n            name: \"EmailConfirmation\",\n            params: { email } // Passa l'email per usarla nella conferma\n          });\n        } catch (error) {\n          console.error(\"Errore nella registrazione:\", error);\n          if (error.response) {\n            console.error(\"Dati risposta:\", error.response.data);\n            this.errors.general =\n              error.response.data.error || \"Registrazione fallita\";\n          } else {\n            this.errors.general = error.message;\n          }\n          alert(\"Errore nella registrazione: \" + this.errors.general);\n          this.loading = false;\n        }\n      }\n    },\n\n    isStepValid(step) {\n      if (step === 1) {\n        return (\n          this.form.nome &&\n          this.form.cognome &&\n          this.form.gender &&\n          this.form.data\n        );\n      } else if (step === 2) {\n        return (\n          this.form.address &&\n          this.form.cap_code &&\n          this.form.tax_code &&\n          this.form.telefono\n        );\n      } else if (step === 3) {\n        return (\n          this.form.username &&\n          this.form.email &&\n          this.isPasswordValid &&\n          this.form.password === this.form.confirmPassword\n        );\n      }\n      return false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.register {\n  background: #ffffff; /* Sfondo bianco */\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0);\n}\n\n.container {\n  max-width: 600px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 100px;\n  height: auto;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.back-button {\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  margin-left: -10px;\n}\n\n.back-icon {\n  width: 30px;\n  height: 30px;\n}\n\n.step-title {\n  font-size: 10px;\n  margin-bottom: 10px;\n}\n\nh2 {\n  font-size: 18px;\n  margin-bottom: 30px;\n}\n\n.form-label {\n  font-size: 12px;\n}\n\n.form-control {\n  background: #f2f2f2;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 12px;\n}\n\n.input-group {\n  position: relative;\n}\n\n.text-danger {\n  font-size: 0.8rem; /* Font piÃ¹ piccolo (puoi modificarlo a piacere) */\n}\n\n.eye-button {\n  background: transparent;\n  border: 1px solid #ccc;\n  cursor: pointer;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  width: 46px;\n}\n\n.eye-icon {\n  width: 18px;\n  height: 18px;\n  margin: auto;\n}\n\n.info-icon {\n  margin-left: 5px;\n  display: inline-block;\n  font-size: 12px;\n}\n\n.info-image {\n  width: 15px;\n  height: 15px;\n  vertical-align: middle;\n}\n\n.btn-next {\n  width: 100%;\n  margin-top: 20px;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.btn-next:hover {\n  background-color: #c0c0c0;\n}\n\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 9999;\n}\n\n.loading-icon {\n  width: 50px;\n}\n\n.disabled-icon {\n  margin-left: 10px;\n}\n\n.prohibition-icon {\n  width: 16px;\n  height: 16px;\n  vertical-align: middle;\n  display: inline-block;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}