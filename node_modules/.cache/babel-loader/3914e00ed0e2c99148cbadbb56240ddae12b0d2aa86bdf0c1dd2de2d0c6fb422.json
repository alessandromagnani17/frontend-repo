{"ast":null,"code":"import PatientRadiographs from \"./PatientRadiographs.vue\";\nimport UploadRadiograph from \"./UploadRadiographs.vue\";\nimport { ref, onMounted } from \"vue\";\nimport { getPatientInfo, getRadiographs } from \"../services/api-service\";\nexport default {\n  components: {\n    PatientRadiographs,\n    UploadRadiograph\n  },\n  setup() {\n    const selectedPatient = ref(null);\n    const selectedPatientRadiographs = ref([]);\n    const userData = JSON.parse(localStorage.getItem(\"userData\")); // Recupera le informazioni dell'utente loggato\n\n    onMounted(async () => {\n      if (userData && userData.role === \"patient\") {\n        const userId = userData.userId; // Assicurati che questo corrisponda a come hai salvato l'ID utente\n\n        console.log(\"Informazioni utente loggato:\", userData); // Stampa le informazioni dell'utente\n\n        try {\n          selectedPatient.value = await getPatientInfo(userId);\n          selectedPatientRadiographs.value = await getRadiographs(userId);\n        } catch (error) {\n          console.error(\"Errore nel caricamento dei dettagli del paziente:\", error);\n        }\n      } else {\n        console.error(\"Nessun ID paziente trovato nel localStorage.\");\n      }\n    });\n    const handleUploadSuccess = async () => {\n      if (selectedPatient.value) {\n        selectedPatientRadiographs.value = await getRadiographs(selectedPatient.value.userId);\n      }\n    };\n    return {\n      selectedPatient,\n      selectedPatientRadiographs,\n      handleUploadSuccess\n    };\n  }\n};","map":{"version":3,"names":["PatientRadiographs","UploadRadiograph","ref","onMounted","getPatientInfo","getRadiographs","components","setup","selectedPatient","selectedPatientRadiographs","userData","JSON","parse","localStorage","getItem","role","userId","console","log","value","error","handleUploadSuccess"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/PatientDashboard.vue"],"sourcesContent":["<template>\n    <div class=\"dashboard\">\n      <div class=\"container\">\n        <div class=\"header\">\n          <h1>Dashboard Paziente</h1>\n        </div>\n  \n        <div v-if=\"selectedPatient\" class=\"info\">\n          <h2>Dettagli Paziente</h2>\n          <div class=\"patient-info\">\n            <p><strong>Nome:</strong> {{ selectedPatient.name }}</p>\n            <p><strong>Cognome:</strong> {{ selectedPatient.family_name }}</p>\n            <p><strong>Email:</strong> {{ selectedPatient.email }}</p>\n            <p>\n              <strong>Data di nascita:</strong> {{ selectedPatient.birthdate }}\n            </p>\n            <p>\n              <strong>Numero di telefono:</strong>\n              {{ selectedPatient.phone_number }}\n            </p>\n            <p><strong>Indirizzo:</strong> {{ selectedPatient.address }}</p>\n          </div>\n  \n          <div class=\"upload-section\">\n            <UploadRadiograph\n              @uploadSuccess=\"handleUploadSuccess\"\n              :patientId=\"selectedPatient.userId\"\n            />\n          </div>\n  \n          <div class=\"radiographs-section\">\n            <PatientRadiographs\n              :radiographs=\"selectedPatientRadiographs\"\n              :patientId=\"selectedPatient.userId\"\n              :patientName=\"selectedPatient.name\"\n            />\n          </div>\n        </div>\n        <div v-else>\n          <p class=\"no-patient\">Nessun paziente loggato trovato.</p>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import PatientRadiographs from \"./PatientRadiographs.vue\";\n  import UploadRadiograph from \"./UploadRadiographs.vue\";\n  import { ref, onMounted } from \"vue\";\n  import { getPatientInfo, getRadiographs } from \"../services/api-service\";\n  \n  export default {\n    components: {\n      PatientRadiographs,\n      UploadRadiograph,\n    },\n    setup() {\n      const selectedPatient = ref(null);\n      const selectedPatientRadiographs = ref([]);\n  \n      const userData = JSON.parse(localStorage.getItem(\"userData\")); // Recupera le informazioni dell'utente loggato\n  \n      onMounted(async () => {\n        if (userData && userData.role === \"patient\") {\n          const userId = userData.userId; // Assicurati che questo corrisponda a come hai salvato l'ID utente\n  \n          console.log(\"Informazioni utente loggato:\", userData); // Stampa le informazioni dell'utente\n  \n          try {\n            selectedPatient.value = await getPatientInfo(userId);\n            selectedPatientRadiographs.value = await getRadiographs(userId);\n          } catch (error) {\n            console.error(\"Errore nel caricamento dei dettagli del paziente:\", error);\n          }\n        } else {\n          console.error(\"Nessun ID paziente trovato nel localStorage.\");\n        }\n      });\n  \n      const handleUploadSuccess = async () => {\n        if (selectedPatient.value) {\n          selectedPatientRadiographs.value = await getRadiographs(\n            selectedPatient.value.userId\n          );\n        }\n      };\n  \n      return {\n        selectedPatient,\n        selectedPatientRadiographs,\n        handleUploadSuccess,\n      };\n    },\n  };\n  </script>\n  \n\n<style scoped>\n.dashboard {\n  background: #ffffff;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.container {\n  max-width: 600px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 100px;\n  width: 100%;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\nh1 {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\nh2 {\n  font-size: 18px;\n  margin-bottom: 20px;\n}\n\n.no-patient {\n  font-size: 14px;\n  color: #999;\n}\n\n.info {\n  margin-top: 30px;\n}\n\n.patient-info p {\n  font-size: 14px;\n  margin-bottom: 10px;\n}\n\n.upload-section,\n.radiographs-section {\n  margin-top: 30px;\n}\n\n.btn-next {\n  width: 100%;\n  margin-top: 10px;\n  padding: 0.4rem;\n  cursor: pointer;\n  font-size: 13px;\n}\n\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.loading-icon {\n  width: 50px;\n  height: 50px;\n}\n</style>\n"],"mappings":"AA8CE,OAAOA,kBAAiB,MAAO,0BAA0B;AACzD,OAAOC,gBAAe,MAAO,yBAAyB;AACtD,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,cAAc,EAAEC,cAAa,QAAS,yBAAyB;AAExE,eAAe;EACbC,UAAU,EAAE;IACVN,kBAAkB;IAClBC;EACF,CAAC;EACDM,KAAKA,CAAA,EAAG;IACN,MAAMC,eAAc,GAAIN,GAAG,CAAC,IAAI,CAAC;IACjC,MAAMO,0BAAyB,GAAIP,GAAG,CAAC,EAAE,CAAC;IAE1C,MAAMQ,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE;;IAE/DX,SAAS,CAAC,YAAY;MACpB,IAAIO,QAAO,IAAKA,QAAQ,CAACK,IAAG,KAAM,SAAS,EAAE;QAC3C,MAAMC,MAAK,GAAIN,QAAQ,CAACM,MAAM,EAAE;;QAEhCC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAER,QAAQ,CAAC,EAAE;;QAEvD,IAAI;UACFF,eAAe,CAACW,KAAI,GAAI,MAAMf,cAAc,CAACY,MAAM,CAAC;UACpDP,0BAA0B,CAACU,KAAI,GAAI,MAAMd,cAAc,CAACW,MAAM,CAAC;QACjE,EAAE,OAAOI,KAAK,EAAE;UACdH,OAAO,CAACG,KAAK,CAAC,mDAAmD,EAAEA,KAAK,CAAC;QAC3E;MACF,OAAO;QACLH,OAAO,CAACG,KAAK,CAAC,8CAA8C,CAAC;MAC/D;IACF,CAAC,CAAC;IAEF,MAAMC,mBAAkB,GAAI,MAAAA,CAAA,KAAY;MACtC,IAAIb,eAAe,CAACW,KAAK,EAAE;QACzBV,0BAA0B,CAACU,KAAI,GAAI,MAAMd,cAAc,CACrDG,eAAe,CAACW,KAAK,CAACH,MACxB,CAAC;MACH;IACF,CAAC;IAED,OAAO;MACLR,eAAe;MACfC,0BAA0B;MAC1BY;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}