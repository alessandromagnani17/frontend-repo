{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"welcome\"\n};\nconst _hoisted_2 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"alert alert-info small-text\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"select-container mb-4\"\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  key: 1,\n  class: \"mt-4\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"patient-info-container small-text\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"medium-text\"\n};\nconst _hoisted_9 = {\n  class: \"medium-text\"\n};\nconst _hoisted_10 = {\n  key: 2,\n  class: \"alert alert-info mt-3 small-text\"\n};\nconst _hoisted_11 = {\n  key: 3,\n  class: \"row 2\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = [\"src\"];\nconst _hoisted_14 = {\n  class: \"card-body\"\n};\nconst _hoisted_15 = {\n  class: \"card-title small-text\"\n};\nconst _hoisted_16 = {\n  key: 0,\n  class: \"alert alert-danger mt-3 small-text\"\n};\nconst _hoisted_17 = {\n  class: \"alert-text\"\n};\nconst _hoisted_18 = {\n  key: 2,\n  class: \"text-danger\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[8] || (_cache[8] = _createElementVNode(\"h1\", {\n    class: \"view-radiographs\"\n  }, \"Visualizza radiografie\", -1 /* HOISTED */)), _createCommentVNode(\" Messaggio di caricamento \"), $data.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" Caricamento... \")) : $data.role === 'doctor' || $data.role === 'patient' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Contenuto per il ruolo di 'doctor' o 'patient' \"), _createElementVNode(\"div\", null, [_createCommentVNode(\" Sezione per il selettore di pazienti per il medico \"), $data.role === 'doctor' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [$data.patients.length > 0 && !$data.selectedPatientId ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    key: 0,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedPatientId = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.onPatientChange && $options.onPatientChange(...args)),\n    class: \"form-select custom-select small-text\"\n  }, [_cache[3] || (_cache[3] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\",\n    selected: \"\"\n  }, \"Seleziona un paziente\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.patients, patient => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: patient.userId,\n      value: patient.userId\n    }, _toDisplayString(patient.name) + \" \" + _toDisplayString(patient.family_name) + \" (ID: \" + _toDisplayString(patient.userId) + \") \", 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */)), [[_vModelSelect, $data.selectedPatientId]]) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Sezione per il paziente selezionato \"), $data.selectedPatientId ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [$data.role === 'doctor' && $data.selectedPatientId ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"span\", null, [_cache[5] || (_cache[5] = _createTextVNode(\" Utente selezionato: \")), _createElementVNode(\"strong\", null, [_createTextVNode(_toDisplayString($data.selectedPatientName) + \" \" + _toDisplayString($data.selectedPatientSurname) + \" \", 1 /* TEXT */), _cache[4] || (_cache[4] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */))]), _createTextVNode(\" (ID: \" + _toDisplayString($data.selectedPatientId) + \") \", 1 /* TEXT */)]), _createElementVNode(\"span\", {\n    class: \"change-text\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.changePatient && $options.changePatient(...args))\n  }, \"Cambia\")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"strong\", _hoisted_9, _toDisplayString($data.selectedPatientName) + \" \" + _toDisplayString($data.selectedPatientSurname) + \": \", 1 /* TEXT */)])), _createCommentVNode(\" Messaggio di x delle radiografie \"), $data.isLoadingRadiographs ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, \" Caricamento delle radiografie... \")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Sezione per visualizzare le radiografie \"), $data.userRadiographs.length > 0 && $data.selectedPatientId ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.userRadiographs, (radiograph, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: radiograph.radiography_id,\n      onClick: $event => $options.goToRadiographDetail(index, radiograph.original_image, radiograph.gradcam_image),\n      class: \"card\"\n    }, [_createElementVNode(\"img\", {\n      src: radiograph.original_image,\n      class: \"card-img-top\",\n      alt: \"Radiografia\"\n    }, null, 8 /* PROPS */, _hoisted_13), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"h5\", _hoisted_15, \" Radiografia \" + _toDisplayString(index + 1), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_12);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 4\n  }, [_createCommentVNode(\" Messaggio di errore nel caso non ci siano radiografie \"), _createElementVNode(\"div\", null, [$data.errorNoRadiographies ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_createElementVNode(\"p\", _hoisted_17, \" L'utente \" + _toDisplayString($data.selectedPatientName) + \" \" + _toDisplayString($data.selectedPatientSurname) + \" non ha radiografie. \", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Sezione per mostrare se non ci sono pazienti per il medico \"), $data.patients.length == 0 && $data.role === 'doctor' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, _cache[6] || (_cache[6] = [_createElementVNode(\"p\", null, \"Non hai pazienti.\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" Messaggio per utenti senza permessi \"), _cache[7] || (_cache[7] = _createElementVNode(\"div\", null, [_createElementVNode(\"p\", {\n    class: \"text-muted\"\n  }, \" Non hai i permessi per visualizzare le radiografie. \")], -1 /* HOISTED */))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","$data","isLoading","_hoisted_3","role","_Fragment","_hoisted_4","patients","length","selectedPatientId","_cache","$event","onChange","args","$options","onPatientChange","value","disabled","selected","_renderList","patient","userId","name","_toDisplayString","family_name","_hoisted_5","_hoisted_6","_hoisted_7","_createTextVNode","selectedPatientName","selectedPatientSurname","onClick","changePatient","_hoisted_8","_hoisted_9","isLoadingRadiographs","_hoisted_10","userRadiographs","_hoisted_11","radiograph","index","radiography_id","goToRadiographDetail","original_image","gradcam_image","src","alt","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_12","errorNoRadiographies","_hoisted_16","_hoisted_17","_hoisted_18"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\views\\ViewRadiographs.vue"],"sourcesContent":["<template>\r\n  <div class=\"welcome\">\r\n    <div class=\"container mt-5\">\r\n      <h1 class=\"view-radiographs\">Visualizza radiografie</h1>\r\n\r\n      <!-- Messaggio di caricamento -->\r\n      <div v-if=\"isLoading\" class=\"alert alert-info small-text\">\r\n        Caricamento...\r\n      </div>\r\n\r\n      <!-- Contenuto per il ruolo di 'doctor' o 'patient' -->\r\n      <div v-else-if=\"role === 'doctor' || role === 'patient'\">\r\n        <!-- Sezione per il selettore di pazienti per il medico -->\r\n        <div v-if=\"role === 'doctor'\" class=\"select-container mb-4\">\r\n          <select\r\n            v-if=\"patients.length > 0 && !selectedPatientId\"\r\n            v-model=\"selectedPatientId\"\r\n            @change=\"onPatientChange\"\r\n            class=\"form-select custom-select small-text\"\r\n          >\r\n            <option value=\"\" disabled selected>Seleziona un paziente</option>\r\n            <option\r\n              v-for=\"patient in patients\"\r\n              :key=\"patient.userId\"\r\n              :value=\"patient.userId\"\r\n            >\r\n              {{ patient.name }} {{ patient.family_name }} (ID:\r\n              {{ patient.userId }})\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <!-- Sezione per il paziente selezionato -->\r\n        <div v-if=\"selectedPatientId\" class=\"mt-4\">\r\n          <div\r\n            v-if=\"role === 'doctor' && selectedPatientId\"\r\n            class=\"patient-info-container small-text\"\r\n          >\r\n            <span>\r\n              Utente selezionato:\r\n              <strong>\r\n                {{ selectedPatientName }} {{ selectedPatientSurname }} <br />\r\n              </strong>\r\n              (ID: {{ selectedPatientId }})\r\n            </span>\r\n            <span class=\"change-text\" @click=\"changePatient\">Cambia</span>\r\n          </div>\r\n          <div v-else class=\"medium-text\">\r\n            <strong class=\"medium-text\">\r\n              {{ selectedPatientName }} {{ selectedPatientSurname }}:\r\n            </strong>\r\n          </div>\r\n\r\n          <!-- Messaggio di x delle radiografie -->\r\n          <div\r\n            v-if=\"isLoadingRadiographs\"\r\n            class=\"alert alert-info mt-3 small-text\"\r\n          >\r\n            Caricamento delle radiografie...\r\n          </div>\r\n\r\n          <!-- Sezione per visualizzare le radiografie -->\r\n          <div\r\n            class=\"row 2\"\r\n            v-if=\"userRadiographs.length > 0 && selectedPatientId\"\r\n          >\r\n            <div\r\n              v-for=\"(radiograph, index) in userRadiographs\"\r\n              :key=\"radiograph.radiography_id\"\r\n              @click=\"\r\n                goToRadiographDetail(\r\n                  index,\r\n                  radiograph.original_image,\r\n                  radiograph.gradcam_image\r\n                )\r\n              \"\r\n              class=\"card\"\r\n            >\r\n              <img\r\n                :src=\"radiograph.original_image\"\r\n                class=\"card-img-top\"\r\n                alt=\"Radiografia\"\r\n              />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title small-text\">\r\n                  Radiografia {{ index + 1 }}\r\n                </h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Messaggio di errore nel caso non ci siano radiografie -->\r\n          <div v-else>\r\n            <div\r\n              v-if=\"errorNoRadiographies\"\r\n              class=\"alert alert-danger mt-3 small-text\"\r\n            >\r\n              <p class=\"alert-text\">\r\n                L'utente {{ selectedPatientName }}\r\n                {{ selectedPatientSurname }} non ha radiografie.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Sezione per mostrare se non ci sono pazienti per il medico -->\r\n        <div\r\n          v-if=\"patients.length == 0 && role === 'doctor'\"\r\n          class=\"text-danger\"\r\n        >\r\n          <p>Non hai pazienti.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Messaggio per utenti senza permessi -->\r\n      <div v-else>\r\n        <p class=\"text-muted\">\r\n          Non hai i permessi per visualizzare le radiografie.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getPatientsFromDoctor,\r\n  loadRadiographiesForPatient,\r\n} from \"@/services/api-service\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      patients: [],\r\n      selectedPatientName: \"\",\r\n      selectedPatientSurname: \"\",\r\n      selectedPatientId: \"\",\r\n      role: \"\",\r\n      userRadiographs: [],\r\n      isLoading: true,\r\n      isLoadingRadiographs: false,\r\n      errorNoRadiographies: false,\r\n    };\r\n  },\r\n  created() {\r\n    this.loadData();\r\n  },\r\n  methods: {\r\n    async loadData() {\r\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n      this.role = userData.role;\r\n\r\n      if (this.role === \"doctor\") {\r\n        await this.loadDoctorData(userData);\r\n      } else if (this.role === \"patient\") {\r\n        await this.loadPatientData(userData);\r\n      }\r\n\r\n      this.isLoading = false;\r\n    },\r\n    async loadDoctorData(userData) {\r\n      this.patients = await getPatientsFromDoctor(userData.doctorID);\r\n\r\n      if (this.$route.query.patient_id) {\r\n        this.selectedPatientId = this.$route.query.patient_id;\r\n        this.selectedPatientName = localStorage.getItem(\"selectedPatientName\");\r\n        this.selectedPatientSurname = localStorage.getItem(\r\n          \"selectedPatientSurname\"\r\n        );\r\n        await this.loadRadiographies(this.selectedPatientId);\r\n        this.updateRoute();\r\n      }\r\n    },\r\n    async loadPatientData(userData) {\r\n      this.selectedPatientId = userData.uid;\r\n      this.selectedPatientName = localStorage.getItem(\"Name\");\r\n      this.selectedPatientSurname = localStorage.getItem(\"Surname\");\r\n      await this.loadRadiographies(this.selectedPatientId);\r\n    },\r\n    async loadRadiographies(patientId) {\r\n      this.isLoadingRadiographs = true;\r\n      this.userRadiographs = await loadRadiographiesForPatient(patientId);\r\n      this.errorNoRadiographies = this.userRadiographs.length === 0;\r\n      this.isLoadingRadiographs = false;\r\n    },\r\n    updateRoute() {\r\n      this.$router.push({\r\n        name: \"ViewRadiographs\",\r\n        query: { patient_id: this.selectedPatientId },\r\n      });\r\n    },\r\n    async onPatientChange() {\r\n      const patient = this.patients.find(\r\n        (p) => p.userId === this.selectedPatientId\r\n      );\r\n      if (patient) {\r\n        this.selectedPatientName = patient.name;\r\n        this.selectedPatientSurname = patient.family_name;\r\n      }\r\n      await this.loadRadiographies(this.selectedPatientId);\r\n      this.updateRoute();\r\n    },\r\n    changePatient() {\r\n      this.selectedPatientId = \"\";\r\n      this.selectedPatientName = \"\";\r\n      this.selectedPatientSurname = \"\";\r\n      this.userRadiographs = [];\r\n      this.errorNoRadiographies = false;\r\n      this.isLoadingRadiographs = false;\r\n      this.updateRoute();\r\n    },\r\n    goToRadiographDetail(index, originalImg, gradcamImg) {\r\n      localStorage.setItem(\"selected_original_img\", originalImg);\r\n      localStorage.setItem(\"selected_gradcam_img\", gradcamImg);\r\n      this.$router.push({\r\n        name: \"RadiographyDetail\",\r\n        query: {\r\n          patient_id: this.selectedPatientId,\r\n          index: index + 1,\r\n        },\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.welcome {\r\n  background: #ffffff; /* Sfondo bianco */\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center; /* Centra verticalmente */\r\n  justify-content: center; /* Centra orizzontalmente */\r\n}\r\n\r\n.container {\r\n  max-width: 80%; /* Modifica qui per utilizzare una percentuale */\r\n  padding: 5%; /* Usa percentuali per il padding */\r\n  border-radius: 15px;\r\n  background: #ffffff;\r\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\r\n  margin-top: 10%; /* Usa percentuali per il margine superiore */\r\n  height: auto;\r\n  text-align: center;\r\n  flex-grow: 1;\r\n}\r\n\r\nh1.view-radiographs {\r\n  font-size: 18px; /* Stessa dimensione del testo di \"Elenco Pazienti\" */\r\n  font-family: inherit; /* Assicura che usi lo stesso font ereditato dal contesto */\r\n  font-weight: normal; /* Mantenere il peso del font uguale */\r\n  margin-bottom: 20px; /* Margine inferiore uguale per allineamento */\r\n}\r\n.img-preview {\r\n  max-width: 100%;\r\n  max-height: 50vh;\r\n  margin-top: 15px;\r\n}\r\n\r\n.row {\r\n  display: flex; /* Usa Flexbox per le card */\r\n  flex-wrap: wrap; /* Permetti alle card di andare a capo se necessario */\r\n  margin-bottom: 20px; /* Margine inferiore per la separazione */\r\n  height: 10%;\r\n}\r\n\r\n.card {\r\n  flex: 1 1 45%; /* Permetti alle card di occupare il 45% della larghezza */\r\n  margin: 10px; /* Margine tra le card */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease-in-out;\r\n}\r\n\r\n.card:hover {\r\n  transform: scale(1.03); /* Leggero ingrandimento quando si passa sopra */\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Aggiunge un'ombra per maggiore enfasi */\r\n}\r\n\r\n/* Stili per la card della predizione */\r\n.card.prediction-card {\r\n  margin-top: 20px; /* Margine superiore per separarla dalle altre card */\r\n}\r\n\r\n.card-img-top {\r\n  border-radius: 0.5rem;\r\n  max-height: 50vh;\r\n  object-fit: cover; /* Mantieni le proporzioni dell'immagine */\r\n}\r\n\r\n.card-body {\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n}\r\n\r\n.patient-info-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 3vw;\r\n  width: 100%;\r\n}\r\n\r\n.change-text {\r\n  font-size: 14px;\r\n  color: black;\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n}\r\n\r\n.sidebar {\r\n  top: 0;\r\n  width: 250px;\r\n  height: 100vh;\r\n  padding: 20px;\r\n  background: linear-gradient(180deg, #212529, #343a40);\r\n  margin-right: 20px;\r\n}\r\n\r\n.sidebar .nav-link {\r\n  color: #cfd2d6;\r\n}\r\n\r\n.sidebar .nav-link:hover {\r\n  background-color: #495057;\r\n  border-radius: 5px;\r\n}\r\n\r\n.nav-link {\r\n  padding: 10px 15px;\r\n}\r\n\r\n@media (max-width: 767.98px) {\r\n  .navbar-brand {\r\n    font-size: 1.2rem; /* Ridotto per i dispositivi più piccoli */\r\n  }\r\n\r\n  .sidebar {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.select-container {\r\n  margin-top: 15px; /* Spazio sopra il menu a tendina */\r\n  margin-bottom: 10px; /* Spazio sotto il menu a tendina */\r\n}\r\n\r\n.form-select {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n  transition: border-color 0.2s;\r\n}\r\n\r\n.form-select:focus {\r\n  border-color: #007bff;\r\n  outline: none;\r\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n.custom-select {\r\n  max-width: 80%; /* Imposta la larghezza massima desiderata */\r\n  margin: 0 auto; /* Centra il menu a tendina */\r\n}\r\n\r\n.card {\r\n  flex: 0 0 29%; /* Imposta la larghezza al 30% per avere 3 card per riga */\r\n  margin: 0.8vw;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-img-top {\r\n  border-radius: 0.5rem;\r\n  max-height: 50vh; /* Limita l'altezza in percentuale */\r\n  object-fit: cover; /* Mantieni le proporzioni dell'immagine */\r\n}\r\n\r\n.row {\r\n  justify-content: flex-start; /* Assicura che le immagini siano allineate a sinistra */\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 8px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  width: 40%;\r\n  min-width: 150px;\r\n  font-size: 13px;\r\n  transition: background-color 0.3s ease;\r\n  text-align: center;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.small-text {\r\n  font-size: 13px;\r\n}\r\n\r\n.medium-text {\r\n  font-size: 14px;\r\n}\r\n\r\n/* Applica una riduzione globale della dimensione del testo per tutto il corpo della pagina */\r\nbody {\r\n  font-size: 13px; /* Ridotto la dimensione del testo per tutto il corpo */\r\n  line-height: 1.4; /* Aumentato l'interlinea per una lettura più facile */\r\n}\r\n\r\n.alert.alert-danger {\r\n  display: flex; /* Abilita Flexbox */\r\n  align-items: center; /* Centra il contenuto verticalmente */\r\n  justify-content: center; /* Centra il contenuto orizzontalmente */\r\n  padding: 8px 15px; /* Riduce l'altezza complessiva */\r\n  font-size: 14px; /* Riduce la dimensione del testo */\r\n  line-height: 1.2; /* Compatta l'interlinea */\r\n  margin-bottom: 10px; /* Margine inferiore */\r\n  border-radius: 5px; /* Bordo arrotondato */\r\n  text-align: center; /* Centra il testo se multilinea */\r\n  min-height: 50px; /* Imposta un'altezza minima per coerenza */\r\n  box-sizing: border-box; /* Include padding nei calcoli dell'altezza */\r\n}\r\n\r\n.alert-text {\r\n  margin: 0; /* Rimuove margini aggiuntivi del paragrafo */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}