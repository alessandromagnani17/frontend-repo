{"ast":null,"code":"import { uploadRadiograph, getPatientsFromDoctor } from \"../services/api-service\";\nexport default {\n  props: {\n    patientId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      file: null,\n      patients: []\n    };\n  },\n  async created() {\n    const doctorId = this.$store.state.user.id;\n    this.patients = await getPatientsFromDoctor(doctorId);\n  },\n  methods: {\n    onFileChange(event) {\n      this.file = event.target.files[0];\n    },\n    async upload() {\n      if (!this.file) {\n        alert(\"Per favore seleziona un file.\");\n        return;\n      }\n      try {\n        // Corretto il passaggio dei parametri\n        const response = await uploadRadiograph(this.patientId, this.file);\n        this.$emit(\"uploadSuccess\", response.fileUrl); // Modificato per emettere l'URL del file\n      } catch (error) {\n        // Stampa dettagli significativi sugli errori\n        console.error(\"Dettagli errore:\", error);\n        alert(\"Errore nel caricamento della radiografia: \" + error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["uploadRadiograph","getPatientsFromDoctor","props","patientId","type","String","required","data","file","patients","created","doctorId","$store","state","user","id","methods","onFileChange","event","target","files","upload","alert","response","$emit","fileUrl","error","console","message"],"sources":["C:\\Users\\Utente\\Desktop\\DIO\\osteoarthritis-project\\frontend\\src\\components\\UploadRadiographs.vue"],"sourcesContent":["<template>\r\n  <div class=\"upload-container\">\r\n    <h2>Carica Radiografia</h2>\r\n    <input type=\"file\" @change=\"onFileChange\" class=\"file-input\" />\r\n    <button @click=\"upload\" class=\"btn-upload\">Carica</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  uploadRadiograph,\r\n  getPatientsFromDoctor,\r\n} from \"../services/api-service\";\r\n\r\nexport default {\r\n  props: {\r\n    patientId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      file: null,\r\n      patients: [],\r\n    };\r\n  },\r\n  async created() {\r\n    const doctorId = this.$store.state.user.id;\r\n    this.patients = await getPatientsFromDoctor(doctorId);\r\n  },\r\n  methods: {\r\n    onFileChange(event) {\r\n      this.file = event.target.files[0];\r\n    },\r\n    async upload() {\r\n      if (!this.file) {\r\n        alert(\"Per favore seleziona un file.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Corretto il passaggio dei parametri\r\n        const response = await uploadRadiograph(this.patientId, this.file);\r\n        this.$emit(\"uploadSuccess\", response.fileUrl); // Modificato per emettere l'URL del file\r\n      } catch (error) {\r\n        // Stampa dettagli significativi sugli errori\r\n        console.error(\"Dettagli errore:\", error);\r\n        alert(\"Errore nel caricamento della radiografia: \" + error.message);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.upload-container {\r\n  background: #ffffff;\r\n  padding: 20px;\r\n  border-radius: 15px;\r\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\r\n  margin-top: 20px;\r\n  width: 100%;\r\n}\r\n\r\nh2 {\r\n  font-size: 18px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.file-input {\r\n  display: block;\r\n  margin-bottom: 10px;\r\n  padding: 8px; /* Ridotto padding */\r\n  font-size: 12px; /* Ridotta dimensione del font */\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n}\r\n\r\n.btn-upload {\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 8px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.btn-upload:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":"AASA,SACEA,gBAAgB,EAChBC,qBAAqB,QAChB,yBAAyB;AAEhC,eAAe;EACbC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,EAAE;IAC1C,IAAI,CAACN,QAAO,GAAI,MAAMR,qBAAqB,CAACU,QAAQ,CAAC;EACvD,CAAC;EACDK,OAAO,EAAE;IACPC,YAAYA,CAACC,KAAK,EAAE;MAClB,IAAI,CAACV,IAAG,GAAIU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IACD,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI,CAAC,IAAI,CAACb,IAAI,EAAE;QACdc,KAAK,CAAC,+BAA+B,CAAC;QACtC;MACF;MAEA,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMvB,gBAAgB,CAAC,IAAI,CAACG,SAAS,EAAE,IAAI,CAACK,IAAI,CAAC;QAClE,IAAI,CAACgB,KAAK,CAAC,eAAe,EAAED,QAAQ,CAACE,OAAO,CAAC,EAAE;MACjD,EAAE,OAAOC,KAAK,EAAE;QACd;QACAC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;QACxCJ,KAAK,CAAC,4CAA2C,GAAII,KAAK,CAACE,OAAO,CAAC;MACrE;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}