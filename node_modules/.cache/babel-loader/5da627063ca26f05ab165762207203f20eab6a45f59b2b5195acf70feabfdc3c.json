{"ast":null,"code":"export default {\n  name: \"ProfilePage\",\n  data() {\n    return {\n      userData: {},\n      editingField: {},\n      editableValues: {},\n      displayFields: {\n        name: {\n          label: \"Nome\"\n        },\n        family_name: {\n          label: \"Cognome\"\n        },\n        username: {\n          label: \"Username\"\n        },\n        email: {\n          label: \"Email\"\n        },\n        birthdate: {\n          label: \"Data di Nascita\"\n        },\n        phone_number: {\n          label: \"Telefono\"\n        },\n        address: {\n          label: \"Indirizzo\"\n        },\n        cap_code: {\n          label: \"CAP\"\n        },\n        gender: {\n          label: \"Genere\"\n        },\n        tax_code: {\n          label: \"Codice Fiscale\"\n        }\n      }\n    };\n  },\n  mounted() {\n    this.loadUserData();\n  },\n  methods: {\n    loadUserData() {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const userId = userData?.userId;\n      if (!userId) {\n        console.error(\"ID utente non definito\");\n        return;\n      }\n      fetch(`http://localhost:5000/get_user/${userId}`).then(response => response.ok ? response.json() : Promise.reject(\"Errore nel recupero dei dati utente\")).then(data => {\n        this.userData = data;\n        this.resetEditableValues();\n      }).catch(error => {\n        console.error(\"Errore:\", error);\n        alert(\"Si è verificato un errore durante il caricamento dei dati utente.\");\n      });\n    },\n    resetEditableValues() {\n      Object.keys(this.displayFields).forEach(key => {\n        this.editableValues[key] = this.userData[key];\n        this.editingField[key] = false;\n      });\n    },\n    startEditing(field) {\n      this.editingField[field] = true;\n    },\n    saveField(field) {\n      const newValue = this.editableValues[field];\n      if (newValue !== this.userData[field]) {\n        this.updateUserData(field, newValue);\n      }\n      this.editingField[field] = false;\n    },\n    updateUserData(field, value) {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const userId = userData?.userId;\n      if (!userId) {\n        alert(\"Si è verificato un errore, l'ID utente non è disponibile.\");\n        return;\n      }\n      fetch(\"http://localhost:5000/update_user\", {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId,\n          [field]: value\n        })\n      }).then(response => {\n        if (!response.ok) throw new Error(\"Errore nel salvataggio dei dati\");\n        alert(\"Informazione aggiornata con successo!\");\n        this.loadUserData();\n      }).catch(error => {\n        console.error(\"Errore:\", error);\n        alert(\"Si è verificato un errore durante l'aggiornamento.\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","userData","editingField","editableValues","displayFields","label","family_name","username","email","birthdate","phone_number","address","cap_code","gender","tax_code","mounted","loadUserData","methods","JSON","parse","localStorage","getItem","userId","console","error","fetch","then","response","ok","json","Promise","reject","resetEditableValues","catch","alert","Object","keys","forEach","key","startEditing","field","saveField","newValue","updateUserData","value","method","headers","body","stringify","Error"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\views\\ProfilePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile\">\r\n    <div class=\"container mt-5\">\r\n      <h1>Benvenuto nel tuo Profilo!</h1>\r\n      <div class=\"user-info\">\r\n        <div v-for=\"(value, key) in displayFields\" :key=\"key\" class=\"user-item\">\r\n          <p>\r\n            <strong>{{ value.label }}:</strong>\r\n            <span v-if=\"!editingField[key]\">{{ userData[key] }}</span>\r\n            <input\r\n              v-else\r\n              type=\"text\"\r\n              v-model=\"editableValues[key]\"\r\n              class=\"edit-input\"\r\n            />\r\n            <button\r\n              v-if=\"!editingField[key]\"\r\n              class=\"btn-edit\"\r\n              @click=\"startEditing(key)\"\r\n            >\r\n              <img src=\"@/assets/modify.svg\" alt=\"Modifica\" class=\"edit-icon\" />\r\n            </button>\r\n            <button v-else class=\"btn-save\" @click=\"saveField(key)\">\r\n              Salva\r\n            </button>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ProfilePage\",\r\n  data() {\r\n    return {\r\n      userData: {},\r\n      editingField: {},\r\n      editableValues: {},\r\n      displayFields: {\r\n        name: { label: \"Nome\" },\r\n        family_name: { label: \"Cognome\" },\r\n        username: { label: \"Username\" },\r\n        email: { label: \"Email\" },\r\n        birthdate: { label: \"Data di Nascita\" },\r\n        phone_number: { label: \"Telefono\" },\r\n        address: { label: \"Indirizzo\" },\r\n        cap_code: { label: \"CAP\" },\r\n        gender: { label: \"Genere\" },\r\n        tax_code: { label: \"Codice Fiscale\" },\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    this.loadUserData();\r\n  },\r\n  methods: {\r\n    loadUserData() {\r\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n      const userId = userData?.userId;\r\n      if (!userId) {\r\n        console.error(\"ID utente non definito\");\r\n        return;\r\n      }\r\n\r\n      fetch(`http://localhost:5000/get_user/${userId}`)\r\n        .then((response) =>\r\n          response.ok\r\n            ? response.json()\r\n            : Promise.reject(\"Errore nel recupero dei dati utente\")\r\n        )\r\n        .then((data) => {\r\n          this.userData = data;\r\n          this.resetEditableValues();\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Errore:\", error);\r\n          alert(\r\n            \"Si è verificato un errore durante il caricamento dei dati utente.\"\r\n          );\r\n        });\r\n    },\r\n    resetEditableValues() {\r\n      Object.keys(this.displayFields).forEach((key) => {\r\n        this.editableValues[key] = this.userData[key];\r\n        this.editingField[key] = false;\r\n      });\r\n    },\r\n    startEditing(field) {\r\n      this.editingField[field] = true;\r\n    },\r\n    saveField(field) {\r\n      const newValue = this.editableValues[field];\r\n      if (newValue !== this.userData[field]) {\r\n        this.updateUserData(field, newValue);\r\n      }\r\n      this.editingField[field] = false;\r\n    },\r\n    updateUserData(field, value) {\r\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n      const userId = userData?.userId;\r\n      if (!userId) {\r\n        alert(\"Si è verificato un errore, l'ID utente non è disponibile.\");\r\n        return;\r\n      }\r\n\r\n      fetch(\"http://localhost:5000/update_user\", {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ userId, [field]: value }),\r\n      })\r\n        .then((response) => {\r\n          if (!response.ok) throw new Error(\"Errore nel salvataggio dei dati\");\r\n          alert(\"Informazione aggiornata con successo!\");\r\n          this.loadUserData();\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Errore:\", error);\r\n          alert(\"Si è verificato un errore durante l'aggiornamento.\");\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 600px;\r\n  padding: 40px;\r\n  border-radius: 15px;\r\n  background: #ffffff;\r\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\r\n  margin-top: 100px;\r\n  height: auto;\r\n  text-align: left;\r\n}\r\n\r\nh1 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.user-info {\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.user-item {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.user-item strong {\r\n  margin-right: 5px;\r\n}\r\n\r\n.btn-edit {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-left: 5px;\r\n}\r\n\r\n.edit-icon {\r\n  width: 30px;\r\n  height: 30px;\r\n  margin-left: 5px;\r\n  vertical-align: middle;\r\n}\r\n\r\n.edit-input {\r\n  padding: 5px;\r\n  font-size: 14px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.btn-save {\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 0.3rem;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  min-width: 80px;\r\n}\r\n\r\n.btn-save:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}