{"ast":null,"code":"import { uploadRadiograph, getPatientsFromDoctor } from \"../services/api-service\";\nexport default {\n  props: {\n    patientId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      file: null,\n      patients: []\n    };\n  },\n  async created() {\n    const doctorId = this.$store.state.user.id;\n    this.patients = await getPatientsFromDoctor(doctorId);\n  },\n  methods: {\n    onFileChange(event) {\n      this.file = event.target.files[0];\n    },\n    async upload() {\n      if (!this.file) {\n        alert(\"Per favore seleziona un file.\");\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"file\", this.file);\n      formData.append(\"patientId\", this.patientId); // Passiamo anche l'ID del paziente\n\n      try {\n        // Usa uploadRadiograph per inviare il file\n        const response = await uploadRadiograph(formData);\n        this.$emit(\"uploadSuccess\", response.data);\n      } catch (error) {\n        console.error(\"Dettagli errore:\", error.response ? error.response.data : error.message);\n        alert(\"Errore nel caricamento della radiografia: \" + (error.response ? error.response.data.error : error.message));\n      }\n    }\n  }\n};","map":{"version":3,"names":["uploadRadiograph","getPatientsFromDoctor","props","patientId","type","String","required","data","file","patients","created","doctorId","$store","state","user","id","methods","onFileChange","event","target","files","upload","alert","formData","FormData","append","response","$emit","error","console","message"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/UploadRadiographs.vue"],"sourcesContent":["<template>\n  <div class=\"upload-container\">\n    <h2>Carica Radiografia</h2>\n    <input type=\"file\" @change=\"onFileChange\" class=\"file-input\" />\n    <button @click=\"upload\" class=\"btn-upload\">Carica</button>\n  </div>\n</template>\n\n<script>\nimport {\n  uploadRadiograph,\n  getPatientsFromDoctor,\n} from \"../services/api-service\";\n\nexport default {\n  props: {\n    patientId: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      file: null,\n      patients: [],\n    };\n  },\n  async created() {\n    const doctorId = this.$store.state.user.id;\n    this.patients = await getPatientsFromDoctor(doctorId);\n  },\n  methods: {\n    onFileChange(event) {\n      this.file = event.target.files[0];\n    },\n    async upload() {\n      if (!this.file) {\n        alert(\"Per favore seleziona un file.\");\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append(\"file\", this.file);\n      formData.append(\"patientId\", this.patientId); // Passiamo anche l'ID del paziente\n\n      try {\n        // Usa uploadRadiograph per inviare il file\n        const response = await uploadRadiograph(formData);\n        this.$emit(\"uploadSuccess\", response.data);\n      } catch (error) {\n        console.error(\n          \"Dettagli errore:\",\n          error.response ? error.response.data : error.message\n        );\n        alert(\n          \"Errore nel caricamento della radiografia: \" +\n            (error.response ? error.response.data.error : error.message)\n        );\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.upload-container {\n  background: #ffffff;\n  padding: 20px;\n  border-radius: 15px;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 20px;\n  width: 100%;\n}\n\nh2 {\n  font-size: 18px;\n  margin-bottom: 15px;\n}\n\n.file-input {\n  display: block;\n  margin-bottom: 10px;\n  padding: 8px; /* Ridotto padding */\n  font-size: 12px; /* Ridotta dimensione del font */\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  width: 100%;\n}\n\n.btn-upload {\n  background-color: #007bff;\n  color: white;\n  padding: 8px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 100%;\n  font-size: 14px;\n  transition: background-color 0.3s ease;\n}\n\n.btn-upload:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":"AASA,SACEA,gBAAgB,EAChBC,qBAAqB,QAChB,yBAAyB;AAEhC,eAAe;EACbC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,EAAE;IAC1C,IAAI,CAACN,QAAO,GAAI,MAAMR,qBAAqB,CAACU,QAAQ,CAAC;EACvD,CAAC;EACDK,OAAO,EAAE;IACPC,YAAYA,CAACC,KAAK,EAAE;MAClB,IAAI,CAACV,IAAG,GAAIU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IACD,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI,CAAC,IAAI,CAACb,IAAI,EAAE;QACdc,KAAK,CAAC,+BAA+B,CAAC;QACtC;MACF;MAEA,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACjB,IAAI,CAAC;MAClCe,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAE,IAAI,CAACtB,SAAS,CAAC,EAAE;;MAE9C,IAAI;QACF;QACA,MAAMuB,QAAO,GAAI,MAAM1B,gBAAgB,CAACuB,QAAQ,CAAC;QACjD,IAAI,CAACI,KAAK,CAAC,eAAe,EAAED,QAAQ,CAACnB,IAAI,CAAC;MAC5C,EAAE,OAAOqB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CACX,kBAAkB,EAClBA,KAAK,CAACF,QAAO,GAAIE,KAAK,CAACF,QAAQ,CAACnB,IAAG,GAAIqB,KAAK,CAACE,OAC/C,CAAC;QACDR,KAAK,CACH,4CAA2C,IACxCM,KAAK,CAACF,QAAO,GAAIE,KAAK,CAACF,QAAQ,CAACnB,IAAI,CAACqB,KAAI,GAAIA,KAAK,CAACE,OAAO,CAC/D,CAAC;MACH;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}