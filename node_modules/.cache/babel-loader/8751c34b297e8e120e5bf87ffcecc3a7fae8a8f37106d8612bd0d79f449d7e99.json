{"ast":null,"code":"// Importa Axios\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      radiographs: []\n    };\n  },\n  created() {\n    const userDataString = localStorage.getItem(\"userData\");\n    if (userDataString) {\n      const userData = JSON.parse(userDataString);\n      const userUID = userData.uid;\n      console.log(\"UID dell'utente:\", userUID);\n\n      // Chiama la funzione per recuperare le radiografie\n      this.fetchRadiographs(userUID);\n    } else {\n      console.log(\"Nessun dato utente trovato in localStorage.\");\n    }\n  },\n  methods: {\n    async fetchRadiographs(userUID) {\n      try {\n        const response = await axios.get(`/api/radiographs/${userUID}`);\n        this.radiographs = response.data; // Supponendo che il backend restituisca un array di radiografie\n        console.log(\"Radiografie recuperate:\", this.radiographs);\n      } catch (error) {\n        console.error(\"Errore nel recupero delle radiografie:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","radiographs","created","userDataString","localStorage","getItem","userData","JSON","parse","userUID","uid","console","log","fetchRadiographs","methods","response","get","error"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\views\\ViewRadiographs.vue"],"sourcesContent":["<template>\n  <div class=\"radiographs-view\">\n    <h2>Le Tue Radiografie</h2>\n    <div class=\"cards-container\">\n      <div\n        v-for=\"(radiograph, index) in radiographs\"\n        :key=\"index\"\n        class=\"radiograph-card\"\n      >\n        <img :src=\"radiograph.original_image\" alt=\"Immagine Originale\" />\n        <img :src=\"radiograph.gradcam_image\" alt=\"Immagine Grad-CAM\" />\n        <p>{{ radiograph.prediction }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// Importa Axios\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      radiographs: [],\n    };\n  },\n  created() {\n    const userDataString = localStorage.getItem(\"userData\");\n    if (userDataString) {\n      const userData = JSON.parse(userDataString);\n      const userUID = userData.uid;\n      console.log(\"UID dell'utente:\", userUID);\n\n      // Chiama la funzione per recuperare le radiografie\n      this.fetchRadiographs(userUID);\n    } else {\n      console.log(\"Nessun dato utente trovato in localStorage.\");\n    }\n  },\n  methods: {\n    async fetchRadiographs(userUID) {\n      try {\n        const response = await axios.get(`/api/radiographs/${userUID}`);\n        this.radiographs = response.data; // Supponendo che il backend restituisca un array di radiografie\n        console.log(\"Radiografie recuperate:\", this.radiographs);\n      } catch (error) {\n        console.error(\"Errore nel recupero delle radiografie:\", error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.view-radiographs {\n  background: #ffffff; /* Sfondo bianco, simile alla pagina di login */\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0); /* Rimuove ombre esterne */\n}\n\n.container {\n  max-width: 600px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1); /* Simile alla shadow del login */\n  margin-top: 100px;\n  height: auto;\n  text-align: center; /* Centra il testo */\n}\n\nh2 {\n  font-size: 18px; /* Uniforma il font size al login */\n  margin-bottom: 30px;\n}\n\n.cards-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n}\n\n.radiograph-card {\n  width: 300px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.radiograph-card img {\n  width: 100%;\n  border-radius: 5px;\n  margin-bottom: 10px;\n}\n</style>\n"],"mappings":"AAkBA;AACA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,cAAa,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,IAAIF,cAAc,EAAE;MAClB,MAAMG,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACL,cAAc,CAAC;MAC3C,MAAMM,OAAM,GAAIH,QAAQ,CAACI,GAAG;MAC5BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,OAAO,CAAC;;MAExC;MACA,IAAI,CAACI,gBAAgB,CAACJ,OAAO,CAAC;IAChC,OAAO;MACLE,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;IAC5D;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMD,gBAAgBA,CAACJ,OAAO,EAAE;MAC9B,IAAI;QACF,MAAMM,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CAAC,oBAAoBP,OAAO,EAAE,CAAC;QAC/D,IAAI,CAACR,WAAU,GAAIc,QAAQ,CAACf,IAAI,EAAE;QAClCW,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAACX,WAAW,CAAC;MAC1D,EAAE,OAAOgB,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}