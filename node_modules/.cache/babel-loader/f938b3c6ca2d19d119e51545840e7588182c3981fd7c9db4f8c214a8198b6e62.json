{"ast":null,"code":"import { getPatientsFromDoctor, loadRadiographiesForPatient } from \"@/services/api-service\";\nexport default {\n  data() {\n    return {\n      patients: [],\n      selectedPatientName: \"\",\n      selectedPatientSurname: \"\",\n      selectedPatientId: \"\",\n      role: \"\",\n      userRadiographs: [],\n      isLoading: true,\n      isLoadingRadiographs: false,\n      errorNoRadiographies: false\n    };\n  },\n  created() {\n    this.loadData();\n  },\n  methods: {\n    async loadData() {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      this.role = userData.role;\n      if (this.role === \"doctor\") {\n        await this.loadDoctorData(userData);\n      } else if (this.role === \"patient\") {\n        await this.loadPatientData(userData);\n      }\n      this.isLoading = false;\n    },\n    async loadDoctorData(userData) {\n      this.patients = await getPatientsFromDoctor(userData.doctorID);\n      if (this.$route.query.patient_id) {\n        this.selectedPatientId = this.$route.query.patient_id;\n        this.selectedPatientName = localStorage.getItem(\"selectedPatientName\");\n        this.selectedPatientSurname = localStorage.getItem(\"selectedPatientSurname\");\n        await this.loadRadiographies(this.selectedPatientId);\n        this.updateRoute();\n      }\n    },\n    async loadPatientData(userData) {\n      this.selectedPatientId = userData.uid;\n      this.selectedPatientName = localStorage.getItem(\"Name\");\n      this.selectedPatientSurname = localStorage.getItem(\"Surname\");\n      await this.loadRadiographies(this.selectedPatientId);\n    },\n    async loadRadiographies(patientId) {\n      this.isLoadingRadiographs = true;\n      this.userRadiographs = await loadRadiographiesForPatient(patientId);\n      this.errorNoRadiographies = this.userRadiographs.length === 0;\n      this.isLoadingRadiographs = false;\n    },\n    updateRoute() {\n      this.$router.push({\n        name: \"ViewRadiographs\",\n        query: {\n          patient_id: this.selectedPatientId\n        }\n      });\n    },\n    async onPatientChange() {\n      const patient = this.patients.find(p => p.userId === this.selectedPatientId);\n      if (patient) {\n        this.selectedPatientName = patient.name;\n        this.selectedPatientSurname = patient.family_name;\n      }\n      await this.loadRadiographies(this.selectedPatientId);\n      this.updateRoute();\n    },\n    changePatient() {\n      this.selectedPatientId = \"\";\n      this.selectedPatientName = \"\";\n      this.selectedPatientSurname = \"\";\n      this.userRadiographs = [];\n      this.errorNoRadiographies = false;\n      this.isLoadingRadiographs = false;\n      this.updateRoute();\n    },\n    goToRadiographDetail(index, originalImg, gradcamImg) {\n      localStorage.setItem(\"selected_original_img\", originalImg);\n      localStorage.setItem(\"selected_gradcam_img\", gradcamImg);\n      this.$router.push({\n        name: \"RadiographyDetail\",\n        query: {\n          patient_id: this.selectedPatientId,\n          index: index + 1\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["getPatientsFromDoctor","loadRadiographiesForPatient","data","patients","selectedPatientName","selectedPatientSurname","selectedPatientId","role","userRadiographs","isLoading","isLoadingRadiographs","errorNoRadiographies","created","loadData","methods","userData","JSON","parse","localStorage","getItem","loadDoctorData","loadPatientData","doctorID","$route","query","patient_id","loadRadiographies","updateRoute","uid","patientId","length","$router","push","name","onPatientChange","patient","find","p","userId","family_name","changePatient","goToRadiographDetail","index","originalImg","gradcamImg","setItem"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\views\\ViewRadiographs.vue"],"sourcesContent":["<template>\n  <div class=\"welcome\">\n    <div class=\"container mt-5\">\n      <h1 class=\"view-radiographs\">Visualizza radiografie</h1>\n\n      <!-- Messaggio di caricamento -->\n      <div v-if=\"isLoading\" class=\"alert alert-info small-text\">\n        Caricamento...\n      </div>\n\n      <!-- Contenuto per il ruolo di 'doctor' o 'patient' -->\n      <div v-else-if=\"role === 'doctor' || role === 'patient'\">\n        <!-- Sezione per il selettore di pazienti per il medico -->\n        <div v-if=\"role === 'doctor'\" class=\"select-container mb-4\">\n          <select\n            v-if=\"patients.length > 0 && !selectedPatientId\"\n            v-model=\"selectedPatientId\"\n            @change=\"onPatientChange\"\n            class=\"form-select custom-select small-text\"\n          >\n            <option value=\"\" disabled selected>Seleziona un paziente</option>\n            <option\n              v-for=\"patient in patients\"\n              :key=\"patient.userId\"\n              :value=\"patient.userId\"\n            >\n              {{ patient.name }} {{ patient.family_name }} (ID:\n              {{ patient.userId }})\n            </option>\n          </select>\n        </div>\n\n        <!-- Sezione per il paziente selezionato -->\n        <div v-if=\"selectedPatientId\" class=\"mt-4\">\n          <div\n            v-if=\"role === 'doctor' && selectedPatientId\"\n            class=\"patient-info-container small-text\"\n          >\n            <span>\n              Utente selezionato:\n              <strong>\n                {{ selectedPatientName }} {{ selectedPatientSurname }} <br />\n              </strong>\n              (ID: {{ selectedPatientId }})\n            </span>\n            <span class=\"change-text\" @click=\"changePatient\">Cambia</span>\n          </div>\n          <div v-else class=\"medium-text\">\n            <strong class=\"medium-text\">\n              {{ selectedPatientName }} {{ selectedPatientSurname }}:\n            </strong>\n          </div>\n\n          <!-- Messaggio di x delle radiografie -->\n          <div\n            v-if=\"isLoadingRadiographs\"\n            class=\"alert alert-info mt-3 small-text\"\n          >\n            Caricamento delle radiografie...\n          </div>\n\n          <!-- Sezione per visualizzare le radiografie -->\n          <div\n            class=\"row 2\"\n            v-if=\"userRadiographs.length > 0 && selectedPatientId\"\n          >\n            <div\n              v-for=\"(radiograph, index) in userRadiographs\"\n              :key=\"radiograph.radiography_id\"\n              @click=\"\n                goToRadiographDetail(\n                  index,\n                  radiograph.original_image,\n                  radiograph.gradcam_image\n                )\n              \"\n              class=\"card\"\n            >\n              <img\n                :src=\"radiograph.original_image\"\n                class=\"card-img-top\"\n                alt=\"Radiografia\"\n              />\n              <div class=\"card-body\">\n                <h5 class=\"card-title small-text\">\n                  Radiografia {{ index + 1 }}\n                </h5>\n              </div>\n            </div>\n          </div>\n\n          <!-- Messaggio di errore nel caso non ci siano radiografie -->\n          <div v-else>\n            <div\n              v-if=\"errorNoRadiographies\"\n              class=\"alert alert-danger mt-3 small-text\"\n            >\n              <p class=\"alert-text\">\n                L'utente {{ selectedPatientName }}\n                {{ selectedPatientSurname }} non ha radiografie.\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <!-- Sezione per mostrare se non ci sono pazienti per il medico -->\n        <div\n          v-if=\"patients.length == 0 && role === 'doctor'\"\n          class=\"text-danger\"\n        >\n          <p>Non hai pazienti.</p>\n        </div>\n      </div>\n\n      <!-- Messaggio per utenti senza permessi -->\n      <div v-else>\n        <p class=\"text-muted\">\n          Non hai i permessi per visualizzare le radiografie.\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  getPatientsFromDoctor,\n  loadRadiographiesForPatient,\n} from \"@/services/api-service\";\n\nexport default {\n  data() {\n    return {\n      patients: [],\n      selectedPatientName: \"\",\n      selectedPatientSurname: \"\",\n      selectedPatientId: \"\",\n      role: \"\",\n      userRadiographs: [],\n      isLoading: true,\n      isLoadingRadiographs: false,\n      errorNoRadiographies: false,\n    };\n  },\n  created() {\n    this.loadData();\n  },\n  methods: {\n    async loadData() {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      this.role = userData.role;\n\n      if (this.role === \"doctor\") {\n        await this.loadDoctorData(userData);\n      } else if (this.role === \"patient\") {\n        await this.loadPatientData(userData);\n      }\n\n      this.isLoading = false;\n    },\n    async loadDoctorData(userData) {\n      this.patients = await getPatientsFromDoctor(userData.doctorID);\n\n      if (this.$route.query.patient_id) {\n        this.selectedPatientId = this.$route.query.patient_id;\n        this.selectedPatientName = localStorage.getItem(\"selectedPatientName\");\n        this.selectedPatientSurname = localStorage.getItem(\n          \"selectedPatientSurname\"\n        );\n        await this.loadRadiographies(this.selectedPatientId);\n        this.updateRoute();\n      }\n    },\n    async loadPatientData(userData) {\n      this.selectedPatientId = userData.uid;\n      this.selectedPatientName = localStorage.getItem(\"Name\");\n      this.selectedPatientSurname = localStorage.getItem(\"Surname\");\n      await this.loadRadiographies(this.selectedPatientId);\n    },\n    async loadRadiographies(patientId) {\n      this.isLoadingRadiographs = true;\n      this.userRadiographs = await loadRadiographiesForPatient(patientId);\n      this.errorNoRadiographies = this.userRadiographs.length === 0;\n      this.isLoadingRadiographs = false;\n    },\n    updateRoute() {\n      this.$router.push({\n        name: \"ViewRadiographs\",\n        query: { patient_id: this.selectedPatientId },\n      });\n    },\n    async onPatientChange() {\n      const patient = this.patients.find(\n        (p) => p.userId === this.selectedPatientId\n      );\n      if (patient) {\n        this.selectedPatientName = patient.name;\n        this.selectedPatientSurname = patient.family_name;\n      }\n      await this.loadRadiographies(this.selectedPatientId);\n      this.updateRoute();\n    },\n    changePatient() {\n      this.selectedPatientId = \"\";\n      this.selectedPatientName = \"\";\n      this.selectedPatientSurname = \"\";\n      this.userRadiographs = [];\n      this.errorNoRadiographies = false;\n      this.isLoadingRadiographs = false;\n      this.updateRoute();\n    },\n    goToRadiographDetail(index, originalImg, gradcamImg) {\n      localStorage.setItem(\"selected_original_img\", originalImg);\n      localStorage.setItem(\"selected_gradcam_img\", gradcamImg);\n      this.$router.push({\n        name: \"RadiographyDetail\",\n        query: {\n          patient_id: this.selectedPatientId,\n          index: index + 1,\n        },\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.welcome {\n  background: #ffffff; /* Sfondo bianco */\n  min-height: 100vh;\n  display: flex;\n  align-items: center; /* Centra verticalmente */\n  justify-content: center; /* Centra orizzontalmente */\n}\n\n.container {\n  max-width: 80%; /* Modifica qui per utilizzare una percentuale */\n  padding: 5%; /* Usa percentuali per il padding */\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 10%; /* Usa percentuali per il margine superiore */\n  height: auto;\n  text-align: center;\n  flex-grow: 1;\n}\n\nh1.view-radiographs {\n  font-size: 18px; /* Stessa dimensione del testo di \"Elenco Pazienti\" */\n  font-family: inherit; /* Assicura che usi lo stesso font ereditato dal contesto */\n  font-weight: normal; /* Mantenere il peso del font uguale */\n  margin-bottom: 20px; /* Margine inferiore uguale per allineamento */\n}\n.img-preview {\n  max-width: 100%;\n  max-height: 50vh;\n  margin-top: 15px;\n}\n\n.row {\n  display: flex; /* Usa Flexbox per le card */\n  flex-wrap: wrap; /* Permetti alle card di andare a capo se necessario */\n  margin-bottom: 20px; /* Margine inferiore per la separazione */\n  height: 10%;\n}\n\n.card {\n  flex: 1 1 45%; /* Permetti alle card di occupare il 45% della larghezza */\n  margin: 10px; /* Margine tra le card */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  transition: transform 0.2s ease-in-out;\n}\n\n.card:hover {\n  transform: scale(1.03); /* Leggero ingrandimento quando si passa sopra */\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Aggiunge un'ombra per maggiore enfasi */\n}\n\n/* Stili per la card della predizione */\n.card.prediction-card {\n  margin-top: 20px; /* Margine superiore per separarla dalle altre card */\n}\n\n.card-img-top {\n  border-radius: 0.5rem;\n  max-height: 50vh;\n  object-fit: cover; /* Mantieni le proporzioni dell'immagine */\n}\n\n.card-body {\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n}\n\n.patient-info-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 3vw;\n  width: 100%;\n}\n\n.change-text {\n  font-size: 14px;\n  color: black;\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n.sidebar {\n  top: 0;\n  width: 250px;\n  height: 100vh;\n  padding: 20px;\n  background: linear-gradient(180deg, #212529, #343a40);\n  margin-right: 20px;\n}\n\n.sidebar .nav-link {\n  color: #cfd2d6;\n}\n\n.sidebar .nav-link:hover {\n  background-color: #495057;\n  border-radius: 5px;\n}\n\n.nav-link {\n  padding: 10px 15px;\n}\n\n@media (max-width: 767.98px) {\n  .navbar-brand {\n    font-size: 1.2rem; /* Ridotto per i dispositivi più piccoli */\n  }\n\n  .sidebar {\n    display: none;\n  }\n}\n\n.select-container {\n  margin-top: 15px; /* Spazio sopra il menu a tendina */\n  margin-bottom: 10px; /* Spazio sotto il menu a tendina */\n}\n\n.form-select {\n  display: block;\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ced4da;\n  border-radius: 5px;\n  background-color: #fff;\n  transition: border-color 0.2s;\n}\n\n.form-select:focus {\n  border-color: #007bff;\n  outline: none;\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\n}\n\n.custom-select {\n  max-width: 80%; /* Imposta la larghezza massima desiderata */\n  margin: 0 auto; /* Centra il menu a tendina */\n}\n\n.card {\n  flex: 0 0 29%; /* Imposta la larghezza al 30% per avere 3 card per riga */\n  margin: 0.8vw;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.card-img-top {\n  border-radius: 0.5rem;\n  max-height: 50vh; /* Limita l'altezza in percentuale */\n  object-fit: cover; /* Mantieni le proporzioni dell'immagine */\n}\n\n.row {\n  justify-content: flex-start; /* Assicura che le immagini siano allineate a sinistra */\n}\n\n.btn-primary {\n  background-color: #007bff;\n  color: white;\n  padding: 8px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 40%;\n  min-width: 150px;\n  font-size: 13px;\n  transition: background-color 0.3s ease;\n  text-align: center;\n}\n\n.btn-primary:hover {\n  background-color: #0056b3;\n}\n\n.small-text {\n  font-size: 13px;\n}\n\n.medium-text {\n  font-size: 14px;\n}\n\n/* Applica una riduzione globale della dimensione del testo per tutto il corpo della pagina */\nbody {\n  font-size: 13px; /* Ridotto la dimensione del testo per tutto il corpo */\n  line-height: 1.4; /* Aumentato l'interlinea per una lettura più facile */\n}\n\n.alert.alert-danger {\n  display: flex; /* Abilita Flexbox */\n  align-items: center; /* Centra il contenuto verticalmente */\n  justify-content: center; /* Centra il contenuto orizzontalmente */\n  padding: 8px 15px; /* Riduce l'altezza complessiva */\n  font-size: 14px; /* Riduce la dimensione del testo */\n  line-height: 1.2; /* Compatta l'interlinea */\n  margin-bottom: 10px; /* Margine inferiore */\n  border-radius: 5px; /* Bordo arrotondato */\n  text-align: center; /* Centra il testo se multilinea */\n  min-height: 50px; /* Imposta un'altezza minima per coerenza */\n  box-sizing: border-box; /* Include padding nei calcoli dell'altezza */\n}\n\n.alert-text {\n  margin: 0; /* Rimuove margini aggiuntivi del paragrafo */\n}\n</style>\n"],"mappings":"AA6HA,SACEA,qBAAqB,EACrBC,2BAA2B,QACtB,wBAAwB;AAE/B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,mBAAmB,EAAE,EAAE;MACvBC,sBAAsB,EAAE,EAAE;MAC1BC,iBAAiB,EAAE,EAAE;MACrBC,IAAI,EAAE,EAAE;MACRC,eAAe,EAAE,EAAE;MACnBC,SAAS,EAAE,IAAI;MACfC,oBAAoB,EAAE,KAAK;MAC3BC,oBAAoB,EAAE;IACxB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,QAAQ,CAAC,CAAC;EACjB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,QAAQA,CAAA,EAAG;MACf,MAAME,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;MAC7D,IAAI,CAACZ,IAAG,GAAIQ,QAAQ,CAACR,IAAI;MAEzB,IAAI,IAAI,CAACA,IAAG,KAAM,QAAQ,EAAE;QAC1B,MAAM,IAAI,CAACa,cAAc,CAACL,QAAQ,CAAC;MACrC,OAAO,IAAI,IAAI,CAACR,IAAG,KAAM,SAAS,EAAE;QAClC,MAAM,IAAI,CAACc,eAAe,CAACN,QAAQ,CAAC;MACtC;MAEA,IAAI,CAACN,SAAQ,GAAI,KAAK;IACxB,CAAC;IACD,MAAMW,cAAcA,CAACL,QAAQ,EAAE;MAC7B,IAAI,CAACZ,QAAO,GAAI,MAAMH,qBAAqB,CAACe,QAAQ,CAACO,QAAQ,CAAC;MAE9D,IAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,UAAU,EAAE;QAChC,IAAI,CAACnB,iBAAgB,GAAI,IAAI,CAACiB,MAAM,CAACC,KAAK,CAACC,UAAU;QACrD,IAAI,CAACrB,mBAAkB,GAAIc,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC;QACtE,IAAI,CAACd,sBAAqB,GAAIa,YAAY,CAACC,OAAO,CAChD,wBACF,CAAC;QACD,MAAM,IAAI,CAACO,iBAAiB,CAAC,IAAI,CAACpB,iBAAiB,CAAC;QACpD,IAAI,CAACqB,WAAW,CAAC,CAAC;MACpB;IACF,CAAC;IACD,MAAMN,eAAeA,CAACN,QAAQ,EAAE;MAC9B,IAAI,CAACT,iBAAgB,GAAIS,QAAQ,CAACa,GAAG;MACrC,IAAI,CAACxB,mBAAkB,GAAIc,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MACvD,IAAI,CAACd,sBAAqB,GAAIa,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;MAC7D,MAAM,IAAI,CAACO,iBAAiB,CAAC,IAAI,CAACpB,iBAAiB,CAAC;IACtD,CAAC;IACD,MAAMoB,iBAAiBA,CAACG,SAAS,EAAE;MACjC,IAAI,CAACnB,oBAAmB,GAAI,IAAI;MAChC,IAAI,CAACF,eAAc,GAAI,MAAMP,2BAA2B,CAAC4B,SAAS,CAAC;MACnE,IAAI,CAAClB,oBAAmB,GAAI,IAAI,CAACH,eAAe,CAACsB,MAAK,KAAM,CAAC;MAC7D,IAAI,CAACpB,oBAAmB,GAAI,KAAK;IACnC,CAAC;IACDiB,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC;QAChBC,IAAI,EAAE,iBAAiB;QACvBT,KAAK,EAAE;UAAEC,UAAU,EAAE,IAAI,CAACnB;QAAkB;MAC9C,CAAC,CAAC;IACJ,CAAC;IACD,MAAM4B,eAAeA,CAAA,EAAG;MACtB,MAAMC,OAAM,GAAI,IAAI,CAAChC,QAAQ,CAACiC,IAAI,CAC/BC,CAAC,IAAKA,CAAC,CAACC,MAAK,KAAM,IAAI,CAAChC,iBAC3B,CAAC;MACD,IAAI6B,OAAO,EAAE;QACX,IAAI,CAAC/B,mBAAkB,GAAI+B,OAAO,CAACF,IAAI;QACvC,IAAI,CAAC5B,sBAAqB,GAAI8B,OAAO,CAACI,WAAW;MACnD;MACA,MAAM,IAAI,CAACb,iBAAiB,CAAC,IAAI,CAACpB,iBAAiB,CAAC;MACpD,IAAI,CAACqB,WAAW,CAAC,CAAC;IACpB,CAAC;IACDa,aAAaA,CAAA,EAAG;MACd,IAAI,CAAClC,iBAAgB,GAAI,EAAE;MAC3B,IAAI,CAACF,mBAAkB,GAAI,EAAE;MAC7B,IAAI,CAACC,sBAAqB,GAAI,EAAE;MAChC,IAAI,CAACG,eAAc,GAAI,EAAE;MACzB,IAAI,CAACG,oBAAmB,GAAI,KAAK;MACjC,IAAI,CAACD,oBAAmB,GAAI,KAAK;MACjC,IAAI,CAACiB,WAAW,CAAC,CAAC;IACpB,CAAC;IACDc,oBAAoBA,CAACC,KAAK,EAAEC,WAAW,EAAEC,UAAU,EAAE;MACnD1B,YAAY,CAAC2B,OAAO,CAAC,uBAAuB,EAAEF,WAAW,CAAC;MAC1DzB,YAAY,CAAC2B,OAAO,CAAC,sBAAsB,EAAED,UAAU,CAAC;MACxD,IAAI,CAACb,OAAO,CAACC,IAAI,CAAC;QAChBC,IAAI,EAAE,mBAAmB;QACzBT,KAAK,EAAE;UACLC,UAAU,EAAE,IAAI,CAACnB,iBAAiB;UAClCoC,KAAK,EAAEA,KAAI,GAAI;QACjB;MACF,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}