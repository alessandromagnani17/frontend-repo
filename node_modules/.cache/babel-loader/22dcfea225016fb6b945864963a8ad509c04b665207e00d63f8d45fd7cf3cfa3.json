{"ast":null,"code":"import PatientList from \"./PatientList.vue\";\nimport PatientRadiographs from \"./PatientRadiographs.vue\";\nimport UploadRadiograph from \"./UploadRadiographs.vue\";\nimport { getPatients, getRadiographs } from \"../services/api-service\"; // Assicurati che il percorso sia corretto\n\nexport default {\n  components: {\n    PatientList,\n    PatientRadiographs,\n    UploadRadiograph\n  },\n  data() {\n    return {\n      patients: [],\n      // Lista dei pazienti associati al dottore\n      selectedPatient: null,\n      // Paziente selezionato\n      selectedPatientRadiographs: [] // Radiografie del paziente selezionato\n    };\n  },\n  async created() {\n    const doctorId = this.$store.state.user.id; // ID del dottore loggato tramite Vuex\n    this.patients = await getPatients(doctorId); // Utilizza la funzione corretta\n  },\n  methods: {\n    // Seleziona un paziente e ottieni le sue radiografie\n    async selectPatient(patient) {\n      this.selectedPatient = patient;\n      this.selectedPatientRadiographs = await getRadiographs(patient.id); // Utilizza la funzione corretta\n    },\n    // Aggiorna le radiografie dopo un caricamento riuscito\n    handleUploadSuccess() {\n      this.selectPatient(this.selectedPatient); // Ricarica le radiografie\n    }\n  }\n};","map":{"version":3,"names":["PatientList","PatientRadiographs","UploadRadiograph","getPatients","getRadiographs","components","data","patients","selectedPatient","selectedPatientRadiographs","created","doctorId","$store","state","user","id","methods","selectPatient","patient","handleUploadSuccess"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/DoctorDashboard.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Dashboard Dottore</h1>\n    <!-- Lista dei pazienti -->\n    <PatientList :patients=\"patients\" @selectPatient=\"selectPatient\" />\n\n    <!-- Caricamento radiografie, visibile solo se un paziente è selezionato -->\n    <UploadRadiograph\n      v-if=\"selectedPatient\"\n      @uploadSuccess=\"handleUploadSuccess\"\n      :patientId=\"selectedPatient.id\"\n    />\n\n    <!-- Visualizzazione delle radiografie del paziente selezionato -->\n    <PatientRadiographs\n      :radiographs=\"selectedPatientRadiographs\"\n      v-if=\"selectedPatient\"\n    />\n  </div>\n</template>\n\n<script>\nimport PatientList from \"./PatientList.vue\";\nimport PatientRadiographs from \"./PatientRadiographs.vue\";\nimport UploadRadiograph from \"./UploadRadiographs.vue\";\n\nimport { getPatients, getRadiographs } from \"../services/api-service\"; // Assicurati che il percorso sia corretto\n\nexport default {\n  components: {\n    PatientList,\n    PatientRadiographs,\n    UploadRadiograph,\n  },\n  data() {\n    return {\n      patients: [], // Lista dei pazienti associati al dottore\n      selectedPatient: null, // Paziente selezionato\n      selectedPatientRadiographs: [], // Radiografie del paziente selezionato\n    };\n  },\n  async created() {\n    const doctorId = this.$store.state.user.id; // ID del dottore loggato tramite Vuex\n    this.patients = await getPatients(doctorId); // Utilizza la funzione corretta\n  },\n  methods: {\n    // Seleziona un paziente e ottieni le sue radiografie\n    async selectPatient(patient) {\n      this.selectedPatient = patient;\n      this.selectedPatientRadiographs = await getRadiographs(patient.id); // Utilizza la funzione corretta\n    },\n    // Aggiorna le radiografie dopo un caricamento riuscito\n    handleUploadSuccess() {\n      this.selectPatient(this.selectedPatient); // Ricarica le radiografie\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Puoi aggiungere qui il tuo stile personalizzato per la dashboard */\n</style>\n"],"mappings":"AAsBA,OAAOA,WAAU,MAAO,mBAAmB;AAC3C,OAAOC,kBAAiB,MAAO,0BAA0B;AACzD,OAAOC,gBAAe,MAAO,yBAAyB;AAEtD,SAASC,WAAW,EAAEC,cAAa,QAAS,yBAAyB,EAAE;;AAEvE,eAAe;EACbC,UAAU,EAAE;IACVL,WAAW;IACXC,kBAAkB;IAClBC;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,eAAe,EAAE,IAAI;MAAE;MACvBC,0BAA0B,EAAE,EAAE,CAAE;IAClC,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,EAAE,EAAE;IAC5C,IAAI,CAACR,QAAO,GAAI,MAAMJ,WAAW,CAACQ,QAAQ,CAAC,EAAE;EAC/C,CAAC;EACDK,OAAO,EAAE;IACP;IACA,MAAMC,aAAaA,CAACC,OAAO,EAAE;MAC3B,IAAI,CAACV,eAAc,GAAIU,OAAO;MAC9B,IAAI,CAACT,0BAAyB,GAAI,MAAML,cAAc,CAACc,OAAO,CAACH,EAAE,CAAC,EAAE;IACtE,CAAC;IACD;IACAI,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAACF,aAAa,CAAC,IAAI,CAACT,eAAe,CAAC,EAAE;IAC5C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}