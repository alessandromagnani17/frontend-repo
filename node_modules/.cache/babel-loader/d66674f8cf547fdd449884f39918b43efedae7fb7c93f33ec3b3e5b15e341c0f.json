{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"patient-details\"\n};\nconst _hoisted_5 = {\n  class: \"upload-section\"\n};\nconst _hoisted_6 = {\n  class: \"radiographs-section\"\n};\nconst _hoisted_7 = {\n  key: 1\n};\nexport function render(_ctx, _cache) {\n  const _component_UploadRadiograph = _resolveComponent(\"UploadRadiograph\");\n  const _component_PatientRadiographs = _resolveComponent(\"PatientRadiographs\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n    class: \"header\"\n  }, [_createElementVNode(\"h1\", null, \"Le mie Radiografie\")], -1 /* HOISTED */)), _ctx.patient ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"Dettagli Paziente\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"Nome:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(_ctx.patient.name), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Cognome:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(_ctx.patient.family_name), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Email:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(_ctx.patient.email), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Data di nascita:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(_ctx.patient.birthdate), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Numero di telefono:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(_ctx.patient.phone_number), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Indirizzo:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(_ctx.patient.address), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_UploadRadiograph, {\n    onUploadSuccess: _ctx.handleUploadSuccess,\n    patientId: _ctx.patient.userId\n  }, null, 8 /* PROPS */, [\"onUploadSuccess\", \"patientId\"])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_PatientRadiographs, {\n    radiographs: _ctx.radiographs,\n    patientId: _ctx.patient.userId,\n    patientName: _ctx.patient.name\n  }, null, 8 /* PROPS */, [\"radiographs\", \"patientId\", \"patientName\"])])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _cache[7] || (_cache[7] = [_createElementVNode(\"p\", {\n    class: \"loading\"\n  }, \"Caricamento informazioni paziente...\", -1 /* HOISTED */)])))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_ctx","patient","_hoisted_3","_hoisted_4","_createTextVNode","_toDisplayString","name","family_name","email","birthdate","phone_number","address","_hoisted_5","_createVNode","_component_UploadRadiograph","onUploadSuccess","handleUploadSuccess","patientId","userId","_hoisted_6","_component_PatientRadiographs","radiographs","patientName","_hoisted_7","_cache"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/PatientDashboard.vue"],"sourcesContent":["<template>\n    <div class=\"dashboard\">\n      <div class=\"container\">\n        <div class=\"header\">\n          <h1>Le mie Radiografie</h1>\n        </div>\n  \n        <div v-if=\"patient\">\n          <h2>Dettagli Paziente</h2>\n          <div class=\"patient-details\">\n            <p><strong>Nome:</strong> {{ patient.name }}</p>\n            <p><strong>Cognome:</strong> {{ patient.family_name }}</p>\n            <p><strong>Email:</strong> {{ patient.email }}</p>\n            <p>\n              <strong>Data di nascita:</strong> {{ patient.birthdate }}\n            </p>\n            <p>\n              <strong>Numero di telefono:</strong> {{ patient.phone_number }}\n            </p>\n            <p><strong>Indirizzo:</strong> {{ patient.address }}</p>\n          </div>\n  \n          <div class=\"upload-section\">\n            <UploadRadiograph\n              @uploadSuccess=\"handleUploadSuccess\"\n              :patientId=\"patient.userId\"\n            />\n          </div>\n  \n          <div class=\"radiographs-section\">\n            <PatientRadiographs\n              :radiographs=\"radiographs\"\n              :patientId=\"patient.userId\"\n              :patientName=\"patient.name\"\n            />\n          </div>\n        </div>\n        <div v-else>\n          <p class=\"loading\">Caricamento informazioni paziente...</p>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import PatientRadiographs from \"./PatientRadiographs.vue\";\n  import UploadRadiograph from \"./UploadRadiographs.vue\";\n  import { ref, onMounted } from \"vue\";\n  import { getPatientInfo, getRadiographs } from \"../services/api-service\";\n  \n  export default {\n    components: {\n      PatientRadiographs,\n      UploadRadiograph,\n    },\n    setup() {\n      const patient = ref(null);\n      const radiographs = ref([]);\n  \n      const userId = localStorage.getItem(\"userId\"); // Presumendo che userId sia memorizzato in localStorage\n  \n      onMounted(async () => {\n        if (userId) {\n          try {\n            patient.value = await getPatientInfo(userId);\n            radiographs.value = await getRadiographs(userId); // Carica le radiografie per il paziente\n          } catch (error) {\n            console.error(\"Errore nel caricamento delle informazioni del paziente:\", error);\n          }\n        } else {\n          console.error(\"Nessun userId trovato nel localStorage.\");\n        }\n      });\n  \n      const handleUploadSuccess = () => {\n        radiographs.value = await getRadiographs(userId); // Ricarica le radiografie dopo un upload\n      };\n  \n      return {\n        patient,\n        radiographs,\n        handleUploadSuccess,\n      };\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .dashboard {\n    background: #ffffff;\n    min-height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  \n  .container {\n    max-width: 600px;\n    padding: 40px;\n    border-radius: 15px;\n    background: #ffffff;\n    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n    margin-top: 100px;\n    width: 100%;\n  }\n  \n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n  }\n  \n  h1 {\n    font-size: 24px;\n    margin-bottom: 20px;\n  }\n  \n  h2 {\n    font-size: 18px;\n    margin-bottom: 20px;\n  }\n  \n  .patient-details p {\n    font-size: 14px;\n    margin-bottom: 10px;\n  }\n  \n  .upload-section,\n  .radiographs-section {\n    margin-top: 30px;\n  }\n  \n  .loading {\n    font-size: 14px;\n    color: #999;\n  }\n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAW;;EAF5BC,GAAA;AAAA;;EASeD,KAAK,EAAC;AAAiB;;EAavBA,KAAK,EAAC;AAAgB;;EAOtBA,KAAK,EAAC;AAAqB;;EA7B1CC,GAAA;AAAA;;;;uBACIC,mBAAA,CAwCM,OAxCNC,UAwCM,GAvCJC,mBAAA,CAsCM,OAtCNC,UAsCM,G,0BArCJD,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAQ,IACjBI,mBAAA,CAA2B,YAAvB,oBAAkB,E,sBAGbE,IAAA,CAAAC,OAAO,I,cAAlBL,mBAAA,CA6BM,OApCdM,UAAA,G,0BAQUJ,mBAAA,CAA0B,YAAtB,mBAAiB,sBACrBA,mBAAA,CAWM,OAXNK,UAWM,GAVJL,mBAAA,CAAgD,Y,0BAA7CA,mBAAA,CAAsB,gBAAd,OAAK,sBAV5BM,gBAAA,CAUqC,GAAC,GAAAC,gBAAA,CAAGL,IAAA,CAAAC,OAAO,CAACK,IAAI,iB,GACzCR,mBAAA,CAA0D,Y,0BAAvDA,mBAAA,CAAyB,gBAAjB,UAAQ,sBAX/BM,gBAAA,CAWwC,GAAC,GAAAC,gBAAA,CAAGL,IAAA,CAAAC,OAAO,CAACM,WAAW,iB,GACnDT,mBAAA,CAAkD,Y,0BAA/CA,mBAAA,CAAuB,gBAAf,QAAM,sBAZ7BM,gBAAA,CAYsC,GAAC,GAAAC,gBAAA,CAAGL,IAAA,CAAAC,OAAO,CAACO,KAAK,iB,GAC3CV,mBAAA,CAEI,Y,0BADFA,mBAAA,CAAiC,gBAAzB,kBAAgB,sBAdtCM,gBAAA,CAc+C,GAAC,GAAAC,gBAAA,CAAGL,IAAA,CAAAC,OAAO,CAACQ,SAAS,iB,GAExDX,mBAAA,CAEI,Y,0BADFA,mBAAA,CAAoC,gBAA5B,qBAAmB,sBAjBzCM,gBAAA,CAiBkD,GAAC,GAAAC,gBAAA,CAAGL,IAAA,CAAAC,OAAO,CAACS,YAAY,iB,GAE9DZ,mBAAA,CAAwD,Y,0BAArDA,mBAAA,CAA2B,gBAAnB,YAAU,sBAnBjCM,gBAAA,CAmB0C,GAAC,GAAAC,gBAAA,CAAGL,IAAA,CAAAC,OAAO,CAACU,OAAO,iB,KAGnDb,mBAAA,CAKM,OALNc,UAKM,GAJJC,YAAA,CAGEC,2BAAA;IAFCC,eAAa,EAAEf,IAAA,CAAAgB,mBAAmB;IAClCC,SAAS,EAAEjB,IAAA,CAAAC,OAAO,CAACiB;+DAIxBpB,mBAAA,CAMM,OANNqB,UAMM,GALJN,YAAA,CAIEO,6BAAA;IAHCC,WAAW,EAAErB,IAAA,CAAAqB,WAAW;IACxBJ,SAAS,EAAEjB,IAAA,CAAAC,OAAO,CAACiB,MAAM;IACzBI,WAAW,EAAEtB,IAAA,CAAAC,OAAO,CAACK;6FAI5BV,mBAAA,CAEM,OAvCd2B,UAAA,EAAAC,MAAA,QAAAA,MAAA,OAsCU1B,mBAAA,CAA2D;IAAxDJ,KAAK,EAAC;EAAS,GAAC,sCAAoC,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}