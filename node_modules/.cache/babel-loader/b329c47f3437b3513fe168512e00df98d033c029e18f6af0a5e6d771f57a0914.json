{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"reset-password\"\n};\nconst _hoisted_2 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"mb-4\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"mb-4\"\n};\nconst _hoisted_5 = {\n  key: 2\n};\nconst _hoisted_6 = {\n  key: 3\n};\nconst _hoisted_7 = {\n  key: 4,\n  class: \"btn-group mt-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Titolo \"), !_ctx.successMessage ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_3, \"Reimposta la tua password\")) : _createCommentVNode(\"v-if\", true), _ctx.successMessage ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_4, _toDisplayString(_ctx.successMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Messaggio di errore \"), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Campo per inserire la nuova password \"), !_ctx.successMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"new-password\"\n  }, \"Inserisci la nuova password:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"new-password\",\n    class: \"form-control mt-3\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPassword = $event),\n    placeholder: \"Nuova password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPassword]]), _createElementVNode(\"button\", {\n    class: \"btn btn-primary mt-4\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.updatePassword && $options.updatePassword(...args))\n  }, \" Aggiorna Password \")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Bottone per il login dopo successo \"), _ctx.successMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary btn-next\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.goToLogin && $options.goToLogin(...args))\n  }, \" Esegui il login \")])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_ctx","successMessage","_hoisted_3","_hoisted_4","_toDisplayString","$data","errorMessage","_hoisted_5","_hoisted_6","for","type","id","_cache","$event","newPassword","placeholder","onClick","args","$options","updatePassword","_hoisted_7","goToLogin"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\ResetPassword.vue"],"sourcesContent":["<template>\n    <div class=\"reset-password\">\n        <div class=\"container mt-5\">\n        <!-- Titolo -->\n        <h2 class=\"mb-4\" v-if=\"!successMessage\">Reimposta la tua password</h2>\n        <h2 class=\"mb-4\" v-if=\"successMessage\">{{ successMessage }}</h2>\n\n        <!-- Messaggio di errore -->\n        <p v-if=\"errorMessage\">{{ errorMessage }}</p>\n\n        <!-- Campo per inserire la nuova password -->\n        <div v-if=\"!successMessage\">\n            <label for=\"new-password\">Inserisci la nuova password:</label>\n            <input\n            type=\"password\"\n            id=\"new-password\"\n            class=\"form-control mt-3\"\n            v-model=\"newPassword\"\n            placeholder=\"Nuova password\"\n            />\n            <button class=\"btn btn-primary mt-4\" @click=\"updatePassword\">\n            Aggiorna Password\n            </button>\n        </div>\n\n        <!-- Bottone per il login dopo successo -->\n        <div\n            class=\"btn-group mt-4\"\n            v-if=\"successMessage\"\n        >\n            <button class=\"btn btn-primary btn-next\" @click=\"goToLogin\">\n            Esegui il login\n            </button>\n        </div>\n        </div>\n    </div>\n    </template>  \n\n<script>\nimport { resetPassword } from \"@/services/api-service\";\n\nexport default {\n  name: \"ResetPassword\",\n  data() {\n    return {\n      verificationMessage: \"Verificando la tua email...\",\n      errorMessage: null,\n      isLoading: true,\n      newPassword: \"\", // Valore della nuova password\n    };\n  },\n  async mounted() {},\n  methods: {\n    async updatePassword() {\n      if (!this.newPassword) {\n        this.errorMessage = \"La password non puÃ² essere vuota.\";\n        return;\n      }\n\n      console.log(\"Nuova psw: \" + this.newPassword);\n\n      try {\n        const response = await resetPassword(\n          this.$route.params.uid,\n          this.newPassword\n        );\n\n        console.log(\"Risposta server --> \" + response.data.message);\n      } catch (error) {\n        this.errorMessage =\n          error.response?.data?.error ||\n          \"Errore durante la verifica dell'email.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    goToLogin() {\n      this.$router.push(\"/login\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n.reset-password {\n  background: #ffffff; /* Sfondo bianco, simile alla pagina di login */\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0); /* Rimuove ombre esterne */\n}\n\n.container {\n  max-width: 80%;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1); /* Simile alla shadow del login */\n  margin-top: 100px;\n  height: auto;\n  text-align: center; /* Centra il testo */\n  flex-grow: 1; /* Permette al contenuto principale di occupare lo spazio rimanente */\n  margin-left: 20px; /* Margine sinistro per distanziare il contenuto dalla sidebar */\n}\n\nh2 {\n  font-size: 18px; /* Uniforma il font size al login */\n  margin-bottom: 30px;\n}\n\np {\n  font-size: 14px;\n  color: #6c757d;\n}\n\n.btn-group .btn {\n  width: 100%; /* Assicura che i bottoni occupino l'intera larghezza */\n  margin-top: 20px;\n  padding: 10px;\n}\n\n.btn-primary {\n  background-color: #007bff;\n  color: white;\n  padding: 8px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 80%;\n  max-width: 300px;\n  min-width: 200px;\n  font-size: 13px;\n  transition: background-color 0.3s ease;\n  text-align: center;\n  display: inline-block;\n}\n\n.btn-primary:hover {\n  background-color: #0056b3;\n}\n\n.sidebar {\n  top: 0;\n  width: 250px; /* Imposta la larghezza della sidebar */\n  height: 100vh; /* Imposta l'altezza della sidebar al 100% della viewport */\n  padding: 20px; /* Padding interno */\n  background: linear-gradient(180deg, #212529, #343a40);\n}\n\n.sidebar .nav-link {\n  color: #cfd2d6;\n}\n\n.sidebar .nav-link:hover {\n  background-color: #495057;\n  border-radius: 5px;\n}\n\n.nav-link {\n  padding: 10px 15px; /* Aggiunge padding ai link per migliorarne l'aspetto */\n}\n\n@media (max-width: 767.98px) {\n  .navbar-brand {\n    font-size: 1.5rem;\n  }\n\n  .sidebar {\n    display: none;\n  }\n}\n</style>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;EAClBA,KAAK,EAAC;AAAgB;;EAFnCC,GAAA;EAIYD,KAAK,EAAC;;;EAJlBC,GAAA;EAKYD,KAAK,EAAC;;;EALlBC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;EA2BYD,KAAK,EAAC;;;uBA1BdE,mBAAA,CAkCM,OAlCNC,UAkCM,GAjCFC,mBAAA,CAgCM,OAhCNC,UAgCM,GA/BNC,mBAAA,YAAe,E,CACSC,IAAA,CAAAC,cAAc,I,cAAtCN,mBAAA,CAAsE,MAAtEO,UAAsE,EAA9B,2BAAyB,KAJzEH,mBAAA,gBAK+BC,IAAA,CAAAC,cAAc,I,cAArCN,mBAAA,CAAgE,MAAhEQ,UAAgE,EAAAC,gBAAA,CAAtBJ,IAAA,CAAAC,cAAc,oBALhEF,mBAAA,gBAOQA,mBAAA,yBAA4B,EACnBM,KAAA,CAAAC,YAAY,I,cAArBX,mBAAA,CAA6C,KARrDY,UAAA,EAAAH,gBAAA,CAQkCC,KAAA,CAAAC,YAAY,oBAR9CP,mBAAA,gBAUQA,mBAAA,0CAA6C,E,CACjCC,IAAA,CAAAC,cAAc,I,cAA1BN,mBAAA,CAYM,OAvBda,UAAA,G,0BAYYX,mBAAA,CAA8D;IAAvDY,GAAG,EAAC;EAAc,GAAC,8BAA4B,sB,gBACtDZ,mBAAA,CAME;IALFa,IAAI,EAAC,UAAU;IACfC,EAAE,EAAC,cAAc;IACjBlB,KAAK,EAAC,mBAAmB;IAhBrC,uBAAAmB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAiBqBR,KAAA,CAAAS,WAAW,GAAAD,MAAA;IACpBE,WAAW,EAAC;iDADHV,KAAA,CAAAS,WAAW,E,GAGpBjB,mBAAA,CAES;IAFDJ,KAAK,EAAC,sBAAsB;IAAEuB,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAE,qBAE7D,E,KAtBZlB,mBAAA,gBAyBQA,mBAAA,wCAA2C,EAGjCC,IAAA,CAAAC,cAAc,I,cAFxBN,mBAAA,CAOM,OAPNyB,UAOM,GAHFvB,mBAAA,CAES;IAFDJ,KAAK,EAAC,0BAA0B;IAAEuB,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAG,SAAA,IAAAH,QAAA,CAAAG,SAAA,IAAAJ,IAAA,CAAS;KAAE,mBAE5D,E,KAhCZlB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}