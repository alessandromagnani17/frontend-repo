{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"day-details\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.selectedDay ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, \" Dettagli del Giorno: \" + _toDisplayString($props.selectedDay.date) + \" \" + _toDisplayString($props.monthNames[$props.month]) + \" \" + _toDisplayString($props.year), 1 /* TEXT */), $props.selectedDay.operations.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"Operazioni pianificate:\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.selectedDay.operations, operation => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: operation.id\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(operation.type), 1 /* TEXT */), _cache[0] || (_cache[0] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"Data: \" + _toDisplayString($props.formatDate(operation.operationDate)), 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"Ora: \" + _toDisplayString($props.formatTime(operation.operationDate)), 1 /* TEXT */), _cache[2] || (_cache[2] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"Descrizione: \" + _toDisplayString(operation.description), 1 /* TEXT */), _cache[3] || (_cache[3] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */))]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $props.selectedDay.radiographs.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"Radiografie caricate:\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.selectedDay.radiographs, radiograph => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: radiograph.name\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(radiograph.name), 1 /* TEXT */), _cache[5] || (_cache[5] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString(radiograph.date), 1 /* TEXT */), _cache[6] || (_cache[6] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"button\", {\n      onClick: $event => $props.enlargeRadiograph(radiograph.url)\n    }, \" Visualizza Immagine \", 8 /* PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _cache[8] || (_cache[8] = [_createElementVNode(\"p\", null, \"Non ci sono attività pianificate per questa data.\", -1 /* HOISTED */)])))])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","$props","selectedDay","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","date","monthNames","month","year","operations","length","_hoisted_2","_Fragment","_renderList","operation","id","type","formatDate","operationDate","formatTime","description","_createCommentVNode","radiographs","_hoisted_3","radiograph","name","onClick","$event","enlargeRadiograph","url","_hoisted_4","_hoisted_5","_cache"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/DayDetails.vue"],"sourcesContent":["<template>\n  <div v-if=\"selectedDay\" class=\"day-details\">\n    <h2>\n      Dettagli del Giorno: {{ selectedDay.date }} {{ monthNames[month] }}\n      {{ year }}\n    </h2>\n\n    <div v-if=\"selectedDay.operations.length > 0\">\n      <h3>Operazioni pianificate:</h3>\n      <ul>\n        <li v-for=\"operation in selectedDay.operations\" :key=\"operation.id\">\n          <strong>{{ operation.type }}</strong\n          ><br />\n          <span>Data: {{ formatDate(operation.operationDate) }}</span\n          ><br />\n          <span>Ora: {{ formatTime(operation.operationDate) }}</span\n          ><br />\n          <span>Descrizione: {{ operation.description }}</span\n          ><br />\n        </li>\n      </ul>\n    </div>\n\n    <div v-if=\"selectedDay.radiographs.length > 0\">\n      <h3>Radiografie caricate:</h3>\n      <ul>\n        <li\n          v-for=\"radiograph in selectedDay.radiographs\"\n          :key=\"radiograph.name\"\n        >\n          <strong>{{ radiograph.name }}</strong\n          ><br />\n          <span>{{ radiograph.date }}</span\n          ><br />\n          <button @click=\"enlargeRadiograph(radiograph.url)\">\n            Visualizza Immagine\n          </button>\n        </li>\n      </ul>\n    </div>\n\n    <div v-else>\n      <p>Non ci sono attività pianificate per questa data.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    selectedDay: Object,\n    monthNames: Array,\n    month: Number,\n    year: Number,\n    formatDate: Function,\n    formatTime: Function,\n    enlargeRadiograph: Function,\n  },\n};\n</script>\n"],"mappings":";;EAAAA,GAAA;EAC0BC,KAAK,EAAC;;;EADhCD,GAAA;AAAA;;EAAAA,GAAA;AAAA;mBAAA;;EAAAA,GAAA;AAAA;;SACaE,MAAA,CAAAC,WAAW,I,cAAtBC,mBAAA,CA2CM,OA3CNC,UA2CM,GA1CJC,mBAAA,CAGK,YAHD,wBACmB,GAAAC,gBAAA,CAAGL,MAAA,CAAAC,WAAW,CAACK,IAAI,IAAG,GAAC,GAAAD,gBAAA,CAAGL,MAAA,CAAAO,UAAU,CAACP,MAAA,CAAAQ,KAAK,KAAI,GACnE,GAAAH,gBAAA,CAAGL,MAAA,CAAAS,IAAI,kBAGET,MAAA,CAAAC,WAAW,CAACS,UAAU,CAACC,MAAM,Q,cAAxCT,mBAAA,CAcM,OArBVU,UAAA,G,0BAQMR,mBAAA,CAAgC,YAA5B,yBAAuB,sBAC3BA,mBAAA,CAWK,c,kBAVHF,mBAAA,CASKW,SAAA,QAnBbC,WAAA,CAUgCd,MAAA,CAAAC,WAAW,CAACS,UAAU,EAAnCK,SAAS;yBAApBb,mBAAA,CASK;MAT4CJ,GAAG,EAAEiB,SAAS,CAACC;QAC9DZ,mBAAA,CACC,gBAAAC,gBAAA,CADUU,SAAS,CAACE,IAAI,kB,0BACxBb,mBAAA,CAAM,sCACPA,mBAAA,CACC,cADK,QAAM,GAAAC,gBAAA,CAAGL,MAAA,CAAAkB,UAAU,CAACH,SAAS,CAACI,aAAa,mB,0BAChDf,mBAAA,CAAM,sCACPA,mBAAA,CACC,cADK,OAAK,GAAAC,gBAAA,CAAGL,MAAA,CAAAoB,UAAU,CAACL,SAAS,CAACI,aAAa,mB,0BAC/Cf,mBAAA,CAAM,sCACPA,mBAAA,CACC,cADK,eAAa,GAAAC,gBAAA,CAAGU,SAAS,CAACM,WAAW,kB,0BAC1CjB,mBAAA,CAAM,qC;wCAlBjBkB,mBAAA,gBAuBetB,MAAA,CAAAC,WAAW,CAACsB,WAAW,CAACZ,MAAM,Q,cAAzCT,mBAAA,CAgBM,OAvCVsB,UAAA,G,0BAwBMpB,mBAAA,CAA8B,YAA1B,uBAAqB,sBACzBA,mBAAA,CAaK,c,kBAZHF,mBAAA,CAWKW,SAAA,QArCbC,WAAA,CA2B+Bd,MAAA,CAAAC,WAAW,CAACsB,WAAW,EAArCE,UAAU;yBADnBvB,mBAAA,CAWK;MATFJ,GAAG,EAAE2B,UAAU,CAACC;QAEjBtB,mBAAA,CACC,gBAAAC,gBAAA,CADUoB,UAAU,CAACC,IAAI,kB,0BACzBtB,mBAAA,CAAM,sCACPA,mBAAA,CACC,cAAAC,gBAAA,CADQoB,UAAU,CAACnB,IAAI,kB,0BACvBF,mBAAA,CAAM,sCACPA,mBAAA,CAES;MAFAuB,OAAK,EAAAC,MAAA,IAAE5B,MAAA,CAAA6B,iBAAiB,CAACJ,UAAU,CAACK,GAAG;OAAG,uBAEnD,iBApCVC,UAAA,E;uDAyCI7B,mBAAA,CAEM,OA3CV8B,UAAA,EAAAC,MAAA,QAAAA,MAAA,OA0CM7B,mBAAA,CAAwD,WAArD,mDAAiD,oB,SA1C1DkB,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}