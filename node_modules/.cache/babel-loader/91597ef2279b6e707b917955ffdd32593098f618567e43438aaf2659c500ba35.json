{"ast":null,"code":"export default {\n  name: \"PatientRadiographs\",\n  props: {\n    patientId: {\n      type: String,\n      required: true\n    },\n    patientName: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      radiographs: [],\n      selectedRadiograph: null // Per tracciare quale radiografia è stata selezionata\n    };\n  },\n  async mounted() {\n    try {\n      const response = await fetch(`/api/patients/${this.patientId}/radiographs`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        this.radiographs = await response.json();\n      } else {\n        console.error(\"Errore nel recupero delle radiografie.\");\n      }\n    } catch (error) {\n      console.error(\"Errore:\", error);\n    }\n  },\n  methods: {\n    toggleRadiograph(radiograph) {\n      // Se la radiografia selezionata è già aperta, chiudila\n      this.selectedRadiograph = this.selectedRadiograph === radiograph ? null : radiograph;\n    },\n    enlargeRadiograph(url) {\n      // Logica per ingrandire l'immagine (ad esempio, aprire un lightbox)\n      window.open(url, \"_blank\");\n    }\n  }\n};","map":{"version":3,"names":["name","props","patientId","type","String","required","patientName","data","radiographs","selectedRadiograph","mounted","response","fetch","method","headers","ok","json","console","error","methods","toggleRadiograph","radiograph","enlargeRadiograph","url","window","open"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/PatientRadiographs.vue"],"sourcesContent":["<template>\n  <div class=\"radiograph-list\">\n    <h2>Radiografie di {{ patientName }}</h2>\n    <ul v-if=\"radiographs.length\">\n      <li\n        v-for=\"radiograph in radiographs\"\n        :key=\"radiograph.name\"\n        class=\"radiograph-item\"\n      >\n        <div>\n          {{ radiograph.date }} -\n          <button @click=\"toggleRadiograph(radiograph)\" class=\"view-link\">\n            Visualizza\n          </button>\n        </div>\n\n        <!-- Se l'immagine è selezionata, mostriamo l'anteprima -->\n        <div\n          v-if=\"selectedRadiograph === radiograph\"\n          class=\"radiograph-preview\"\n        >\n          <img\n            :src=\"radiograph.url\"\n            alt=\"Radiografia\"\n            class=\"radiograph-image\"\n          />\n          <div class=\"radiograph-controls\">\n            <button\n              @click=\"enlargeRadiograph(radiograph.url)\"\n              class=\"control-button\"\n            >\n              <i class=\"fas fa-search-plus\"></i>\n              <!-- Icona ingrandimento -->\n            </button>\n            <a :href=\"radiograph.url\" download class=\"control-button\">\n              <i class=\"fas fa-download\"></i>\n              <!-- Icona download -->\n            </a>\n          </div>\n        </div>\n      </li>\n    </ul>\n    <p v-else>Nessuna radiografia trovata per questo paziente.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"PatientRadiographs\",\n  props: {\n    patientId: {\n      type: String,\n      required: true,\n    },\n    patientName: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      radiographs: [],\n      selectedRadiograph: null, // Per tracciare quale radiografia è stata selezionata\n    };\n  },\n  async mounted() {\n    try {\n      const response = await fetch(\n        `/api/patients/${this.patientId}/radiographs`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (response.ok) {\n        this.radiographs = await response.json();\n      } else {\n        console.error(\"Errore nel recupero delle radiografie.\");\n      }\n    } catch (error) {\n      console.error(\"Errore:\", error);\n    }\n  },\n  methods: {\n    toggleRadiograph(radiograph) {\n      // Se la radiografia selezionata è già aperta, chiudila\n      this.selectedRadiograph =\n        this.selectedRadiograph === radiograph ? null : radiograph;\n    },\n    enlargeRadiograph(url) {\n      // Logica per ingrandire l'immagine (ad esempio, aprire un lightbox)\n      window.open(url, \"_blank\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n.radiograph-list {\n  max-width: 800px;\n  margin: 20px auto;\n}\n\nh2 {\n  font-size: 18px;\n  color: #333;\n  margin-bottom: 15px;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli.radiograph-item {\n  padding: 10px 0;\n  border-bottom: 1px solid #ccc;\n  font-size: 12px;\n  color: #444;\n  display: flex;\n  flex-direction: column;\n}\n\n.view-link {\n  color: #007bff;\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-weight: bold;\n  transition: color 0.3s ease;\n  padding: 0;\n  margin: 0;\n}\n\n.view-link:hover {\n  color: #0056b3;\n}\n\n.radiograph-preview {\n  margin-top: 10px;\n  animation: fadeIn 0.3s ease-in-out;\n}\n\n.radiograph-image {\n  width: 100%;\n  max-width: 400px;\n  display: block;\n  margin-bottom: 10px;\n}\n\n.radiograph-controls {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.control-button {\n  background-color: transparent;\n  border: none;\n  font-size: 18px;\n  margin-left: 10px;\n  cursor: pointer;\n  color: #007bff;\n  transition: color 0.3s ease;\n}\n\n.control-button:hover {\n  color: #0056b3;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n</style>\n"],"mappings":"AA+CA,eAAe;EACbA,IAAI,EAAE,oBAAoB;EAC1BC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,WAAW,EAAE;MACXH,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,kBAAkB,EAAE,IAAI,CAAE;IAC5B,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAC1B,iBAAiB,IAAI,CAACV,SAAS,cAAc,EAC7C;QACEW,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAED,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACf,IAAI,CAACP,WAAU,GAAI,MAAMG,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC1C,OAAO;QACLC,OAAO,CAACC,KAAK,CAAC,wCAAwC,CAAC;MACzD;IACF,EAAE,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IACjC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,UAAU,EAAE;MAC3B;MACA,IAAI,CAACZ,kBAAiB,GACpB,IAAI,CAACA,kBAAiB,KAAMY,UAAS,GAAI,IAAG,GAAIA,UAAU;IAC9D,CAAC;IACDC,iBAAiBA,CAACC,GAAG,EAAE;MACrB;MACAC,MAAM,CAACC,IAAI,CAACF,GAAG,EAAE,QAAQ,CAAC;IAC5B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}