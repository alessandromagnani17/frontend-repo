{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"upload-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Carica Radiografia\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.onFileChange && $options.onFileChange(...args)),\n    class: \"file-input\"\n  }, null, 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.upload && $options.upload(...args)),\n    class: \"btn-upload\"\n  }, \"Carica\")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","type","onChange","_cache","args","$options","onFileChange","onClick","upload"],"sources":["C:\\Users\\Utente\\Desktop\\DIO\\osteoarthritis-project\\frontend\\src\\components\\UploadRadiographs.vue"],"sourcesContent":["<template>\r\n  <div class=\"upload-container\">\r\n    <h2>Carica Radiografia</h2>\r\n    <input type=\"file\" @change=\"onFileChange\" class=\"file-input\" />\r\n    <button @click=\"upload\" class=\"btn-upload\">Carica</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  uploadRadiograph,\r\n  getPatientsFromDoctor,\r\n} from \"../services/api-service\";\r\n\r\nexport default {\r\n  props: {\r\n    patientId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      file: null,\r\n      patients: [],\r\n    };\r\n  },\r\n  async created() {\r\n    const doctorId = this.$store.state.user.id;\r\n    this.patients = await getPatientsFromDoctor(doctorId);\r\n  },\r\n  methods: {\r\n    onFileChange(event) {\r\n      this.file = event.target.files[0];\r\n    },\r\n    async upload() {\r\n      if (!this.file) {\r\n        alert(\"Per favore seleziona un file.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Corretto il passaggio dei parametri\r\n        const response = await uploadRadiograph(this.patientId, this.file);\r\n        this.$emit(\"uploadSuccess\", response.fileUrl); // Modificato per emettere l'URL del file\r\n      } catch (error) {\r\n        // Stampa dettagli significativi sugli errori\r\n        console.error(\"Dettagli errore:\", error);\r\n        alert(\"Errore nel caricamento della radiografia: \" + error.message);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.upload-container {\r\n  background: #ffffff;\r\n  padding: 20px;\r\n  border-radius: 15px;\r\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\r\n  margin-top: 20px;\r\n  width: 100%;\r\n}\r\n\r\nh2 {\r\n  font-size: 18px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.file-input {\r\n  display: block;\r\n  margin-bottom: 10px;\r\n  padding: 8px; /* Ridotto padding */\r\n  font-size: 12px; /* Ridotta dimensione del font */\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n}\r\n\r\n.btn-upload {\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 8px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.btn-upload:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAkB;;uBAA7BC,mBAAA,CAIM,OAJNC,UAIM,G,0BAHJC,mBAAA,CAA2B,YAAvB,oBAAkB,sBACtBA,mBAAA,CAA+D;IAAxDC,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IAAEP,KAAK,EAAC;qCAChDG,mBAAA,CAA0D;IAAjDO,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAG,MAAA,IAAAH,QAAA,CAAAG,MAAA,IAAAJ,IAAA,CAAM;IAAEP,KAAK,EAAC;KAAa,QAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}