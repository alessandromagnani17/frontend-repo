{"ast":null,"code":"import axios from 'axios'; // Importa axios per le chiamate API\n\nexport default {\n  name: 'RegisterComponent',\n  // Assicurati di avere il nome corretto\n  data() {\n    return {\n      form: {\n        username: '',\n        // Usa 'username' per l'email\n        password: ''\n      },\n      errors: {},\n      loading: false // Aggiunto per il caricamento\n    };\n  },\n  methods: {\n    // Metodo per gestire la registrazione dell'utente\n    async onSubmit() {\n      this.loading = true; // Avvia il caricamento\n      this.errors = {}; // Resetta gli errori\n\n      try {\n        const {\n          username,\n          password\n        } = this.form;\n        console.log(\"Form Data:\", this.form); // Visualizza i dati del form\n\n        // Effettua la registrazione usando axios\n        const response = await axios.post('http://127.0.0.1:5000/register', {\n          email: username,\n          // Usa 'username' come email\n          password\n        });\n        alert('Registration successful! Please check your email for verification.');\n        console.log(response.data);\n      } catch (error) {\n        console.error(\"Error signing up:\", error);\n        alert(\"Error signing up: \" + error.message); // Mostra un alert per l'errore\n\n        // Gestione degli errori\n        if (error.response && error.response.data) {\n          this.errors.general = error.response.data.error || 'Registration failed';\n          alert(this.errors.general); // Mostra un alert per l'errore generale\n        } else {\n          this.errors.general = error.message; // Imposta l'errore generale\n          alert(\"Error: \" + error.message); // Mostra un alert per l'errore generale\n        }\n      } finally {\n        this.loading = false; // Fine del caricamento\n        console.log(\"Loading finished\"); // Debug\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","form","username","password","errors","loading","methods","onSubmit","console","log","response","post","email","alert","error","message","general"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/UserRegister.vue"],"sourcesContent":["<template>\n  <div class=\"register\">\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4\">Create Your Account</h2>\n      <form @submit.prevent=\"register\">\n        <div class=\"mb-3\">\n          <label for=\"username\" class=\"form-label\">Username (Email)</label>\n          <input\n            id=\"username\"\n            v-model=\"email\"\n            type=\"email\"\n            class=\"form-control\"\n            required\n          />\n          <div v-if=\"error\" class=\"invalid-feedback\">\n            {{ error }}  <!-- Mostra errori generali -->\n          </div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"password\" class=\"form-label\">Password</label>\n          <input\n            id=\"password\"\n            v-model=\"password\"\n            type=\"password\"\n            class=\"form-control\"\n            required\n          />\n          <div v-if=\"error\" class=\"invalid-feedback\">\n            {{ error }}  <!-- Mostra errori generali -->\n          </div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading\">\n          <span v-if=\"loading\">Registering...</span>\n          <span v-else>Register</span>\n        </button>\n        <div v-if=\"error\" class=\"invalid-feedback mt-3\">\n          {{ error }}  <!-- Mostra errori generali -->\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'; // Importa axios per le chiamate API\n\nexport default {\n  name: 'RegisterComponent', // Assicurati di avere il nome corretto\n  data() {\n    return {\n      form: {\n        username: '', // Usa 'username' per l'email\n        password: ''\n      },\n      errors: {},\n      loading: false, // Aggiunto per il caricamento\n    };\n  },\n  methods: {\n    // Metodo per gestire la registrazione dell'utente\n    async onSubmit() {\n      this.loading = true; // Avvia il caricamento\n      this.errors = {}; // Resetta gli errori\n\n      try {\n        const { username, password } = this.form;\n        console.log(\"Form Data:\", this.form); // Visualizza i dati del form\n\n        // Effettua la registrazione usando axios\n        const response = await axios.post('http://127.0.0.1:5000/register', {\n          email: username, // Usa 'username' come email\n          password\n        });\n\n        alert('Registration successful! Please check your email for verification.');\n        console.log(response.data);\n      } catch (error) {\n        console.error(\"Error signing up:\", error);\n        alert(\"Error signing up: \" + error.message); // Mostra un alert per l'errore\n\n        // Gestione degli errori\n        if (error.response && error.response.data) {\n          this.errors.general = error.response.data.error || 'Registration failed';\n          alert(this.errors.general); // Mostra un alert per l'errore generale\n        } else {\n          this.errors.general = error.message; // Imposta l'errore generale\n          alert(\"Error: \" + error.message); // Mostra un alert per l'errore generale\n        }\n      } finally {\n        this.loading = false; // Fine del caricamento\n        console.log(\"Loading finished\"); // Debug\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.register {\n  background: linear-gradient(135deg, #f7f7f7, #e0e0e0);\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.container {\n  max-width: 600px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  font-size: 2.5rem;\n  color: #343a40;\n}\n\n.form-label {\n  color: #495057;\n}\n\n.invalid-feedback {\n  color: #dc3545;\n}\n\n.btn {\n  margin-top: 20px;\n  background-color: #007bff;\n  border: none;\n  transition: background-color 0.3s, transform 0.3s;\n}\n\n.btn:hover {\n  background-color: #0056b3;\n  transform: scale(1.05);\n}\n</style>\n"],"mappings":"AA4CA,OAAOA,KAAI,MAAO,OAAO,EAAE;;AAE3B,eAAe;EACbC,IAAI,EAAE,mBAAmB;EAAE;EAC3BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QAAE;QACdC,QAAQ,EAAE;MACZ,CAAC;MACDC,MAAM,EAAE,CAAC,CAAC;MACVC,OAAO,EAAE,KAAK,CAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI,CAACF,OAAM,GAAI,IAAI,EAAE;MACrB,IAAI,CAACD,MAAK,GAAI,CAAC,CAAC,EAAE;;MAElB,IAAI;QACF,MAAM;UAAEF,QAAQ;UAAEC;QAAS,IAAI,IAAI,CAACF,IAAI;QACxCO,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACR,IAAI,CAAC,EAAE;;QAEtC;QACA,MAAMS,QAAO,GAAI,MAAMZ,KAAK,CAACa,IAAI,CAAC,gCAAgC,EAAE;UAClEC,KAAK,EAAEV,QAAQ;UAAE;UACjBC;QACF,CAAC,CAAC;QAEFU,KAAK,CAAC,oEAAoE,CAAC;QAC3EL,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACV,IAAI,CAAC;MAC5B,EAAE,OAAOc,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QACzCD,KAAK,CAAC,oBAAmB,GAAIC,KAAK,CAACC,OAAO,CAAC,EAAE;;QAE7C;QACA,IAAID,KAAK,CAACJ,QAAO,IAAKI,KAAK,CAACJ,QAAQ,CAACV,IAAI,EAAE;UACzC,IAAI,CAACI,MAAM,CAACY,OAAM,GAAIF,KAAK,CAACJ,QAAQ,CAACV,IAAI,CAACc,KAAI,IAAK,qBAAqB;UACxED,KAAK,CAAC,IAAI,CAACT,MAAM,CAACY,OAAO,CAAC,EAAE;QAC9B,OAAO;UACL,IAAI,CAACZ,MAAM,CAACY,OAAM,GAAIF,KAAK,CAACC,OAAO,EAAE;UACrCF,KAAK,CAAC,SAAQ,GAAIC,KAAK,CAACC,OAAO,CAAC,EAAE;QACpC;MACF,UAAU;QACR,IAAI,CAACV,OAAM,GAAI,KAAK,EAAE;QACtBG,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC,EAAE;MACnC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}