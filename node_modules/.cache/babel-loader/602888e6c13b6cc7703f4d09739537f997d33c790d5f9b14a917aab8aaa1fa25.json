{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"patient-list\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  key: 2,\n  class: \"details\"\n};\nconst _hoisted_8 = {\n  class: \"patient-details\"\n};\nconst _hoisted_9 = {\n  class: \"upload-section\"\n};\nconst _hoisted_10 = {\n  class: \"radiographs-section\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_UploadRadiograph = _resolveComponent(\"UploadRadiograph\");\n  const _component_PatientRadiographs = _resolveComponent(\"PatientRadiographs\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n    class: \"header\"\n  }, [_createElementVNode(\"h1\", null, \"Dashboard Dottore\")], -1 /* HOISTED */)), $setup.patients.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Elenco Pazienti\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.patients, patient => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: patient.userId,\n      onClick: $event => $setup.selectPatient(patient),\n      class: \"patient-item\"\n    }, _toDisplayString(patient.name) + \" \" + _toDisplayString(patient.family_name), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _cache[1] || (_cache[1] = [_createElementVNode(\"p\", {\n    class: \"no-patients\"\n  }, \"Nessun paziente associato trovato.\", -1 /* HOISTED */)]))), $setup.selectedPatient ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"Dettagli Paziente\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Nome:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.name), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Cognome:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.family_name), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Email:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.email), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Data di nascita:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.birthdate), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"strong\", null, \"Numero di telefono:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.phone_number), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"strong\", null, \"Indirizzo:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.address), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_UploadRadiograph, {\n    onUploadSuccess: $setup.handleUploadSuccess,\n    patientId: $setup.selectedPatient.userId\n  }, null, 8 /* PROPS */, [\"onUploadSuccess\", \"patientId\"])]), _createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_PatientRadiographs, {\n    radiographs: $setup.selectedPatientRadiographs,\n    patientId: $setup.selectedPatient.userId,\n    patientName: $setup.selectedPatient.name\n  }, null, 8 /* PROPS */, [\"radiographs\", \"patientId\", \"patientName\"])])])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$setup","patients","length","_hoisted_3","_hoisted_4","_Fragment","_renderList","patient","userId","onClick","$event","selectPatient","name","_toDisplayString","family_name","_hoisted_5","_hoisted_6","_cache","selectedPatient","_hoisted_7","_hoisted_8","_createTextVNode","email","birthdate","phone_number","address","_hoisted_9","_createVNode","_component_UploadRadiograph","onUploadSuccess","handleUploadSuccess","patientId","_hoisted_10","_component_PatientRadiographs","radiographs","selectedPatientRadiographs","patientName","_createCommentVNode"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/DoctorDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <div class=\"container\">\n      <div class=\"header\">\n        <h1>Dashboard Dottore</h1>\n      </div>\n\n      <div v-if=\"patients.length > 0\">\n        <h2>Elenco Pazienti</h2>\n        <ul class=\"patient-list\">\n          <li\n            v-for=\"patient in patients\"\n            :key=\"patient.userId\"\n            @click=\"selectPatient(patient)\"\n            class=\"patient-item\"\n          >\n            {{ patient.name }} {{ patient.family_name }}\n          </li>\n        </ul>\n      </div>\n      <div v-else>\n        <p class=\"no-patients\">Nessun paziente associato trovato.</p>\n      </div>\n\n      <div v-if=\"selectedPatient\" class=\"details\">\n        <h2>Dettagli Paziente</h2>\n        <div class=\"patient-details\">\n          <p><strong>Nome:</strong> {{ selectedPatient.name }}</p>\n          <p><strong>Cognome:</strong> {{ selectedPatient.family_name }}</p>\n          <p><strong>Email:</strong> {{ selectedPatient.email }}</p>\n          <p>\n            <strong>Data di nascita:</strong> {{ selectedPatient.birthdate }}\n          </p>\n          <p>\n            <strong>Numero di telefono:</strong>\n            {{ selectedPatient.phone_number }}\n          </p>\n          <p><strong>Indirizzo:</strong> {{ selectedPatient.address }}</p>\n        </div>\n\n        <div class=\"upload-section\">\n          <UploadRadiograph\n            @uploadSuccess=\"handleUploadSuccess\"\n            :patientId=\"selectedPatient.userId\"\n          />\n        </div>\n\n        <div class=\"radiographs-section\">\n          <PatientRadiographs\n            :radiographs=\"selectedPatientRadiographs\"\n            :patientId=\"selectedPatient.userId\"\n            :patientName=\"selectedPatient.name\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PatientRadiographs from \"./PatientRadiographs.vue\";\nimport UploadRadiograph from \"./UploadRadiographs.vue\";\nimport { ref, onMounted } from \"vue\";\nimport { getPatientsFromDoctor, getRadiographs } from \"../services/api-service\";\n\nexport default {\n  components: {\n    PatientRadiographs,\n    UploadRadiograph,\n  },\n  setup() {\n    const patients = ref([]);\n    const selectedPatient = ref(null);\n    const selectedPatientRadiographs = ref([]);\n\n    const doctorId = localStorage.getItem(\"doctorId\");\n\n    onMounted(async () => {\n      if (doctorId) {\n        try {\n          patients.value = await getPatientsFromDoctor(doctorId);\n        } catch (error) {\n          console.error(\"Errore nel caricamento dei pazienti:\", error);\n        }\n      } else {\n        console.error(\"Nessun DoctorID trovato nel localStorage.\");\n      }\n    });\n\n    const selectPatient = async (patient) => {\n      selectedPatient.value = patient;\n      selectedPatientRadiographs.value = []; // Svuota le radiografie precedenti\n\n      console.log(\"Patient ID selezionato:\", patient.userId); // Debug per verificare il patientId\n\n      if (!patient.userId) {\n        console.error(\"ID paziente non trovato.\");\n        return;\n      }\n\n      try {\n        selectedPatientRadiographs.value =\n          (await getRadiographs(patient.userId)) || [];\n        console.log(\"Radiografie caricate:\", selectedPatientRadiographs.value); // Debug per verificare le radiografie caricate\n      } catch (error) {\n        console.error(\n          \"Errore nel caricamento delle radiografie per il paziente:\",\n          error\n        );\n      }\n    };\n\n    const handleUploadSuccess = () => {\n      selectPatient(selectedPatient.value);\n    };\n\n    return {\n      patients,\n      selectPatient,\n      handleUploadSuccess,\n      selectedPatient,\n      selectedPatientRadiographs,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.dashboard {\n  background: #ffffff;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.container {\n  max-width: 600px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 100px;\n  width: 100%;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\nh1 {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\nh2 {\n  font-size: 18px;\n  margin-bottom: 20px;\n}\n\n.patient-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.patient-item {\n  cursor: pointer;\n  text-decoration: underline;\n  font-size: 14px;\n  margin-bottom: 10px;\n  color: #007bff;\n}\n\n.patient-item:hover {\n  color: #0056b3;\n}\n\n.no-patients {\n  font-size: 14px;\n  color: #999;\n}\n\n.details {\n  margin-top: 30px;\n}\n\n.patient-details p {\n  font-size: 14px;\n  margin-bottom: 10px;\n}\n\n.upload-section,\n.radiographs-section {\n  margin-top: 30px;\n}\n\n.btn-next {\n  width: 100%;\n  margin-top: 10px;\n  padding: 0.4rem;\n  cursor: pointer;\n  font-size: 13px;\n}\n\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.loading-icon {\n  width: 50px;\n  height: 50px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}