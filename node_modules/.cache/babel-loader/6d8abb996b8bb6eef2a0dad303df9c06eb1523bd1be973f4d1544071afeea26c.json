{"ast":null,"code":"import PatientRadiographs from \"./PatientRadiographs.vue\";\nimport { ref, onMounted } from \"vue\";\nimport { getPatientsFromDoctor, getRadiographs } from \"../services/api-service\";\nexport default {\n  components: {\n    PatientRadiographs\n  },\n  setup() {\n    const patients = ref([]);\n    const selectedPatient = ref(null);\n    const selectedPatientRadiographs = ref([]);\n    const doctorId = localStorage.getItem(\"doctorId\");\n    console.log(\"doctorID: \", doctorId);\n    onMounted(async () => {\n      if (doctorId) {\n        try {\n          patients.value = await getPatientsFromDoctor(doctorId);\n        } catch (error) {\n          console.error(\"Errore nel caricamento dei pazienti:\", error);\n        }\n      } else {\n        console.error(\"Nessun DoctorID trovato nel localStorage.\");\n      }\n    });\n    const selectPatient = async patient => {\n      selectedPatient.value = patient;\n      selectedPatientRadiographs.value = []; // Svuota le radiografie precedenti\n\n      console.log(\"Patient ID selezionato:\", patient.userId); // Debug per verificare il patientId\n\n      if (!patient.userId) {\n        console.error(\"ID paziente non trovato.\");\n        return;\n      }\n      try {\n        selectedPatientRadiographs.value = (await getRadiographs(patient.userId)) || [];\n        console.log(\"Radiografie caricate:\", selectedPatientRadiographs.value); // Debug per verificare le radiografie caricate\n      } catch (error) {\n        console.error(\"Errore nel caricamento delle radiografie per il paziente:\", error);\n      }\n    };\n    return {\n      patients,\n      selectPatient,\n      selectedPatient,\n      selectedPatientRadiographs\n    };\n  }\n};","map":{"version":3,"names":["PatientRadiographs","ref","onMounted","getPatientsFromDoctor","getRadiographs","components","setup","patients","selectedPatient","selectedPatientRadiographs","doctorId","localStorage","getItem","console","log","value","error","selectPatient","patient","userId"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\DoctorDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <div class=\"container\">\r\n      <div class=\"header\">\r\n        <h1>Dashboard Dottore</h1>\r\n      </div>\r\n\r\n      <div v-if=\"patients.length > 0\">\r\n        <h2>Elenco Pazienti</h2>\r\n        <ul class=\"patient-list\">\r\n          <li\r\n            v-for=\"patient in patients\"\r\n            :key=\"patient.userId\"\r\n            @click=\"selectPatient(patient)\"\r\n            class=\"patient-item\"\r\n          >\r\n            {{ patient.name }} {{ patient.family_name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div v-else>\r\n        <p class=\"no-patients\">Nessun paziente associato trovato.</p>\r\n      </div>\r\n\r\n      <div v-if=\"selectedPatient\" class=\"details\">\r\n        <h2>Dettagli Paziente</h2>\r\n        <div class=\"patient-details\">\r\n          <p><strong>Nome:</strong> {{ selectedPatient.name }}</p>\r\n          <p><strong>Cognome:</strong> {{ selectedPatient.family_name }}</p>\r\n          <p><strong>Email:</strong> {{ selectedPatient.email }}</p>\r\n          <p>\r\n            <strong>Data di nascita:</strong> {{ selectedPatient.birthdate }}\r\n          </p>\r\n          <p>\r\n            <strong>Numero di telefono:</strong>\r\n            {{ selectedPatient.phone_number }}\r\n          </p>\r\n          <p><strong>Indirizzo:</strong> {{ selectedPatient.address }}</p>\r\n        </div>\r\n\r\n        <div class=\"radiographs-section\">\r\n          <PatientRadiographs\r\n            :radiographs=\"selectedPatientRadiographs\"\r\n            :patientId=\"selectedPatient.userId\"\r\n            :patientName=\"selectedPatient.name\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PatientRadiographs from \"./PatientRadiographs.vue\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { getPatientsFromDoctor, getRadiographs } from \"../services/api-service\";\r\n\r\nexport default {\r\n  components: {\r\n    PatientRadiographs,\r\n  },\r\n  setup() {\r\n    const patients = ref([]);\r\n    const selectedPatient = ref(null);\r\n    const selectedPatientRadiographs = ref([]);\r\n\r\n    const doctorId = localStorage.getItem(\"doctorId\");\r\n    console.log(\"doctorID: \", doctorId);\r\n\r\n    onMounted(async () => {\r\n      if (doctorId) {\r\n        try {\r\n          patients.value = await getPatientsFromDoctor(doctorId);\r\n        } catch (error) {\r\n          console.error(\"Errore nel caricamento dei pazienti:\", error);\r\n        }\r\n      } else {\r\n        console.error(\"Nessun DoctorID trovato nel localStorage.\");\r\n      }\r\n    });\r\n\r\n    const selectPatient = async (patient) => {\r\n      selectedPatient.value = patient;\r\n      selectedPatientRadiographs.value = []; // Svuota le radiografie precedenti\r\n\r\n      console.log(\"Patient ID selezionato:\", patient.userId); // Debug per verificare il patientId\r\n\r\n      if (!patient.userId) {\r\n        console.error(\"ID paziente non trovato.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        selectedPatientRadiographs.value =\r\n          (await getRadiographs(patient.userId)) || [];\r\n        console.log(\"Radiografie caricate:\", selectedPatientRadiographs.value); // Debug per verificare le radiografie caricate\r\n      } catch (error) {\r\n        console.error(\r\n          \"Errore nel caricamento delle radiografie per il paziente:\",\r\n          error\r\n        );\r\n      }\r\n    };\r\n\r\n    return {\r\n      patients,\r\n      selectPatient,\r\n      selectedPatient,\r\n      selectedPatientRadiographs,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard {\r\n  background: #ffffff;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.container {\r\n  max-width: 80%;\r\n  padding: 40px;\r\n  border-radius: 15px;\r\n  background: #ffffff;\r\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\r\n  margin-top: 100px;\r\n  width: 100%;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nh1 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nh2 {\r\n  font-size: 18px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.patient-list {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.patient-item {\r\n  cursor: pointer;\r\n  text-decoration: underline;\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n  color: #007bff;\r\n}\r\n\r\n.patient-item:hover {\r\n  color: #0056b3;\r\n}\r\n\r\n.no-patients {\r\n  font-size: 14px;\r\n  color: #999;\r\n}\r\n\r\n.details {\r\n  margin-top: 30px;\r\n}\r\n\r\n.patient-details p {\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.btn-next {\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  padding: 0.4rem;\r\n  cursor: pointer;\r\n  font-size: 13px;\r\n}\r\n\r\n.loading-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.loading-icon {\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n</style>\r\n"],"mappings":"AAqDA,OAAOA,kBAAiB,MAAO,0BAA0B;AACzD,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,qBAAqB,EAAEC,cAAa,QAAS,yBAAyB;AAE/E,eAAe;EACbC,UAAU,EAAE;IACVL;EACF,CAAC;EACDM,KAAKA,CAAA,EAAG;IACN,MAAMC,QAAO,GAAIN,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMO,eAAc,GAAIP,GAAG,CAAC,IAAI,CAAC;IACjC,MAAMQ,0BAAyB,GAAIR,GAAG,CAAC,EAAE,CAAC;IAE1C,MAAMS,QAAO,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjDC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEJ,QAAQ,CAAC;IAEnCR,SAAS,CAAC,YAAY;MACpB,IAAIQ,QAAQ,EAAE;QACZ,IAAI;UACFH,QAAQ,CAACQ,KAAI,GAAI,MAAMZ,qBAAqB,CAACO,QAAQ,CAAC;QACxD,EAAE,OAAOM,KAAK,EAAE;UACdH,OAAO,CAACG,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC9D;MACF,OAAO;QACLH,OAAO,CAACG,KAAK,CAAC,2CAA2C,CAAC;MAC5D;IACF,CAAC,CAAC;IAEF,MAAMC,aAAY,GAAI,MAAOC,OAAO,IAAK;MACvCV,eAAe,CAACO,KAAI,GAAIG,OAAO;MAC/BT,0BAA0B,CAACM,KAAI,GAAI,EAAE,EAAE;;MAEvCF,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEI,OAAO,CAACC,MAAM,CAAC,EAAE;;MAExD,IAAI,CAACD,OAAO,CAACC,MAAM,EAAE;QACnBN,OAAO,CAACG,KAAK,CAAC,0BAA0B,CAAC;QACzC;MACF;MAEA,IAAI;QACFP,0BAA0B,CAACM,KAAI,GAC7B,CAAC,MAAMX,cAAc,CAACc,OAAO,CAACC,MAAM,CAAC,KAAK,EAAE;QAC9CN,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEL,0BAA0B,CAACM,KAAK,CAAC,EAAE;MAC1E,EAAE,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CACX,2DAA2D,EAC3DA,KACF,CAAC;MACH;IACF,CAAC;IAED,OAAO;MACLT,QAAQ;MACRU,aAAa;MACbT,eAAe;MACfC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}