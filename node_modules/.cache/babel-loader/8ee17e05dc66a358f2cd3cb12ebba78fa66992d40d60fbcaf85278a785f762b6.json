{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-fda51896\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Dashboard Dottore\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Elenco Pazienti\", -1 /* HOISTED */));\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Nessun paziente associato trovato.\", -1 /* HOISTED */));\nconst _hoisted_7 = [_hoisted_6];\nconst _hoisted_8 = {\n  key: 2\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Dettagli Paziente\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Nome:\", -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Cognome:\", -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Email:\", -1 /* HOISTED */));\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Data di nascita:\", -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Numero di telefono:\", -1 /* HOISTED */));\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Indirizzo:\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_UploadRadiograph = _resolveComponent(\"UploadRadiograph\");\n  const _component_PatientRadiographs = _resolveComponent(\"PatientRadiographs\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, $setup.patients.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.patients, patient => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: patient.id,\n      onClick: $event => $setup.selectPatient(patient),\n      style: {\n        \"cursor\": \"pointer\",\n        \"text-decoration\": \"underline\"\n      }\n    }, _toDisplayString(patient.name) + \" \" + _toDisplayString(patient.surname), 9 /* TEXT, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [..._hoisted_7])), $setup.selectedPatient ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, [_hoisted_10, _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.name), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_11, _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.surname), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_12, _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.email), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_13, _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.dateOfBirth), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_14, _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.phoneNumber), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_15, _createTextVNode(\" \" + _toDisplayString($setup.selectedPatient.address), 1 /* TEXT */)]), _createCommentVNode(\" Aggiungi qui ulteriori attributi del paziente se necessario \")]), _createVNode(_component_UploadRadiograph, {\n    onUploadSuccess: $setup.handleUploadSuccess,\n    patientId: $setup.selectedPatient.id\n  }, null, 8 /* PROPS */, [\"onUploadSuccess\", \"patientId\"]), _createVNode(_component_PatientRadiographs, {\n    radiographs: $setup.selectedPatientRadiographs\n  }, null, 8 /* PROPS */, [\"radiographs\"])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","key","_hoisted_6","_createElementBlock","_hoisted_1","$setup","patients","length","_hoisted_2","_hoisted_3","_Fragment","_renderList","patient","id","onClick","$event","selectPatient","style","name","_toDisplayString","surname","_hoisted_4","_hoisted_5","_hoisted_7","selectedPatient","_hoisted_8","_hoisted_9","_hoisted_10","_createTextVNode","_hoisted_11","_hoisted_12","email","_hoisted_13","dateOfBirth","_hoisted_14","phoneNumber","_hoisted_15","address","_createCommentVNode","_createVNode","_component_UploadRadiograph","onUploadSuccess","handleUploadSuccess","patientId","_component_PatientRadiographs","radiographs","selectedPatientRadiographs"],"sources":["/Users/alessandromagnani/Desktop/UniversitaÌ€/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/DoctorDashboard.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Dashboard Dottore</h1>\n\n    <div v-if=\"patients.length > 0\">\n      <h2>Elenco Pazienti</h2>\n      <ul>\n        <li\n          v-for=\"patient in patients\"\n          :key=\"patient.id\"\n          @click=\"selectPatient(patient)\"\n          style=\"cursor: pointer; text-decoration: underline\"\n        >\n          {{ patient.name }} {{ patient.surname }}\n        </li>\n      </ul>\n    </div>\n    <div v-else>\n      <p>Nessun paziente associato trovato.</p>\n    </div>\n\n    <div v-if=\"selectedPatient\">\n      <h2>Dettagli Paziente</h2>\n      <div>\n        <p><strong>Nome:</strong> {{ selectedPatient.name }}</p>\n        <p><strong>Cognome:</strong> {{ selectedPatient.surname }}</p>\n        <p><strong>Email:</strong> {{ selectedPatient.email }}</p>\n        <p>\n          <strong>Data di nascita:</strong> {{ selectedPatient.dateOfBirth }}\n        </p>\n        <p>\n          <strong>Numero di telefono:</strong> {{ selectedPatient.phoneNumber }}\n        </p>\n        <p><strong>Indirizzo:</strong> {{ selectedPatient.address }}</p>\n        <!-- Aggiungi qui ulteriori attributi del paziente se necessario -->\n      </div>\n\n      <UploadRadiograph\n        @uploadSuccess=\"handleUploadSuccess\"\n        :patientId=\"selectedPatient.id\"\n      />\n\n      <PatientRadiographs :radiographs=\"selectedPatientRadiographs\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport PatientRadiographs from \"./PatientRadiographs.vue\";\nimport UploadRadiograph from \"./UploadRadiographs.vue\";\nimport { ref, onMounted } from \"vue\";\nimport { getPatientsFromDoctor, getRadiographs } from \"../services/api-service\";\n\nexport default {\n  components: {\n    PatientRadiographs,\n    UploadRadiograph,\n  },\n  setup() {\n    const patients = ref([]);\n    const selectedPatient = ref(null);\n    const selectedPatientRadiographs = ref([]);\n\n    // Ottieni il DoctorID dal localStorage\n    const doctorId = localStorage.getItem(\"doctorId\");\n\n    onMounted(async () => {\n      console.log(\"Cerco pazienti associati a: \" + doctorId);\n      if (doctorId) {\n        // Ottieni i pazienti associati\n        try {\n          patients.value = await getPatientsFromDoctor(doctorId);\n          console.log(\"patients.value: \", patients.value); // Stampa dopo l'assegnazione\n        } catch (error) {\n          console.error(\"Errore nel caricamento dei pazienti:\", error);\n        }\n      } else {\n        console.error(\"Nessun DoctorID trovato nel localStorage.\");\n      }\n    });\n\n    // Seleziona un paziente e ottieni le sue radiografie\n    const selectPatient = async (patient) => {\n      selectedPatient.value = patient;\n\n      if (!patient.id) {\n        console.error(\"ID paziente non trovato.\");\n        return;\n      }\n\n      try {\n        // Imposta le radiografie su un array vuoto se non ci sono radiografie\n        selectedPatientRadiographs.value =\n          (await getRadiographs(patient.id)) || [];\n      } catch (error) {\n        console.error(\n          \"Errore nel caricamento delle radiografie per il paziente:\",\n          error\n        );\n      }\n    };\n\n    const handleUploadSuccess = () => {\n      selectPatient(selectedPatient.value); // Ricarica le radiografie\n    };\n\n    return {\n      patients,\n      selectPatient,\n      handleUploadSuccess,\n      selectedPatient,\n      selectedPatientRadiographs,\n    };\n  },\n};\n</script>\n\n<style scoped>\n/* Puoi aggiungere qui il tuo stile personalizzato per la dashboard */\n</style>\n"],"mappings":";;gEAEIA,mBAAA,CAA0B,YAAtB,mBAAiB;;EAFzBC,GAAA;AAAA;gEAKMD,mBAAA,CAAwB,YAApB,iBAAe;mBALzB;;EAAAC,GAAA;AAAA;gEAkBMD,mBAAA,CAAyC,WAAtC,oCAAkC;oBAArCE,UAAyC,C;;EAlB/CD,GAAA;AAAA;gEAsBMD,mBAAA,CAA0B,YAAtB,mBAAiB;iEAEhBA,mBAAA,CAAsB,gBAAd,OAAK;iEACbA,mBAAA,CAAyB,gBAAjB,UAAQ;iEAChBA,mBAAA,CAAuB,gBAAf,QAAM;iEAEfA,mBAAA,CAAiC,gBAAzB,kBAAgB;iEAGxBA,mBAAA,CAAoC,gBAA5B,qBAAmB;iEAE1BA,mBAAA,CAA2B,gBAAnB,YAAU;;;;uBAhC3BG,mBAAA,CA2CM,cA1CJC,UAA0B,EAEfC,MAAA,CAAAC,QAAQ,CAACC,MAAM,Q,cAA1BJ,mBAAA,CAYM,OAhBVK,UAAA,GAKMC,UAAwB,EACxBT,mBAAA,CASK,c,kBARHG,mBAAA,CAOKO,SAAA,QAdbC,WAAA,CAQ4BN,MAAA,CAAAC,QAAQ,EAAnBM,OAAO;yBADhBT,mBAAA,CAOK;MALFF,GAAG,EAAEW,OAAO,CAACC,EAAE;MACfC,OAAK,EAAAC,MAAA,IAAEV,MAAA,CAAAW,aAAa,CAACJ,OAAO;MAC7BK,KAAmD,EAAnD;QAAA;QAAA;MAAA;wBAEGL,OAAO,CAACM,IAAI,IAAG,GAAC,GAAAC,gBAAA,CAAGP,OAAO,CAACQ,OAAO,wBAb/CC,UAAA;uDAiBIlB,mBAAA,CAEM,OAnBVmB,UAAA,MAAAC,UAAA,KAqBelB,MAAA,CAAAmB,eAAe,I,cAA1BrB,mBAAA,CAsBM,OA3CVsB,UAAA,GAsBMC,UAA0B,EAC1B1B,mBAAA,CAYM,cAXJA,mBAAA,CAAwD,YAArD2B,WAAsB,EAxBjCC,gBAAA,CAwBiC,GAAC,GAAAT,gBAAA,CAAGd,MAAA,CAAAmB,eAAe,CAACN,IAAI,iB,GACjDlB,mBAAA,CAA8D,YAA3D6B,WAAyB,EAzBpCD,gBAAA,CAyBoC,GAAC,GAAAT,gBAAA,CAAGd,MAAA,CAAAmB,eAAe,CAACJ,OAAO,iB,GACvDpB,mBAAA,CAA0D,YAAvD8B,WAAuB,EA1BlCF,gBAAA,CA0BkC,GAAC,GAAAT,gBAAA,CAAGd,MAAA,CAAAmB,eAAe,CAACO,KAAK,iB,GACnD/B,mBAAA,CAEI,YADFgC,WAAiC,EA5B3CJ,gBAAA,CA4B2C,GAAC,GAAAT,gBAAA,CAAGd,MAAA,CAAAmB,eAAe,CAACS,WAAW,iB,GAElEjC,mBAAA,CAEI,YADFkC,WAAoC,EA/B9CN,gBAAA,CA+B8C,GAAC,GAAAT,gBAAA,CAAGd,MAAA,CAAAmB,eAAe,CAACW,WAAW,iB,GAErEnC,mBAAA,CAAgE,YAA7DoC,WAA2B,EAjCtCR,gBAAA,CAiCsC,GAAC,GAAAT,gBAAA,CAAGd,MAAA,CAAAmB,eAAe,CAACa,OAAO,iB,GACzDC,mBAAA,iEAAoE,C,GAGtEC,YAAA,CAGEC,2BAAA;IAFCC,eAAa,EAAEpC,MAAA,CAAAqC,mBAAmB;IAClCC,SAAS,EAAEtC,MAAA,CAAAmB,eAAe,CAACX;6DAG9B0B,YAAA,CAAgEK,6BAAA;IAA3CC,WAAW,EAAExC,MAAA,CAAAyC;EAA0B,yC,KA1ClER,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}