{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      currentStep: 1,\n      loading: false,\n      showPassword: false,\n      showConfirmPassword: false,\n      showPasswordError: false,\n      isHover: false,\n      showDisabledIcon: false,\n      errors: {},\n      confirmPasswordTouched: false,\n      doctors: [],\n      // Array per memorizzare i dottori\n      form: {\n        nome: \"\",\n        cognome: \"\",\n        gender: \"\",\n        data: \"\",\n        address: \"\",\n        cap_code: \"\",\n        tax_code: \"\",\n        telefono: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        role: \"\",\n        // Aggiungi qui il ruolo se necessario\n        DoctorID: \"\" // Campo per DoctorID\n      }\n    };\n  },\n  created() {\n    // Recupera il ruolo dal local storage\n    this.form.role = localStorage.getItem(\"userRole\") || \"\";\n    this.fetchDoctors(); // Recupera l'elenco dei dottori\n  },\n  computed: {\n    // Computed property per la validazione della password\n    isPasswordValid() {\n      const password = this.form.password || \"\";\n      const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,}$/;\n      return regex.test(password);\n    }\n  },\n  methods: {\n    async fetchDoctors() {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5000/doctors\"); // Modifica con il tuo endpoint\n        this.doctors = response.data; // Supponendo che i dati siano in response.data\n      } catch (error) {\n        console.error(\"Errore nel recupero dei dottori:\", error);\n      }\n    },\n    goToHome() {\n      this.currentStep = 1;\n      this.form = {\n        nome: \"\",\n        cognome: \"\",\n        gender: \"\",\n        data: \"\",\n        address: \"\",\n        cap_code: \"\",\n        tax_code: \"\",\n        telefono: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        DoctorID: \"\"\n      };\n      this.$router.push(\"/welcome\");\n    },\n    isDoctor() {\n      return this.form.role === \"doctor\"; // Funzione per controllare se il ruolo è dottore\n    },\n    correctDate() {\n      const dateParts = this.form.data.split(\"-\");\n      const year = parseInt(dateParts[0], 10);\n      const month = parseInt(dateParts[1], 10);\n      const day = parseInt(dateParts[2], 10);\n\n      // Correzione dell'anno\n      if (year >= 3000) {\n        dateParts[0] = \"2006\";\n      } else if (year === 0) {\n        dateParts[0] = \"1900\";\n      }\n\n      // Correzione del mese\n      if (month > 12) {\n        dateParts[1] = \"12\";\n      }\n\n      // Correzione del giorno\n      if (day > 31) {\n        dateParts[2] = \"31\";\n      }\n\n      // Imposta la data corretta\n      this.form.data = dateParts.join(\"-\");\n    },\n    goToNextStep() {\n      if (this.isStepValid(this.currentStep)) {\n        if (this.currentStep === 3) {\n          this.onSubmit();\n        } else {\n          this.currentStep++;\n        }\n      }\n    },\n    goToPreviousStep() {\n      this.currentStep--;\n    },\n    toggleShowPassword() {\n      this.showPassword = !this.showPassword;\n    },\n    toggleShowConfirmPassword() {\n      this.showConfirmPassword = !this.showConfirmPassword;\n    },\n    async onSubmit() {\n      if (this.isStepValid(3)) {\n        this.loading = true;\n        this.errors = {};\n        try {\n          const {\n            username,\n            email,\n            password,\n            nome,\n            cognome,\n            data,\n            telefono,\n            gender,\n            address,\n            cap_code,\n            tax_code,\n            DoctorID\n          } = this.form;\n          console.log(\"Dati registrazione:\", {\n            username,\n            email,\n            password,\n            nome,\n            cognome,\n            data,\n            telefono,\n            gender,\n            address,\n            cap_code,\n            tax_code,\n            DoctorID,\n            // Aggiungi DoctorID al log\n            role: this.form.role // Assicurati di includere il ruolo\n          });\n\n          // Modifica l'URL per il backend che stai usando\n          await axios.post(\"http://127.0.0.1:5000/register\", {\n            username,\n            email,\n            password,\n            nome,\n            cognome,\n            data,\n            telefono,\n            gender,\n            address,\n            cap_code,\n            tax_code,\n            DoctorID,\n            // Aggiungi DoctorID al corpo della richiesta\n            role: this.form.role // Assicurati di includere il ruolo\n          });\n          this.successMessage = \"Registrazione avvenuta con successo! Controlla la tua email per verificare il tuo account.\";\n          this.loading = false;\n          this.currentStep = 4; // Passa al passo del messaggio di successo\n        } catch (error) {\n          console.error(\"Errore nella registrazione:\", error);\n          if (error.response) {\n            console.error(\"Dati risposta:\", error.response.data);\n            this.errors.general = error.response.data.error || \"Registrazione fallita\";\n          } else {\n            this.errors.general = error.message;\n          }\n          alert(\"Errore nella registrazione: \" + this.errors.general);\n          this.loading = false;\n        }\n      }\n    },\n    isStepValid(step) {\n      if (step === 1) {\n        return this.form.nome && this.form.cognome && this.form.gender && this.form.data;\n      } else if (step === 2) {\n        return this.form.address && this.form.cap_code && this.form.tax_code && this.form.telefono;\n      } else if (step === 3) {\n        return this.form.username && this.form.email && this.isPasswordValid && this.confirmPasswordTouched && this.form.password === this.form.confirmPassword && this.form.DoctorID // Aggiungi la validazione per DoctorID\n        ;\n      }\n      return false;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","currentStep","loading","showPassword","showConfirmPassword","showPasswordError","isHover","showDisabledIcon","errors","confirmPasswordTouched","doctors","form","nome","cognome","gender","address","cap_code","tax_code","telefono","username","email","password","confirmPassword","role","DoctorID","created","localStorage","getItem","fetchDoctors","computed","isPasswordValid","regex","test","methods","response","get","error","console","goToHome","$router","push","isDoctor","correctDate","dateParts","split","year","parseInt","month","day","join","goToNextStep","isStepValid","onSubmit","goToPreviousStep","toggleShowPassword","toggleShowConfirmPassword","log","post","successMessage","general","message","alert","step"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/UserRegister.vue"],"sourcesContent":["<template>\n  <div class=\"register\">\n    <div class=\"container mt-5\">\n      <div class=\"header\">\n        <button\n          v-if=\"currentStep > 1\"\n          class=\"back-button\"\n          @click=\"goToPreviousStep\"\n        >\n          <img src=\"@/assets/back-icon.svg\" alt=\"Indietro\" class=\"back-icon\" />\n        </button>\n      </div>\n\n      <span class=\"step-title\">Passaggio {{ currentStep }} di 4</span>\n      <h2 class=\"mb-4\">Crea un Account</h2>\n\n      <form @submit.prevent=\"onSubmit\">\n        <!-- Step 1: Dati Anagrafici -->\n        <div v-if=\"currentStep === 1\">\n          <div class=\"mb-3\">\n            <label for=\"nome\" class=\"form-label\">Nome</label>\n            <input\n              id=\"nome\"\n              v-model=\"form.nome\"\n              type=\"text\"\n              class=\"form-control\"\n              style=\"text-transform: uppercase\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"cognome\" class=\"form-label\">Cognome</label>\n            <input\n              id=\"cognome\"\n              v-model=\"form.cognome\"\n              type=\"text\"\n              class=\"form-control\"\n              style=\"text-transform: uppercase\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"gender\" class=\"form-label\">Genere</label>\n            <select\n              id=\"gender\"\n              v-model=\"form.gender\"\n              class=\"form-control\"\n              required\n            >\n              <option value=\"Male\">MASCHIO</option>\n              <option value=\"Female\">FEMMINA</option>\n            </select>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"data\" class=\"form-label\">Data di Nascita</label>\n            <input\n              id=\"data\"\n              v-model=\"form.data\"\n              type=\"date\"\n              class=\"form-control\"\n              @change=\"correctDate\"\n              style=\"text-transform: uppercase\"\n              required\n            />\n          </div>\n        </div>\n\n        <!-- Step 2: Dati di Contatto -->\n        <div v-if=\"currentStep === 2\">\n          <div class=\"mb-3\">\n            <label for=\"address\" class=\"form-label\">Indirizzo</label>\n            <input\n              id=\"address\"\n              v-model=\"form.address\"\n              type=\"text\"\n              class=\"form-control\"\n              style=\"text-transform: uppercase\"\n              required\n              placeholder=\"(es. Via Roma 1)\"\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"cap_code\" class=\"form-label\">CAP</label>\n            <input\n              id=\"cap_code\"\n              v-model=\"form.cap_code\"\n              type=\"number\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"tax_code\" class=\"form-label\">Codice Fiscale</label>\n            <input\n              id=\"tax_code\"\n              v-model=\"form.tax_code\"\n              type=\"text\"\n              class=\"form-control\"\n              style=\"text-transform: uppercase\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"telefono\" class=\"form-label\">Numero di Telefono</label>\n            <input\n              id=\"telefono\"\n              v-model=\"form.telefono\"\n              type=\"tel\"\n              class=\"form-control\"\n              required\n              placeholder=\"(es. +391234567890)\"\n            />\n          </div>\n        </div>\n\n        <!-- Step 3: Credenziali -->\n        <div v-if=\"currentStep === 3\">\n          <div class=\"mb-3\">\n            <label for=\"username\" class=\"form-label\">Username</label>\n            <input\n              id=\"username\"\n              v-model=\"form.username\"\n              type=\"text\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"email\" class=\"form-label\">Email</label>\n            <input\n              id=\"email\"\n              v-model=\"form.email\"\n              type=\"email\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"password\" class=\"form-label\"\n              >Password\n              <span\n                class=\"info-icon\"\n                title=\"Requisiti per la password: min 8 caratteri, almeno una maiuscola, una minuscola, un numero e un carattere speciale.\"\n              >\n                <img\n                  src=\"@/assets/info-icon.svg\"\n                  alt=\"Info\"\n                  class=\"info-image\"\n                />\n              </span>\n            </label>\n            <div class=\"input-group\">\n              <input\n                id=\"password\"\n                v-model=\"form.password\"\n                :type=\"showPassword ? 'text' : 'password'\"\n                class=\"form-control password-input\"\n                :class=\"{\n                  'is-invalid': !isPasswordValid && passwordInputTouched,\n                }\"\n                required\n                @input=\"passwordInputTouched = true\"\n                @paste.prevent\n              />\n              <button\n                type=\"button\"\n                class=\"btn eye-button\"\n                @click=\"toggleShowPassword\"\n              >\n                <img\n                  :src=\"\n                    showPassword\n                      ? require('@/assets/eye-off.svg')\n                      : require('@/assets/eye-on.svg')\n                  \"\n                  alt=\"Toggle Password Visibility\"\n                  class=\"eye-icon\"\n                />\n              </button>\n            </div>\n            <div\n              v-if=\"passwordInputTouched && !isPasswordValid\"\n              class=\"text-danger mt-1\"\n            >\n              La password deve contenere almeno: un numero, una lettera\n              maiuscola, una lettera minuscola e un carattere speciale ed essere\n              lunga almeno 8 caratteri.\n            </div>\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"confirmPassword\" class=\"form-label\"\n              >Conferma Password</label\n            >\n            <div class=\"input-group\">\n              <input\n                id=\"confirmPassword\"\n                v-model=\"form.confirmPassword\"\n                :type=\"showConfirmPassword ? 'text' : 'password'\"\n                class=\"form-control password-input\"\n                :class=\"{ 'is-invalid': showPasswordError }\"\n                required\n                @input=\"confirmPasswordTouched = true\"\n                @paste.prevent\n              />\n              <button\n                type=\"button\"\n                class=\"btn eye-button\"\n                @click=\"toggleShowConfirmPassword\"\n              >\n                <img\n                  :src=\"\n                    showConfirmPassword\n                      ? require('@/assets/eye-off.svg')\n                      : require('@/assets/eye-on.svg')\n                  \"\n                  alt=\"Toggle Password Visibility\"\n                  class=\"eye-icon\"\n                />\n              </button>\n            </div>\n            <div\n              v-if=\"\n                confirmPasswordTouched && form.password !== form.confirmPassword\n              \"\n              class=\"text-danger mt-1\"\n            >\n              Le password non corrispondono.\n            </div>\n          </div>\n\n          <!-- Campo DoctorID per Dottori -->\n          <div v-if=\"role === 'doctor'\" class=\"mb-3\">\n            <label for=\"doctorId\" class=\"form-label\">Doctor ID</label>\n            <input\n              id=\"doctorId\"\n              v-model=\"form.doctorId\"\n              type=\"text\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n\n          <!-- Menu a tendina per DoctorID per Pazienti -->\n          <div v-if=\"role === 'patient'\" class=\"mb-3\">\n            <label for=\"doctorId\" class=\"form-label\">Seleziona Doctor ID</label>\n            <select\n              id=\"doctorId\"\n              v-model=\"form.doctorId\"\n              class=\"form-control\"\n              required\n            >\n              <option\n                v-for=\"doctor in doctors\"\n                :key=\"doctor.id\"\n                :value=\"doctor.id\"\n              >\n                {{ doctor.name }} (ID: {{ doctor.id }})\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <!-- Bottone di avanzamento o submit -->\n        <div v-if=\"currentStep < 3\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-next\"\n            :disabled=\"!isStepValid(currentStep)\"\n            @click=\"goToNextStep\"\n            @mouseover=\"isHover = true\"\n            @mouseleave=\"isHover = false\"\n            @mouseenter=\"showDisabledIcon = !isStepValid(currentStep)\"\n          >\n            Avanti\n            <span\n              v-if=\"!isStepValid(currentStep) && isHover\"\n              class=\"disabled-icon\"\n            >\n              <img\n                src=\"@/assets/prohibition-icon.svg\"\n                alt=\"Non disponibile\"\n                class=\"prohibition-icon\"\n              />\n            </span>\n          </button>\n        </div>\n\n        <!-- Submit button (Step 3) -->\n        <div v-if=\"currentStep === 3\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-next\"\n            :disabled=\"loading || !isStepValid(currentStep)\"\n          >\n            <span v-if=\"loading\">Registrazione...</span>\n            <span v-else>Registrati</span>\n          </button>\n\n          <!-- Error message -->\n          <div v-if=\"errors.general\" class=\"invalid-feedback mt-3\">\n            {{ errors.general }}\n          </div>\n        </div>\n\n        <div v-if=\"currentStep === 4\">\n          <p>{{ successMessage }}</p>\n          <button class=\"btn btn-primary btn-next\" @click=\"goToHome\">\n            Torna alla home\n          </button>\n        </div>\n      </form>\n    </div>\n\n    <!-- Loading overlay -->\n    <div v-if=\"loading\" class=\"loading-overlay\">\n      <div class=\"loading-icon\">\n        <img src=\"@/assets/loading-icon.svg\" alt=\"Loading...\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      currentStep: 1,\n      loading: false,\n      showPassword: false,\n      showConfirmPassword: false,\n      showPasswordError: false,\n      isHover: false,\n      showDisabledIcon: false,\n      errors: {},\n      confirmPasswordTouched: false,\n      doctors: [], // Array per memorizzare i dottori\n      form: {\n        nome: \"\",\n        cognome: \"\",\n        gender: \"\",\n        data: \"\",\n        address: \"\",\n        cap_code: \"\",\n        tax_code: \"\",\n        telefono: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        role: \"\", // Aggiungi qui il ruolo se necessario\n        DoctorID: \"\", // Campo per DoctorID\n      },\n    };\n  },\n  created() {\n    // Recupera il ruolo dal local storage\n    this.form.role = localStorage.getItem(\"userRole\") || \"\";\n    this.fetchDoctors(); // Recupera l'elenco dei dottori\n  },\n  computed: {\n    // Computed property per la validazione della password\n    isPasswordValid() {\n      const password = this.form.password || \"\";\n      const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,}$/;\n      return regex.test(password);\n    },\n  },\n  methods: {\n    async fetchDoctors() {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5000/doctors\"); // Modifica con il tuo endpoint\n        this.doctors = response.data; // Supponendo che i dati siano in response.data\n      } catch (error) {\n        console.error(\"Errore nel recupero dei dottori:\", error);\n      }\n    },\n    goToHome() {\n      this.currentStep = 1;\n      this.form = {\n        nome: \"\",\n        cognome: \"\",\n        gender: \"\",\n        data: \"\",\n        address: \"\",\n        cap_code: \"\",\n        tax_code: \"\",\n        telefono: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        DoctorID: \"\",\n      };\n      this.$router.push(\"/welcome\");\n    },\n    isDoctor() {\n      return this.form.role === \"doctor\"; // Funzione per controllare se il ruolo è dottore\n    },\n    correctDate() {\n      const dateParts = this.form.data.split(\"-\");\n      const year = parseInt(dateParts[0], 10);\n      const month = parseInt(dateParts[1], 10);\n      const day = parseInt(dateParts[2], 10);\n\n      // Correzione dell'anno\n      if (year >= 3000) {\n        dateParts[0] = \"2006\";\n      } else if (year === 0) {\n        dateParts[0] = \"1900\";\n      }\n\n      // Correzione del mese\n      if (month > 12) {\n        dateParts[1] = \"12\";\n      }\n\n      // Correzione del giorno\n      if (day > 31) {\n        dateParts[2] = \"31\";\n      }\n\n      // Imposta la data corretta\n      this.form.data = dateParts.join(\"-\");\n    },\n    goToNextStep() {\n      if (this.isStepValid(this.currentStep)) {\n        if (this.currentStep === 3) {\n          this.onSubmit();\n        } else {\n          this.currentStep++;\n        }\n      }\n    },\n    goToPreviousStep() {\n      this.currentStep--;\n    },\n    toggleShowPassword() {\n      this.showPassword = !this.showPassword;\n    },\n    toggleShowConfirmPassword() {\n      this.showConfirmPassword = !this.showConfirmPassword;\n    },\n    async onSubmit() {\n      if (this.isStepValid(3)) {\n        this.loading = true;\n        this.errors = {};\n        try {\n          const {\n            username,\n            email,\n            password,\n            nome,\n            cognome,\n            data,\n            telefono,\n            gender,\n            address,\n            cap_code,\n            tax_code,\n            DoctorID,\n          } = this.form;\n\n          console.log(\"Dati registrazione:\", {\n            username,\n            email,\n            password,\n            nome,\n            cognome,\n            data,\n            telefono,\n            gender,\n            address,\n            cap_code,\n            tax_code,\n            DoctorID, // Aggiungi DoctorID al log\n            role: this.form.role // Assicurati di includere il ruolo\n          });\n\n          // Modifica l'URL per il backend che stai usando\n          await axios.post(\"http://127.0.0.1:5000/register\", {\n            username,\n            email,\n            password,\n            nome,\n            cognome,\n            data,\n            telefono,\n            gender,\n            address,\n            cap_code,\n            tax_code,\n            DoctorID, // Aggiungi DoctorID al corpo della richiesta\n            role: this.form.role // Assicurati di includere il ruolo\n          });\n\n          this.successMessage =\n            \"Registrazione avvenuta con successo! Controlla la tua email per verificare il tuo account.\";\n          this.loading = false;\n          this.currentStep = 4; // Passa al passo del messaggio di successo\n        } catch (error) {\n          console.error(\"Errore nella registrazione:\", error);\n          if (error.response) {\n            console.error(\"Dati risposta:\", error.response.data);\n            this.errors.general =\n              error.response.data.error || \"Registrazione fallita\";\n          } else {\n            this.errors.general = error.message;\n          }\n          alert(\"Errore nella registrazione: \" + this.errors.general);\n          this.loading = false;\n        }\n      }\n    },\n\n    isStepValid(step) {\n      if (step === 1) {\n        return (\n          this.form.nome &&\n          this.form.cognome &&\n          this.form.gender &&\n          this.form.data\n        );\n      } else if (step === 2) {\n        return (\n          this.form.address &&\n          this.form.cap_code &&\n          this.form.tax_code &&\n          this.form.telefono\n        );\n      } else if (step === 3) {\n        return (\n          this.form.username &&\n          this.form.email &&\n          this.isPasswordValid &&\n          this.confirmPasswordTouched &&\n          this.form.password === this.form.confirmPassword &&\n          this.form.DoctorID // Aggiungi la validazione per DoctorID\n        );\n      }\n      return false;\n    },\n  },\n};\n</script>\n\n\n<style scoped>\n.register {\n  background: #ffffff; /* Sfondo bianco */\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0);\n}\n\n.container {\n  max-width: 400px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 100px;\n  height: auto;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.back-button {\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  margin-left: -10px;\n}\n\n.back-icon {\n  width: 30px;\n  height: 30px;\n}\n\n.step-title {\n  font-size: 10px;\n  margin-bottom: 10px;\n}\n\nh2 {\n  font-size: 18px;\n  margin-bottom: 30px;\n}\n\n.form-label {\n  font-size: 12px;\n}\n\n.form-control {\n  background: #f2f2f2;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 12px;\n}\n\n.input-group {\n  position: relative;\n}\n\n.text-danger {\n  font-size: 0.8rem; /* Font più piccolo (puoi modificarlo a piacere) */\n}\n\n.eye-button {\n  background: transparent;\n  border: 1px solid #ccc;\n  cursor: pointer;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  width: 46px;\n}\n\n.eye-icon {\n  width: 18px;\n  height: 18px;\n  margin: auto;\n}\n\n.info-icon {\n  margin-left: 5px;\n  display: inline-block;\n  font-size: 12px;\n}\n\n.info-image {\n  width: 15px;\n  height: 15px;\n  vertical-align: middle;\n}\n\n.btn-next {\n  width: 100%;\n  margin-top: 15px;\n  padding: 0.4rem;\n  cursor: pointer;\n  font-size: 13px; /* Dimensione del testo più piccola */\n}\n\n.btn-next {\n  font-size: 13px; /* Dimensione del testo più piccola per il pulsante \"Avanti\" */\n}\n\n.btn-next:hover {\n  background-color: #c0c0c0;\n}\n\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 9999;\n}\n\n.loading-icon {\n  width: 50px;\n}\n\n.disabled-icon {\n  margin-left: 10px;\n}\n\n.prohibition-icon {\n  width: 16px;\n  height: 16px;\n  vertical-align: middle;\n  display: inline-block;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}