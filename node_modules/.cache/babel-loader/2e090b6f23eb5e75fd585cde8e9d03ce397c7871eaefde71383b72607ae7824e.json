{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-fda51896\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Dashboard Dottore\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PatientList = _resolveComponent(\"PatientList\");\n  const _component_UploadRadiograph = _resolveComponent(\"UploadRadiograph\");\n  const _component_PatientRadiographs = _resolveComponent(\"PatientRadiographs\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createVNode(_component_PatientList, {\n    patients: $setup.patients,\n    onSelectPatient: $setup.selectPatient\n  }, null, 8 /* PROPS */, [\"patients\", \"onSelectPatient\"]), $setup.selectedPatient ? (_openBlock(), _createBlock(_component_UploadRadiograph, {\n    key: 0,\n    onUploadSuccess: $setup.handleUploadSuccess,\n    patientId: $setup.selectedPatient.id\n  }, null, 8 /* PROPS */, [\"onUploadSuccess\", \"patientId\"])) : _createCommentVNode(\"v-if\", true), $setup.selectedPatient ? (_openBlock(), _createBlock(_component_PatientRadiographs, {\n    key: 1,\n    radiographs: $setup.selectedPatientRadiographs\n  }, null, 8 /* PROPS */, [\"radiographs\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_PatientList","patients","$setup","onSelectPatient","selectPatient","selectedPatient","_createBlock","_component_UploadRadiograph","key","onUploadSuccess","handleUploadSuccess","patientId","id","_createCommentVNode","_component_PatientRadiographs","radiographs","selectedPatientRadiographs"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\DoctorDashboard.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Dashboard Dottore</h1>\n    <PatientList :patients=\"patients\" @selectPatient=\"selectPatient\" />\n    <UploadRadiograph\n      v-if=\"selectedPatient\"\n      @uploadSuccess=\"handleUploadSuccess\"\n      :patientId=\"selectedPatient.id\"\n    />\n    <PatientRadiographs\n      :radiographs=\"selectedPatientRadiographs\"\n      v-if=\"selectedPatient\"\n    />\n  </div>\n</template>\n\n<script>\nimport PatientRadiographs from \"./PatientRadiographs.vue\";\nimport UploadRadiograph from \"./UploadRadiographs.vue\";\nimport { ref, onMounted } from \"vue\";\nimport { getPatients, getRadiographs } from \"../services/api-service\"; // Assicurati di importare getPatients\n\nexport default {\n  components: {\n    PatientRadiographs,\n    UploadRadiograph,\n  },\n  setup() {\n    const patients = ref([]);\n    const selectedPatient = ref(null);\n    const selectedPatientRadiographs = ref([]);\n\n    // Ottieni il DoctorID dal localStorage\n    const doctorId = localStorage.getItem(\"doctorId\");\n\n    onMounted(async () => {\n      console.log(\"Cerco pazienti associati a: \" + doctorId);\n      // Assicurati che doctorId non sia null\n      if (doctorId) {\n        // Ottieni i pazienti associati\n        patients.value = await getPatients(doctorId);\n      } else {\n        console.error(\"Nessun DoctorID trovato nel localStorage.\");\n      }\n    });\n\n    // Seleziona un paziente e ottieni le sue radiografie\n    const selectPatient = async (patient) => {\n      selectedPatient.value = patient;\n      selectedPatientRadiographs.value = await getRadiographs(patient.id);\n    };\n\n    const handleUploadSuccess = () => {\n      selectPatient(selectedPatient.value); // Ricarica le radiografie\n    };\n\n    return {\n      patients,\n      selectPatient,\n      handleUploadSuccess,\n      selectedPatient,\n      selectedPatientRadiographs,\n    };\n  },\n};\n</script>\n\n<style scoped>\n/* Puoi aggiungere qui il tuo stile personalizzato per la dashboard */\n</style>\n"],"mappings":";;gEAEIA,mBAAA,CAA0B,YAAtB,mBAAiB;;;;;uBADvBC,mBAAA,CAYM,cAXJC,UAA0B,EAC1BC,YAAA,CAAmEC,sBAAA;IAArDC,QAAQ,EAAEC,MAAA,CAAAD,QAAQ;IAAGE,eAAa,EAAED,MAAA,CAAAE;4DAE1CF,MAAA,CAAAG,eAAe,I,cADvBC,YAAA,CAIEC,2BAAA;IARNC,GAAA;IAMOC,eAAa,EAAEP,MAAA,CAAAQ,mBAAmB;IAClCC,SAAS,EAAET,MAAA,CAAAG,eAAe,CAACO;+DAPlCC,mBAAA,gBAWYX,MAAA,CAAAG,eAAe,I,cAFvBC,YAAA,CAGEQ,6BAAA;IAZNN,GAAA;IAUOO,WAAW,EAAEb,MAAA,CAAAc;8CAVpBH,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}