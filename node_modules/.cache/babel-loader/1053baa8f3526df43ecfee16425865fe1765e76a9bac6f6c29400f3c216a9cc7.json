{"ast":null,"code":"import { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\nimport { auth } from \"@/firebase\";\nimport { sendPasswordResetEmail } from \"firebase/auth\";\nimport EventBus from \"../eventBus\";\nimport { checkEmailVerification, signInUser, login, getAttemptsLeft } from \"@/services/api-service\";\nexport default {\n  name: \"UserLogin\",\n  setup() {\n    // Stato del form\n    const form = ref({\n      email: \"\",\n      password: \"\",\n      rememberMe: false\n    });\n\n    // Stato degli errori\n    const errors = ref({\n      email: \"\",\n      password: \"\",\n      general: \"\"\n    });\n    const router = useRouter();\n    const currentStep = ref(1);\n    const loading = ref(false);\n    const showPassword = ref(false);\n    const showMfaStep = ref(false); // Toggle MFA step visibility\n    const qrCodeUrl = ref(\"\"); // Store QR code URL\n    const session = ref(\"\"); // Store MFA session token\n    const mfaCode = ref(\"\"); // Store user input MFA code\n\n    // Funzione per passare allo step successivo\n    const goToNextStep = () => {\n      if (isStepValid(currentStep.value)) {\n        currentStep.value++;\n      }\n    };\n\n    // Funzione per tornare allo step precedente\n    const goToPreviousStep = () => {\n      currentStep.value--;\n    };\n\n    // Funzione per creare un account (stub)\n    const createAccount = role => {\n      localStorage.setItem(\"userRole\", role);\n      router.push({\n        name: \"UserRegister\"\n      });\n    };\n\n    // Funzione per validare il form\n    const validateForm = () => {\n      errors.value = {\n        email: form.value.email ? \"\" : \"Email è richiesta\",\n        password: form.value.password ? \"\" : \"Password è richiesta\"\n      };\n      return Object.values(errors.value).every(error => !error);\n    };\n\n    // Funzione per validare lo step\n    const isStepValid = step => {\n      if (step === 1) {\n        return form.value.email;\n      } else if (step === 2) {\n        return form.value.password;\n      }\n      return false;\n    };\n    const sendPasswordResetEmailHandler = async () => {\n      try {\n        await sendPasswordResetEmail(auth, form.value.email); // Passa l'oggetto auth come primo argomento\n      } catch (error) {\n        console.error(\"Errore durante l'invio dell'email di reset:\", error);\n        errors.value.general = \"Errore durante l'invio dell'email di reset.\";\n      }\n    };\n\n    // Funzione per mostrare/nascondere la password\n    const toggleShowPassword = () => {\n      showPassword.value = !showPassword.value;\n    };\n    const onSubmit = async () => {\n      if (!validateForm()) return;\n      loading.value = true;\n      errors.value.general = \"\"; // Reset errors\n\n      try {\n        // 1: Controllo email verificata\n        const emailVerified = await checkEmailVerification(form.value.email);\n        if (emailVerified) {\n          errors.value.general = emailVerified;\n          return;\n        }\n\n        // 2: Controllo tentativi di accesso\n        const attemptLeft = await getAttemptsLeft(form.value.email);\n        if (attemptLeft == 0) {\n          errors.value.general = \"Tentativi di accesso esauriti. Controlla la tua email per il link di reimpostazione della password.\";\n          return;\n        }\n        const user = await signInUser(auth, form.value.email, form.value.password);\n        console.log(\"Torno: \" + user);\n        if (!user) return;\n        if (!emailVerified) {\n          const user = await signInUser(auth, form.value.email, form.value.password);\n          if (!user) return; // Exit if sign-in failed\n\n          // Ottieni il token ID e invia al backend\n          const token = await getIdToken(user);\n          await handleLoginResponse(token);\n        } else {\n          errors.value.general = emailVerified;\n          return;\n        }\n      } catch (error) {\n        handleError(error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Funzione per ottenere il token ID\n    const getIdToken = async user => {\n      try {\n        return await user.getIdToken(); // Return the token\n      } catch (error) {\n        console.error(\"Errore durante l'ottenimento del token ID:\", error);\n        errors.value.general = \"Errore durante il login.\";\n      }\n    };\n\n    // Funzione per gestire la risposta del login\n    // Se si esegue in locale usare 127.0.0.1:5000, altrimenti 34.122.99.160\n    const handleLoginResponse = async token => {\n      await login(token);\n      try {\n        const response = await axios.post(\"http://127.0.0.1:5000/login\", {\n          idToken: token\n        });\n        storeUserData(response.data.user, token);\n        router.push({\n          name: \"WelcomePage\"\n        });\n      } catch (error) {\n        console.error(\"Errore durante la gestione della risposta del login:\", error);\n      }\n    };\n\n    // Funzione per memorizzare i dati dell'utente\n    const storeUserData = (userData, token) => {\n      localStorage.setItem(\"authToken\", token);\n      localStorage.setItem(\"username\", userData.email);\n      if (userData.doctorID) {\n        localStorage.setItem(\"doctorId\", userData.doctorID);\n      }\n      if (userData.role) {\n        localStorage.setItem(\"userRole\", userData.role);\n      }\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      localStorage.setItem(\"userData\", JSON.stringify(userData));\n      EventBus.emit(\"auth-changed\"); // Emit event for login notification\n    };\n\n    // Funzione per gestire gli errori\n    const handleError = error => {\n      console.error(\"Errore durante il processo di login:\", error);\n      if (error.code === \"auth/wrong-password\") {\n        errors.value.general = \"Password errata. Riprova.\";\n      } else if (error.code === \"auth/user-not-found\") {\n        errors.value.general = \"Utente non trovato. Controlla l'email.\";\n      } else if (error.code === \"auth/invalid-credential\") {\n        handleInvalidCredential();\n      } else if (error.code === \"auth/too-many-requests\") {\n        errors.value.general = \"Tentativi di accesso esauriti. Controlla la tua email per il link di reimpostazione della password.\";\n        sendPasswordResetEmailHandler(); // Trigger password reset\n      } else {\n        errors.value.general = \"Errore sconosciuto durante il login.\";\n      }\n    };\n\n    // Funzione per gestire credenziali non valide\n    // Se si esegue in locale usare 127.0.0.1:5000, altrimenti 34.122.99.160\n    const handleInvalidCredential = async () => {\n      try {\n        const decrementResponse = await axios.post(\"http://127.0.0.1:5000/decrement-attempts\", {\n          email: form.value.email\n        });\n        const attemptsRemaining = decrementResponse.data.loginAttemptsLeft;\n        if (attemptsRemaining == 0) {\n          errors.value.general = \"Tentativi di accesso esauriti. Controlla la tua email per il link di reimpostazione della password.\";\n          sendPasswordResetEmailHandler();\n        } else {\n          errors.value.general = `Password errata. Hai ${attemptsRemaining} tentativi rimanenti.`;\n        }\n      } catch (decrementError) {\n        console.error(\"Errore durante il decremento dei tentativi:\", decrementError);\n        errors.value.general = \"Errore nel decremento dei tentativi.\";\n      }\n    };\n    return {\n      form,\n      errors,\n      currentStep,\n      loading,\n      showPassword,\n      showMfaStep,\n      qrCodeUrl,\n      session,\n      mfaCode,\n      goToNextStep,\n      goToPreviousStep,\n      createAccount,\n      validateForm,\n      isStepValid,\n      toggleShowPassword,\n      onSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","axios","auth","sendPasswordResetEmail","EventBus","checkEmailVerification","signInUser","login","getAttemptsLeft","name","setup","form","email","password","rememberMe","errors","general","router","currentStep","loading","showPassword","showMfaStep","qrCodeUrl","session","mfaCode","goToNextStep","isStepValid","value","goToPreviousStep","createAccount","role","localStorage","setItem","push","validateForm","Object","values","every","error","step","sendPasswordResetEmailHandler","console","toggleShowPassword","onSubmit","emailVerified","attemptLeft","user","log","token","getIdToken","handleLoginResponse","handleError","response","post","idToken","storeUserData","data","userData","doctorID","defaults","headers","common","JSON","stringify","emit","code","handleInvalidCredential","decrementResponse","attemptsRemaining","loginAttemptsLeft","decrementError"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\UserLogin.vue"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <div class=\"container mt-5\">\n      <div class=\"header\">\n        <button\n          v-if=\"currentStep > 1\"\n          class=\"back-button\"\n          @click=\"goToPreviousStep\"\n        >\n          <img src=\"@/assets/back-icon.svg\" alt=\"Indietro\" class=\"back-icon\" />\n        </button>\n      </div>\n\n      <span class=\"step-title\">Passaggio {{ currentStep }} di 2</span>\n      <h2 class=\"mb-4\">Accedi al tuo Account</h2>\n\n      <!-- Step 1: Login Form -->\n      <form @submit.prevent=\"onSubmit\" v-if=\"!showMfaStep\">\n        <!-- Step 1: Inserisci Email -->\n        <div v-if=\"currentStep === 1\">\n          <div class=\"mb-3\">\n            <label for=\"email\" class=\"form-label\">Email</label>\n            <input\n              id=\"email\"\n              v-model=\"form.email\"\n              type=\"email\"\n              class=\"form-control\"\n              :class=\"{ 'is-invalid': errors.email }\"\n              required\n            />\n            <div class=\"invalid-feedback\">{{ errors.email }}</div>\n          </div>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-next\"\n            @click=\"goToNextStep\"\n            :disabled=\"!isStepValid(currentStep)\"\n          >\n            Avanti\n          </button>\n\n          <div class=\"line-container\">\n            <hr class=\"line\" />\n            <span class=\"or-text\">oppure</span>\n            <hr class=\"line\" />\n          </div>\n\n          <router-link\n            to=\"/register\"\n            class=\"btn btn-light btn-create-account\"\n            @click=\"createAccount('doctor')\"\n          >\n            Registrati come Dottore\n          </router-link>\n\n          <router-link\n            to=\"/register\"\n            class=\"btn btn-light btn-create-account\"\n            @click=\"createAccount('patient')\"\n          >\n            Registrati come Paziente\n          </router-link>\n        </div>\n\n        <!-- Step 2: Inserisci Password -->\n        <div v-if=\"currentStep === 2\">\n          <div class=\"email-display\">\n            <span class=\"email-text\">{{ form.email }}</span>\n            <span class=\"change-text\" @click=\"goToPreviousStep\">Cambia</span>\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"password\" class=\"form-label\">Password</label>\n            <div class=\"input-group\">\n              <input\n                id=\"password\"\n                v-model=\"form.password\"\n                :type=\"showPassword ? 'text' : 'password'\"\n                class=\"form-control\"\n                :class=\"{ 'is-invalid': errors.password }\"\n                required\n              />\n              <button\n                type=\"button\"\n                class=\"btn eye-button\"\n                @click=\"toggleShowPassword\"\n              >\n                <img\n                  :src=\"\n                    showPassword\n                      ? require('@/assets/eye-off.svg')\n                      : require('@/assets/eye-on.svg')\n                  \"\n                  alt=\"Toggle Password Visibility\"\n                  class=\"eye-icon\"\n                />\n              </button>\n            </div>\n            <div v-if=\"errors.general\" class=\"text-danger mt-1\">\n              {{ errors.general }}\n            </div>\n          </div>\n\n          <div class=\"mb-3 form-check\">\n            <input\n              id=\"rememberMe\"\n              v-model=\"form.rememberMe\"\n              type=\"checkbox\"\n              class=\"form-check-input\"\n            />\n            <label for=\"rememberMe\" class=\"form-check-label\">Ricordami</label>\n          </div>\n\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-next\"\n            :disabled=\"loading || !isStepValid(currentStep)\"\n          >\n            <span v-if=\"loading\">Login...</span>\n            <span v-else>Accedi</span>\n          </button>\n\n          <div class=\"line-container\">\n            <hr class=\"line\" />\n            <span class=\"or-text\">oppure</span>\n            <hr class=\"line\" />\n          </div>\n\n          <router-link\n            to=\"/register\"\n            class=\"btn btn-light btn-create-account\"\n            @click=\"createAccount('doctor')\"\n          >\n            Registrati come Dottore\n          </router-link>\n\n          <router-link\n            to=\"/register\"\n            class=\"btn btn-light btn-create-account\"\n            @click=\"createAccount('patient')\"\n          >\n            Registrati come Paziente\n          </router-link>\n\n          <div v-if=\"errors.general\" class=\"invalid-feedback mt-3\">\n            {{ errors.general }}\n          </div>\n        </div>\n      </form>\n    </div>\n\n    <!-- Loading overlay -->\n    <div v-if=\"loading\" class=\"loading-overlay\">\n      <div class=\"loading-icon\">\n        <img src=\"@/assets/loading-icon.svg\" alt=\"Loading...\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\nimport { auth } from \"@/firebase\";\nimport { sendPasswordResetEmail } from \"firebase/auth\";\nimport EventBus from \"../eventBus\";\nimport {\n  checkEmailVerification,\n  signInUser,\n  login,\n  getAttemptsLeft,\n} from \"@/services/api-service\";\n\nexport default {\n  name: \"UserLogin\",\n  setup() {\n    // Stato del form\n    const form = ref({\n      email: \"\",\n      password: \"\",\n      rememberMe: false,\n    });\n\n    // Stato degli errori\n    const errors = ref({\n      email: \"\",\n      password: \"\",\n      general: \"\",\n    });\n\n    const router = useRouter();\n    const currentStep = ref(1);\n    const loading = ref(false);\n    const showPassword = ref(false);\n    const showMfaStep = ref(false); // Toggle MFA step visibility\n    const qrCodeUrl = ref(\"\"); // Store QR code URL\n    const session = ref(\"\"); // Store MFA session token\n    const mfaCode = ref(\"\"); // Store user input MFA code\n\n    // Funzione per passare allo step successivo\n    const goToNextStep = () => {\n      if (isStepValid(currentStep.value)) {\n        currentStep.value++;\n      }\n    };\n\n    // Funzione per tornare allo step precedente\n    const goToPreviousStep = () => {\n      currentStep.value--;\n    };\n\n    // Funzione per creare un account (stub)\n    const createAccount = (role) => {\n      localStorage.setItem(\"userRole\", role);\n      router.push({ name: \"UserRegister\" });\n    };\n\n    // Funzione per validare il form\n    const validateForm = () => {\n      errors.value = {\n        email: form.value.email ? \"\" : \"Email è richiesta\",\n        password: form.value.password ? \"\" : \"Password è richiesta\",\n      };\n      return Object.values(errors.value).every((error) => !error);\n    };\n\n    // Funzione per validare lo step\n    const isStepValid = (step) => {\n      if (step === 1) {\n        return form.value.email;\n      } else if (step === 2) {\n        return form.value.password;\n      }\n      return false;\n    };\n\n    const sendPasswordResetEmailHandler = async () => {\n      try {\n        await sendPasswordResetEmail(auth, form.value.email); // Passa l'oggetto auth come primo argomento\n      } catch (error) {\n        console.error(\"Errore durante l'invio dell'email di reset:\", error);\n        errors.value.general = \"Errore durante l'invio dell'email di reset.\";\n      }\n    };\n\n    // Funzione per mostrare/nascondere la password\n    const toggleShowPassword = () => {\n      showPassword.value = !showPassword.value;\n    };\n\n    const onSubmit = async () => {\n      if (!validateForm()) return;\n\n      loading.value = true;\n      errors.value.general = \"\"; // Reset errors\n\n      try {\n        // 1: Controllo email verificata\n        const emailVerified = await checkEmailVerification(form.value.email);\n        if (emailVerified) {\n          errors.value.general = emailVerified;\n          return;\n        }\n\n        // 2: Controllo tentativi di accesso\n        const attemptLeft = await getAttemptsLeft(form.value.email);\n        if (attemptLeft == 0) {\n          errors.value.general =\n            \"Tentativi di accesso esauriti. Controlla la tua email per il link di reimpostazione della password.\";\n          return;\n        }\n\n        const user = await signInUser(\n          auth,\n          form.value.email,\n          form.value.password\n        );\n        console.log(\"Torno: \" + user);\n        if (!user) return;\n\n\n\n        if (!emailVerified) {\n          const user = await signInUser(\n            auth,\n            form.value.email,\n            form.value.password\n          );\n          if (!user) return; // Exit if sign-in failed\n\n          // Ottieni il token ID e invia al backend\n          const token = await getIdToken(user);\n          await handleLoginResponse(token);\n        } else {\n          errors.value.general = emailVerified;\n          return;\n        }\n      } catch (error) {\n        handleError(error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Funzione per ottenere il token ID\n    const getIdToken = async (user) => {\n      try {\n        return await user.getIdToken(); // Return the token\n      } catch (error) {\n        console.error(\"Errore durante l'ottenimento del token ID:\", error);\n        errors.value.general = \"Errore durante il login.\";\n      }\n    };\n\n    // Funzione per gestire la risposta del login\n    // Se si esegue in locale usare 127.0.0.1:5000, altrimenti 34.122.99.160\n    const handleLoginResponse = async (token) => {\n      await login(token);\n      try {\n        const response = await axios.post(\"http://127.0.0.1:5000/login\", {\n          idToken: token,\n        });\n        storeUserData(response.data.user, token);\n        router.push({ name: \"WelcomePage\" });\n      } catch (error) {\n        console.error(\n          \"Errore durante la gestione della risposta del login:\",\n          error\n        );\n      }\n    };\n\n    // Funzione per memorizzare i dati dell'utente\n    const storeUserData = (userData, token) => {\n      localStorage.setItem(\"authToken\", token);\n      localStorage.setItem(\"username\", userData.email);\n\n      if (userData.doctorID) {\n        localStorage.setItem(\"doctorId\", userData.doctorID);\n      }\n\n      if (userData.role) {\n        localStorage.setItem(\"userRole\", userData.role);\n      }\n\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      localStorage.setItem(\"userData\", JSON.stringify(userData));\n\n      EventBus.emit(\"auth-changed\"); // Emit event for login notification\n    };\n\n    // Funzione per gestire gli errori\n    const handleError = (error) => {\n      console.error(\"Errore durante il processo di login:\", error);\n      if (error.code === \"auth/wrong-password\") {\n        errors.value.general = \"Password errata. Riprova.\";\n      } else if (error.code === \"auth/user-not-found\") {\n        errors.value.general = \"Utente non trovato. Controlla l'email.\";\n      } else if (error.code === \"auth/invalid-credential\") {\n        handleInvalidCredential();\n      } else if (error.code === \"auth/too-many-requests\") {\n        errors.value.general =\n          \"Tentativi di accesso esauriti. Controlla la tua email per il link di reimpostazione della password.\";\n        sendPasswordResetEmailHandler(); // Trigger password reset\n      } else {\n        errors.value.general = \"Errore sconosciuto durante il login.\";\n      }\n    };\n\n    // Funzione per gestire credenziali non valide\n    // Se si esegue in locale usare 127.0.0.1:5000, altrimenti 34.122.99.160\n    const handleInvalidCredential = async () => {\n      try {\n        const decrementResponse = await axios.post(\n          \"http://127.0.0.1:5000/decrement-attempts\",\n          { email: form.value.email }\n        );\n\n        const attemptsRemaining = decrementResponse.data.loginAttemptsLeft;\n        if (attemptsRemaining == 0) {\n          errors.value.general =\n            \"Tentativi di accesso esauriti. Controlla la tua email per il link di reimpostazione della password.\";\n          sendPasswordResetEmailHandler();\n        } else {\n          errors.value.general = `Password errata. Hai ${attemptsRemaining} tentativi rimanenti.`;\n        }\n      } catch (decrementError) {\n        console.error(\n          \"Errore durante il decremento dei tentativi:\",\n          decrementError\n        );\n        errors.value.general = \"Errore nel decremento dei tentativi.\";\n      }\n    };\n\n    return {\n      form,\n      errors,\n      currentStep,\n      loading,\n      showPassword,\n      showMfaStep,\n      qrCodeUrl,\n      session,\n      mfaCode,\n      goToNextStep,\n      goToPreviousStep,\n      createAccount,\n      validateForm,\n      isStepValid,\n      toggleShowPassword,\n      onSubmit,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.login {\n  background: #ffffff; /* Sfondo bianco */\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0px 0px rgba(0, 0, 0, 0);\n}\n\n.container {\n  max-width: 400px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 100px;\n  height: auto;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.back-button {\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  margin-left: -10px;\n}\n\n.back-icon {\n  width: 30px;\n  height: 30px;\n}\n\n.step-title {\n  font-size: 10px;\n  margin-bottom: 10px;\n}\n\nh2 {\n  font-size: 18px;\n  margin-bottom: 30px;\n}\n\n.form-label {\n  font-size: 12px;\n}\n\n.form-control {\n  background: #f2f2f2;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 12px;\n}\n\n.form-check-label {\n  font-size: 12px; /* Dimensione del testo più piccola */\n}\n\n.form-check-input {\n  transform: scale(0.75); /* Riduce la dimensione della checkbox di poco */\n  margin-top: 5px; /* Sposta leggermente la checkbox verso il basso per allineamento */\n}\n\n.input-group {\n  position: relative;\n}\n\n.eye-button {\n  background: transparent;\n  border: 1px solid #ccc;\n  cursor: pointer;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  width: 46px;\n}\n\n.eye-icon {\n  width: 18px;\n  height: 18px;\n  margin: auto;\n}\n\n.btn-next {\n  width: 100%;\n  margin-top: 10px;\n  padding: 0.4rem;\n  cursor: pointer;\n}\n\n.line-container {\n  display: flex;\n  align-items: center;\n  margin: 1rem 0;\n}\n\n.line {\n  flex: 1;\n}\n\n.or-text {\n  margin: 0 1rem;\n  font-size: small;\n}\n\n.btn-create-account {\n  background: #d9d9d9; /* Colore grigio chiaro */\n  color: black; /* Colore del testo */\n  width: 100%;\n  margin-top: 15px; /* Spazio sopra il pulsante */\n  padding: 0.4rem; /* Ridotto per i pulsanti, più corto verticalmente */\n  font-size: 13px; /* Dimensione del testo più piccola */\n}\n\n.btn-next {\n  font-size: 13px; /* Dimensione del testo più piccola per il pulsante \"Avanti\" */\n}\n\n.email-display {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.email-text {\n  font-size: 14px; /* Dimensione testo per l'email */\n  color: black; /* Colore del testo */\n}\n\n.change-text {\n  font-size: 14px; /* Dimensione testo per \"Cambia\" */\n  color: black; /* Colore del testo */\n  text-decoration: underline; /* Sottolinea il testo */\n  cursor: pointer; /* Aggiunge il cursore pointer */\n}\n\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.loading-icon {\n  width: 50px;\n  height: 50px;\n}\n\n.text-danger {\n  font-size: 0.8rem; /* Font più piccolo (puoi modificarlo a piacere) */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}