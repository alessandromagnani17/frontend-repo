{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport HomePage from \"./views/HomePage.vue\";\nimport UserLogin from \"./components/UserLogin.vue\";\nimport UserRegister from \"./components/UserRegister.vue\";\nimport WelcomePage from \"./components/WelcomePage.vue\";\nimport DoctorDashboard from \"./components/DoctorDashboard.vue\";\nimport DashboardPage from \"./components/DashboardPage.vue\";\nimport ProfilePage from \"./views/ProfilePage.vue\";\nimport SettingsPage from \"./views/SettingsPage.vue\";\nimport ViewRadiographs from \"./views/ViewRadiographs.vue\";\nimport ReportsPage from \"./views/ReportsPage.vue\";\nimport ManagePatients from \"./views/ManagePatients.vue\";\nconst routes = [{\n  path: \"/\",\n  name: \"HomePage\",\n  component: HomePage\n}, {\n  path: \"/login\",\n  name: \"UserLogin\",\n  component: UserLogin,\n  meta: {\n    requiresGuest: true\n  }\n}, {\n  path: \"/register\",\n  name: \"UserRegister\",\n  component: UserRegister,\n  meta: {\n    requiresGuest: true\n  }\n}, {\n  path: \"/welcome\",\n  name: \"WelcomePage\",\n  component: WelcomePage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/dashboard\",\n  name: \"DashboardPage\",\n  component: DashboardPage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/profile\",\n  name: \"ProfilePage\",\n  component: ProfilePage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/settings\",\n  name: \"SettingsPage\",\n  component: SettingsPage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/view-radiographs\",\n  name: \"ViewRadiographs\",\n  component: ViewRadiographs,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/reports\",\n  name: \"ReportsPage\",\n  component: ReportsPage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/manage-patients\",\n  name: \"ManagePatients\",\n  component: ManagePatients,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/doctor-dashboard\",\n  name: \"DoctorDashboard\",\n  component: DoctorDashboard,\n  meta: {\n    requiresAuth: true\n  } // Proteggi la rotta\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Route guard to protect authenticated routes and redirect guests\nrouter.beforeEach((to, from, next) => {\n  const authToken = localStorage.getItem(\"authToken\");\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    // Check if the user is authenticated\n    if (!authToken) {\n      // If no token, redirect to login\n      return next({\n        name: \"UserLogin\"\n      });\n    }\n  }\n  if (to.matched.some(record => record.meta.requiresGuest)) {\n    // Prevent logged-in users from accessing login/register routes\n    if (authToken) {\n      return next({\n        name: \"WelcomePage\"\n      }); // Redirect to the welcome page if already logged in\n    }\n  }\n  next(); // Always proceed to the next route if checks pass\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomePage","UserLogin","UserRegister","WelcomePage","DoctorDashboard","DashboardPage","ProfilePage","SettingsPage","ViewRadiographs","ReportsPage","ManagePatients","routes","path","name","component","meta","requiresGuest","requiresAuth","router","history","beforeEach","to","from","next","authToken","localStorage","getItem","matched","some","record"],"sources":["C:/Users/Utente/Desktop/osteoarthritis-project/frontend/src/router.js"],"sourcesContent":["import { createRouter, createWebHistory } from \"vue-router\";\r\nimport HomePage from \"./views/HomePage.vue\";\r\nimport UserLogin from \"./components/UserLogin.vue\";\r\nimport UserRegister from \"./components/UserRegister.vue\";\r\nimport WelcomePage from \"./components/WelcomePage.vue\";\r\nimport DoctorDashboard from \"./components/DoctorDashboard.vue\";\r\nimport DashboardPage from \"./components/DashboardPage.vue\";\r\nimport ProfilePage from \"./views/ProfilePage.vue\";\r\nimport SettingsPage from \"./views/SettingsPage.vue\";\r\nimport ViewRadiographs from \"./views/ViewRadiographs.vue\";\r\nimport ReportsPage from \"./views/ReportsPage.vue\";\r\nimport ManagePatients from \"./views/ManagePatients.vue\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    name: \"HomePage\",\r\n    component: HomePage,\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    name: \"UserLogin\",\r\n    component: UserLogin,\r\n    meta: { requiresGuest: true },\r\n  },\r\n  {\r\n    path: \"/register\",\r\n    name: \"UserRegister\",\r\n    component: UserRegister,\r\n    meta: { requiresGuest: true },\r\n  },\r\n  {\r\n    path: \"/welcome\",\r\n    name: \"WelcomePage\",\r\n    component: WelcomePage,\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"DashboardPage\",\r\n    component: DashboardPage,\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: \"/profile\",\r\n    name: \"ProfilePage\",\r\n    component: ProfilePage,\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: \"/settings\",\r\n    name: \"SettingsPage\",\r\n    component: SettingsPage,\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: \"/view-radiographs\",\r\n    name: \"ViewRadiographs\",\r\n    component: ViewRadiographs,\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: \"/reports\",\r\n    name: \"ReportsPage\",\r\n    component: ReportsPage,\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: \"/manage-patients\",\r\n    name: \"ManagePatients\",\r\n    component: ManagePatients,\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: \"/doctor-dashboard\",\r\n    name: \"DoctorDashboard\",\r\n    component: DoctorDashboard,\r\n    meta: { requiresAuth: true }, // Proteggi la rotta\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n});\r\n\r\n// Route guard to protect authenticated routes and redirect guests\r\nrouter.beforeEach((to, from, next) => {\r\n  const authToken = localStorage.getItem(\"authToken\");\r\n\r\n  if (to.matched.some((record) => record.meta.requiresAuth)) {\r\n    // Check if the user is authenticated\r\n    if (!authToken) {\r\n      // If no token, redirect to login\r\n      return next({ name: \"UserLogin\" });\r\n    }\r\n  }\r\n\r\n  if (to.matched.some((record) => record.meta.requiresGuest)) {\r\n    // Prevent logged-in users from accessing login/register routes\r\n    if (authToken) {\r\n      return next({ name: \"WelcomePage\" }); // Redirect to the welcome page if already logged in\r\n    }\r\n  }\r\n\r\n  next(); // Always proceed to the next route if checks pass\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}