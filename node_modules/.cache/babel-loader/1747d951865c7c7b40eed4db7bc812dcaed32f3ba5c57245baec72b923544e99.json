{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"welcome\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[0] || (_cache[0] = [_createElementVNode(\"div\", {\n    class: \"container mt-5\"\n  }, [_createElementVNode(\"h5\", null, [_createElementVNode(\"strong\", null, \"Visualizzazione radiografia\")]), _createElementVNode(\"div\", {\n    class: \"card prediction-card mb-3\"\n  }, [_createElementVNode(\"div\", {\n    class: \"card-body\"\n  })])], -1 /* HOISTED */)]));\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_cache","_createElementVNode"],"sources":["C:\\Users\\Utente\\Desktop\\osteoarthritis-project\\frontend\\src\\components\\RadiographyDetail.vue"],"sourcesContent":["<template>\n  <div class=\"welcome\">\n    <div class=\"container mt-5\">\n      <h5><strong>Visualizzazione radiografia</strong></h5>\n      <div class=\"card prediction-card mb-3\">\n        <div class=\"card-body\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\n\nexport default {\n  setup() {\n    const radiograph = ref(null);\n    const radiographyInfo = ref(\"\");\n\n    const retrieveRadiographyInformation = async (url) => {\n      try {\n        const response = await fetch(url);\n        if (response.ok) {\n          const text = await response.text();\n          radiographyInfo.value = text;\n          console.log(\"Contenuto del file info.txt:\", radiographyInfo.value);\n        } else {\n          console.error(\"Errore nel recupero del file:\", response.statusText);\n        }\n      } catch (error) {\n        console.error(\"Errore durante il fetch:\", error);\n      }\n    };\n\n    onMounted(async () => {\n      const radiographData = JSON.parse(window.location.search.substring(1));\n      radiograph.value = radiographData;\n      console.log(\"Radiograph id:\", radiograph.value.radiography_id);\n      await retrieveRadiographyInformation(radiograph.value.info_txt);\n    });\n\n    return {\n      radiograph,\n      radiographyInfo,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.welcome {\n  background: #ffffff; /* Sfondo bianco */\n  min-height: 100vh;\n  display: flex;\n  align-items: center; /* Centra verticalmente */\n  justify-content: center; /* Centra orizzontalmente */\n}\n\n.container {\n  max-width: 90%; /* Modifica qui per utilizzare una percentuale */\n  padding: 5%; /* Usa percentuali per il padding */\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 10%; /* Usa percentuali per il margine superiore */\n  height: auto;\n  text-align: center;\n  flex-grow: 1;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;uBAApBC,mBAAA,CAOM,OAPNC,UAOM,EAAAC,MAAA,QAAAA,MAAA,OANJC,mBAAA,CAKM;IALDJ,KAAK,EAAC;EAAgB,IACzBI,mBAAA,CAAqD,aAAjDA,mBAAA,CAA4C,gBAApC,6BAA2B,E,GACvCA,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAA2B,IACpCI,mBAAA,CAA6B;IAAxBJ,KAAK,EAAC;EAAW,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}