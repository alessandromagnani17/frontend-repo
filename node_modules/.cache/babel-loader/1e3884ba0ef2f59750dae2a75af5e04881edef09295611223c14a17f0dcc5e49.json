{"ast":null,"code":"import { getUserData, updateUserData } from \"@/services/api-service\";\nexport default {\n  name: \"ProfilePage\",\n  data() {\n    return {\n      userData: {},\n      editingField: {},\n      editableValues: {},\n      displayFields: {\n        name: {\n          label: \"Nome\"\n        },\n        family_name: {\n          label: \"Cognome\"\n        },\n        username: {\n          label: \"Username\"\n        },\n        email: {\n          label: \"Email\"\n        },\n        birthdate: {\n          label: \"Data di Nascita\"\n        },\n        phone_number: {\n          label: \"Telefono\"\n        },\n        address: {\n          label: \"Indirizzo\"\n        },\n        cap_code: {\n          label: \"CAP\"\n        },\n        gender: {\n          label: \"Genere\"\n        },\n        tax_code: {\n          label: \"Codice Fiscale\"\n        }\n      }\n    };\n  },\n  mounted() {\n    this.loadUserData();\n  },\n  methods: {\n    async loadUserData() {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const userId = userData?.userId;\n      if (!userId) {\n        console.error(\"ID utente non definito\");\n        alert(\"Errore: ID utente non trovato nel localStorage\");\n        return;\n      }\n      try {\n        console.log(\"Richiesta dati per userId:\", userId);\n        const data = await getUserData(userId);\n        if (!data) {\n          alert(\"Nessun dato utente ricevuto dal server\");\n          return;\n        }\n        this.userData = data;\n        console.log(\"Dati utente ricevuti:\", data);\n        this.resetEditableValues();\n      } catch (error) {\n        console.error(\"Errore dettagliato:\", error.response?.data || error.message);\n        alert(`Errore durante il caricamento dei dati utente: ${error.response?.data?.error || error.message}`);\n      }\n    },\n    resetEditableValues() {\n      Object.keys(this.displayFields).forEach(key => {\n        this.editableValues[key] = this.userData[key];\n        this.editingField[key] = false;\n      });\n    },\n    startEditing(field) {\n      this.editingField[field] = true;\n    },\n    async saveField(field) {\n      const newValue = this.editableValues[field];\n      if (newValue !== this.userData[field]) {\n        try {\n          await this.updateUserData(field, newValue);\n          alert(\"Informazione aggiornata con successo!\");\n          this.loadUserData();\n        } catch (error) {\n          alert(\"Si è verificato un errore durante l'aggiornamento.\");\n        }\n      }\n      this.editingField[field] = false;\n    },\n    async updateUserData(field, value) {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const userId = userData?.userId;\n      if (!userId) {\n        alert(\"Si è verificato un errore, l'ID utente non è disponibile.\");\n        return;\n      }\n      await updateUserData(userId, field, value);\n    }\n  }\n};","map":{"version":3,"names":["getUserData","updateUserData","name","data","userData","editingField","editableValues","displayFields","label","family_name","username","email","birthdate","phone_number","address","cap_code","gender","tax_code","mounted","loadUserData","methods","JSON","parse","localStorage","getItem","userId","console","error","alert","log","resetEditableValues","response","message","Object","keys","forEach","key","startEditing","field","saveField","newValue","value"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/views/ProfilePage.vue"],"sourcesContent":["<template>\n  <div class=\"profile\">\n    <div class=\"container mt-5\">\n      <h1>Benvenuto nel tuo Profilo!</h1>\n      <div class=\"user-info\">\n        <div v-for=\"(value, key) in displayFields\" :key=\"key\" class=\"user-item\">\n          <p>\n            <strong>{{ value.label }}:</strong>\n            <span v-if=\"!editingField[key]\">{{ userData[key] }}</span>\n            <input\n              v-else\n              type=\"text\"\n              v-model=\"editableValues[key]\"\n              class=\"edit-input\"\n            />\n            <button\n              v-if=\"!editingField[key]\"\n              class=\"btn-edit\"\n              @click=\"startEditing(key)\"\n            >\n              <img src=\"@/assets/modify.svg\" alt=\"Modifica\" class=\"edit-icon\" />\n            </button>\n            <button v-else class=\"btn-save\" @click=\"saveField(key)\">\n              Salva\n            </button>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getUserData, updateUserData } from \"@/services/api-service\";\n\nexport default {\n  name: \"ProfilePage\",\n  data() {\n    return {\n      userData: {},\n      editingField: {},\n      editableValues: {},\n      displayFields: {\n        name: { label: \"Nome\" },\n        family_name: { label: \"Cognome\" },\n        username: { label: \"Username\" },\n        email: { label: \"Email\" },\n        birthdate: { label: \"Data di Nascita\" },\n        phone_number: { label: \"Telefono\" },\n        address: { label: \"Indirizzo\" },\n        cap_code: { label: \"CAP\" },\n        gender: { label: \"Genere\" },\n        tax_code: { label: \"Codice Fiscale\" },\n      },\n    };\n  },\n  mounted() {\n    this.loadUserData();\n  },\n  methods: {\n    async loadUserData() {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const userId = userData?.userId;\n      if (!userId) {\n        console.error(\"ID utente non definito\");\n        alert(\"Errore: ID utente non trovato nel localStorage\");\n        return;\n      }\n\n      try {\n        console.log(\"Richiesta dati per userId:\", userId);\n        const data = await getUserData(userId);\n        if (!data) {\n          alert(\"Nessun dato utente ricevuto dal server\");\n          return;\n        }\n        this.userData = data;\n        console.log(\"Dati utente ricevuti:\", data);\n        this.resetEditableValues();\n      } catch (error) {\n        console.error(\"Errore dettagliato:\", error.response?.data || error.message);\n        alert(\n          `Errore durante il caricamento dei dati utente: ${error.response?.data?.error || error.message}`\n        );\n      }\n    },\n    resetEditableValues() {\n      Object.keys(this.displayFields).forEach((key) => {\n        this.editableValues[key] = this.userData[key];\n        this.editingField[key] = false;\n      });\n    },\n    startEditing(field) {\n      this.editingField[field] = true;\n    },\n    async saveField(field) {\n      const newValue = this.editableValues[field];\n      if (newValue !== this.userData[field]) {\n        try {\n          await this.updateUserData(field, newValue);\n          alert(\"Informazione aggiornata con successo!\");\n          this.loadUserData();\n        } catch (error) {\n          alert(\"Si è verificato un errore durante l'aggiornamento.\");\n        }\n      }\n      this.editingField[field] = false;\n    },\n    async updateUserData(field, value) {\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\n      const userId = userData?.userId;\n      if (!userId) {\n        alert(\"Si è verificato un errore, l'ID utente non è disponibile.\");\n        return;\n      }\n\n      await updateUserData(userId, field, value);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  max-width: 600px;\n  padding: 40px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\n  margin-top: 100px;\n  height: auto;\n  text-align: left;\n}\n\nh1 {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\n.user-info {\n  font-size: 14px;\n  line-height: 1.5;\n}\n\n.user-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n}\n\n.user-item strong {\n  margin-right: 5px;\n}\n\n.btn-edit {\n  background: none;\n  border: none;\n  cursor: pointer;\n  margin-left: 5px;\n}\n\n.edit-icon {\n  width: 30px;\n  height: 30px;\n  margin-left: 5px;\n  vertical-align: middle;\n}\n\n.edit-input {\n  padding: 5px;\n  font-size: 14px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n}\n\n.btn-save {\n  background-color: #007bff;\n  color: white;\n  padding: 0.3rem;\n  border-radius: 5px;\n  cursor: pointer;\n  min-width: 80px;\n}\n\n.btn-save:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}