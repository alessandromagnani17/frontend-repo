{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"calendar-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"success-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Calendario Attività\", -1 /* HOISTED */)), _createCommentVNode(\" Messaggio di successo \"), $data.successMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($data.successMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Aggiungi qui il calendario e altre funzionalità \")]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","$data","successMessage","_hoisted_2","_toDisplayString"],"sources":["/Users/alessandromagnani/Desktop/Università/applicazioni-e-servizi-web/osteoarthritis-project/frontend/src/components/ActivityCalendar.vue"],"sourcesContent":["<template>\n  <div class=\"calendar-container\">\n    <h1>Calendario Attività</h1>\n\n    <!-- Messaggio di successo -->\n    <div v-if=\"successMessage\" class=\"success-message\">\n      {{ successMessage }}\n    </div>\n    <!-- Aggiungi qui il calendario e altre funzionalità -->\n  </div>\n</template>\n\n<script>\nimport EventBus from \"@/eventBus\";\n\nexport default {\n  name: \"ActivityCalendar\",\n  data() {\n    return {\n      loadingPrediction: false, // Stato per il caricamento della predizione\n      successMessage: \"\", // Messaggio di successo dinamico\n    };\n  },\n  mounted() {\n    EventBus.on(\"upload-success\", () => {\n      console.log(\"Caricamento della radiografia completato\");\n      this.successMessage = \"CIAO CARICAMENTO FATTO\";\n      this.$forceUpdate();\n    });\n\n    EventBus.on(\"upload-error\", (error) => {\n      console.error(\"Errore durante il caricamento:\", error);\n      // Mostra un messaggio d'errore o prendi altre azioni\n    });\n    const userRole = localStorage.getItem(\"userRole\");\n    if (userRole === \"doctor\") {\n      console.log(\"Sono un medico\");\n    } else if (userRole === \"patient\") {\n      console.log(\"Sono un paziente\");\n    } else {\n      console.log(\"Ruolo utente non identificato\");\n    }\n  },\n};\n</script>\n\n<style scoped>\n/* Stili per il messaggio \"Nuovo caricamento\" */\n.loading-message {\n  font-size: 1.2em;\n  color: #ff4500; /* Colore per il messaggio di caricamento */\n  margin-top: 20px;\n}\n\n/* Stile per il messaggio di successo */\n.success-message {\n  font-size: 1.5em;\n  color: #28a745; /* Colore verde per indicare successo */\n  margin-top: 20px;\n  text-align: center; /* Centra il messaggio */\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAoB;;EADjCC,GAAA;EAK+BD,KAAK,EAAC;;;uBAJnCE,mBAAA,CAQM,OARNC,UAQM,G,0BAPJC,mBAAA,CAA4B,YAAxB,qBAAmB,sBAEvBC,mBAAA,2BAA8B,EACnBC,KAAA,CAAAC,cAAc,I,cAAzBL,mBAAA,CAEM,OAFNM,UAEM,EAAAC,gBAAA,CADDH,KAAA,CAAAC,cAAc,oBANvBF,mBAAA,gBAQIA,mBAAA,qDAAwD,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}